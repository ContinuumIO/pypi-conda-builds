Removing old build directory
Removing old work directory
BUILD START: oslo.serialization-1.5.0-py27_0
Fetching package metadata: ......
Solving package specifications: .+ /home/ubuntu/miniconda/envs/_build/bin/python setup.py install
running install
running build
running build_py
creating build
creating build/lib
creating build/lib/oslo
copying oslo/__init__.py -> build/lib/oslo
creating build/lib/oslo/serialization
copying oslo/serialization/jsonutils.py -> build/lib/oslo/serialization
copying oslo/serialization/__init__.py -> build/lib/oslo/serialization
creating build/lib/oslo_serialization
creating build/lib/oslo_serialization/tests
copying oslo_serialization/tests/test_jsonutils.py -> build/lib/oslo_serialization/tests
copying oslo_serialization/tests/__init__.py -> build/lib/oslo_serialization/tests
copying oslo_serialization/msgpackutils.py -> build/lib/oslo_serialization
copying oslo_serialization/jsonutils.py -> build/lib/oslo_serialization
copying oslo_serialization/__init__.py -> build/lib/oslo_serialization
running egg_info
writing requirements to oslo.serialization.egg-info/requires.txt
writing oslo.serialization.egg-info/PKG-INFO
writing namespace_packages to oslo.serialization.egg-info/namespace_packages.txt
writing top-level names to oslo.serialization.egg-info/top_level.txt
writing dependency_links to oslo.serialization.egg-info/dependency_links.txt
[pbr] Reusing existing SOURCES.txt
running install_lib
creating /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo
creating /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo/serialization
copying build/lib/oslo/serialization/jsonutils.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo/serialization
copying build/lib/oslo/serialization/__init__.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo/serialization
copying build/lib/oslo/__init__.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo
creating /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization
copying build/lib/oslo_serialization/msgpackutils.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization
copying build/lib/oslo_serialization/jsonutils.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization
creating /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/tests
copying build/lib/oslo_serialization/tests/test_jsonutils.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/tests
copying build/lib/oslo_serialization/tests/__init__.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/tests
copying build/lib/oslo_serialization/__init__.py -> /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo/serialization/jsonutils.py to jsonutils.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo/serialization/__init__.py to __init__.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo/__init__.py to __init__.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/msgpackutils.py to msgpackutils.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/jsonutils.py to jsonutils.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/tests/test_jsonutils.py to test_jsonutils.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/tests/__init__.py to __init__.pyc
byte-compiling /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo_serialization/__init__.py to __init__.pyc
running install_egg_info
Copying oslo.serialization.egg-info to /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo.serialization-1.5.0-py2.7.egg-info
Installing /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/oslo.serialization-1.5.0-py2.7-nspkg.pth
running install_scripts

The following NEW packages will be INSTALLED:

    openssl:    1.0.1k-1    
    pbr:        1.0.1-py27_0
    pip:        6.1.1-py27_0
    python:     2.7.9-3     
    readline:   6.2-2       
    setuptools: 16.0-py27_0 
    sqlite:     3.8.4.1-1   
    system:     5.8-2       
    tk:         8.5.18-0    
    zlib:       1.2.8-0     

Linking packages ...
[                    ]|                                                  |   0%[openssl             ]|                                                  |   0%[readline            ]|#####                                             |  10%[sqlite              ]|##########                                        |  20%[system              ]|###############                                   |  30%[tk                  ]|####################                              |  40%[zlib                ]|#########################                         |  50%[python              ]|##############################                    |  60%[setuptools          ]|###################################               |  70%[pbr                 ]|########################################          |  80%[pip                 ]|#############################################     |  90%[      COMPLETE      ]|##################################################| 100%
Removing old work directory
Source cache directory is: /home/ubuntu/miniconda/conda-bld/src_cache
Found source in cache: oslo.serialization-1.5.0.tar.gz
Extracting download
Package: oslo.serialization-1.5.0-py27_0
source tree in: /home/ubuntu/miniconda/conda-bld/work/oslo.serialization-1.5.0
number of files: 25
Fixing permissions
Fixing permissions
BUILD END: oslo.serialization-1.5.0-py27_0
Nothing to test for: oslo.serialization-1.5.0-py27_0
# If you want to upload this package to binstar.org later, type:
#
# $ binstar upload /home/ubuntu/miniconda/conda-bld/linux-64/oslo.serialization-1.5.0-py27_0.tar.bz2
#
# To have conda build upload to binstar automatically, use
# $ conda config --set binstar_upload yes

