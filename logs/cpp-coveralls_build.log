Removing old build directory
Removing old work directory
BUILD START: cpp-coveralls-0.3.7-py_0
Fetching package metadata: ......
Solving package specifications: .+ /home/ubuntu/miniconda/envs/_build/bin/python setup.py install
running install
running bdist_egg
running egg_info
writing requirements to cpp_coveralls.egg-info/requires.txt
writing cpp_coveralls.egg-info/PKG-INFO
writing top-level names to cpp_coveralls.egg-info/top_level.txt
writing dependency_links to cpp_coveralls.egg-info/dependency_links.txt
writing entry points to cpp_coveralls.egg-info/entry_points.txt
reading manifest file 'cpp_coveralls.egg-info/SOURCES.txt'
reading manifest template 'MANIFEST.in'
writing manifest file 'cpp_coveralls.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_py
creating build
creating build/lib
creating build/lib/cpp_coveralls
copying cpp_coveralls/coverage_test.py -> build/lib/cpp_coveralls
copying cpp_coveralls/gitrepo.py -> build/lib/cpp_coveralls
copying cpp_coveralls/coverage.py -> build/lib/cpp_coveralls
copying cpp_coveralls/__init__.py -> build/lib/cpp_coveralls
copying cpp_coveralls/report.py -> build/lib/cpp_coveralls
creating build/bdist.linux-x86_64
creating build/bdist.linux-x86_64/egg
creating build/bdist.linux-x86_64/egg/cpp_coveralls
copying build/lib/cpp_coveralls/coverage_test.py -> build/bdist.linux-x86_64/egg/cpp_coveralls
copying build/lib/cpp_coveralls/gitrepo.py -> build/bdist.linux-x86_64/egg/cpp_coveralls
copying build/lib/cpp_coveralls/coverage.py -> build/bdist.linux-x86_64/egg/cpp_coveralls
copying build/lib/cpp_coveralls/__init__.py -> build/bdist.linux-x86_64/egg/cpp_coveralls
copying build/lib/cpp_coveralls/report.py -> build/bdist.linux-x86_64/egg/cpp_coveralls
byte-compiling build/bdist.linux-x86_64/egg/cpp_coveralls/coverage_test.py to coverage_test.pyc
byte-compiling build/bdist.linux-x86_64/egg/cpp_coveralls/gitrepo.py to gitrepo.pyc
byte-compiling build/bdist.linux-x86_64/egg/cpp_coveralls/coverage.py to coverage.pyc
byte-compiling build/bdist.linux-x86_64/egg/cpp_coveralls/__init__.py to __init__.pyc
byte-compiling build/bdist.linux-x86_64/egg/cpp_coveralls/report.py to report.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/entry_points.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/pbr.json -> build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/requires.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying cpp_coveralls.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
zip_safe flag not set; analyzing archive contents...
creating dist
creating 'dist/cpp_coveralls-0.3.7-py2.7.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing cpp_coveralls-0.3.7-py2.7.egg
Copying cpp_coveralls-0.3.7-py2.7.egg to /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages
Adding cpp-coveralls 0.3.7 to easy-install.pth file
Installing cpp-coveralls script to /home/ubuntu/miniconda/envs/_build/bin
Installing coveralls script to /home/ubuntu/miniconda/envs/_build/bin

Installed /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/cpp_coveralls-0.3.7-py2.7.egg
Processing dependencies for cpp-coveralls==0.3.7
Searching for requests==2.7.0
Best match: requests 2.7.0
Adding requests 2.7.0 to easy-install.pth file

Using /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages
Finished processing dependencies for cpp-coveralls==0.3.7

The following NEW packages will be INSTALLED:

    openssl:    1.0.1k-1    
    pip:        7.0.3-py27_0
    python:     2.7.10-0    
    readline:   6.2-2       
    requests:   2.7.0-py27_0
    setuptools: 17.0-py27_0 
    sqlite:     3.8.4.1-1   
    system:     5.8-2       
    tk:         8.5.18-0    
    zlib:       1.2.8-0     

Linking packages ...
[                    ]|                                                  |   0%[openssl             ]|                                                  |   0%[readline            ]|#####                                             |  10%[sqlite              ]|##########                                        |  20%[system              ]|###############                                   |  30%[tk                  ]|####################                              |  40%[zlib                ]|#########################                         |  50%[python              ]|##############################                    |  60%[requests            ]|###################################               |  70%[setuptools          ]|########################################          |  80%[pip                 ]|#############################################     |  90%[      COMPLETE      ]|##################################################| 100%
Removing old work directory
Source cache directory is: /home/ubuntu/miniconda/conda-bld/src_cache
Found source in cache: cpp-coveralls-0.3.7.tar.gz
Extracting download
Package: cpp-coveralls-0.3.7-py_0
source tree in: /home/ubuntu/miniconda/conda-bld/work/cpp-coveralls-0.3.7
found egg: /home/ubuntu/miniconda/envs/_build/lib/python2.7/site-packages/cpp_coveralls-0.3.7-py2.7.egg
number of files: 4
Fixing permissions
Fixing permissions
BUILD END: cpp-coveralls-0.3.7-py_0
TEST START: cpp-coveralls-0.3.7-py_0
Fetching package metadata: ......
Solving package specifications: .===== testing package: cpp-coveralls-0.3.7-py_0 =====
import: u'cpp_coveralls'
===== cpp-coveralls-0.3.7-py_0 OK =====
+ coveralls --help
usage: coveralls [-h] [--verbose] [--dryrun] [--gcov FILE]
                 [--gcov-options GCOV_OPTS] [-r DIR] [-b DIR] [-e DIR|FILE]
                 [-i DIR|FILE] [-E REGEXP] [-x EXT] [-y FILE] [-n] [-t TOKEN]
                 [--encodings ENCODINGS [ENCODINGS ...]] [--dump [FILE]]

optional arguments:
  -h, --help            show this help message and exit
  --verbose             print verbose messages
  --dryrun              run coveralls without uploading report
  --gcov FILE           set the location of gcov
  --gcov-options GCOV_OPTS
                        set the options given to gcov
  -r DIR, --root DIR    set the root directory
  -b DIR, --build-root DIR
                        set the directory from which gcov will be called; by
                        default gcov is run in the directory of the .o files;
                        however the paths of the sources are often relative to
                        the directory from which the compiler was run and
                        these relative paths are saved in the .o file; when
                        this happens, gcov needs to run in the same directory
                        as the compiler in order to find the source files
  -e DIR|FILE, --exclude DIR|FILE
                        set exclude file or directory
  -i DIR|FILE, --include DIR|FILE
                        set include file or directory
  -E REGEXP, --exclude-pattern REGEXP
                        set exclude file/directory pattern
  -x EXT, --extension EXT
                        set extension of files to process
  -y FILE, --coveralls-yaml FILE
                        coveralls yaml file name (default: .coveralls.yml)
  -n, --no-gcov         do not run gcov
  -t TOKEN, --repo-token TOKEN, --repo_token TOKEN
                        set the repo_token of this project, alternatively you
                        can set the environmental variable
                        COVERALLS_REPO_TOKEN
  --encodings ENCODINGS [ENCODINGS ...]
                        source encodings to try in order of preference
                        (default: ['utf-8', 'latin-1'])
  --dump [FILE]         dump JSON payload to a file
+ cpp-coveralls --help
usage: coveralls [-h] [--verbose] [--dryrun] [--gcov FILE]
                 [--gcov-options GCOV_OPTS] [-r DIR] [-b DIR] [-e DIR|FILE]
                 [-i DIR|FILE] [-E REGEXP] [-x EXT] [-y FILE] [-n] [-t TOKEN]
                 [--encodings ENCODINGS [ENCODINGS ...]] [--dump [FILE]]

optional arguments:
  -h, --help            show this help message and exit
  --verbose             print verbose messages
  --dryrun              run coveralls without uploading report
  --gcov FILE           set the location of gcov
  --gcov-options GCOV_OPTS
                        set the options given to gcov
  -r DIR, --root DIR    set the root directory
  -b DIR, --build-root DIR
                        set the directory from which gcov will be called; by
                        default gcov is run in the directory of the .o files;
                        however the paths of the sources are often relative to
                        the directory from which the compiler was run and
                        these relative paths are saved in the .o file; when
                        this happens, gcov needs to run in the same directory
                        as the compiler in order to find the source files
  -e DIR|FILE, --exclude DIR|FILE
                        set exclude file or directory
  -i DIR|FILE, --include DIR|FILE
                        set include file or directory
  -E REGEXP, --exclude-pattern REGEXP
                        set exclude file/directory pattern
  -x EXT, --extension EXT
                        set extension of files to process
  -y FILE, --coveralls-yaml FILE
                        coveralls yaml file name (default: .coveralls.yml)
  -n, --no-gcov         do not run gcov
  -t TOKEN, --repo-token TOKEN, --repo_token TOKEN
                        set the repo_token of this project, alternatively you
                        can set the environmental variable
                        COVERALLS_REPO_TOKEN
  --encodings ENCODINGS [ENCODINGS ...]
                        source encodings to try in order of preference
                        (default: ['utf-8', 'latin-1'])
  --dump [FILE]         dump JSON payload to a file

The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    cpp-coveralls-0.3.7        |             py_0          97 KB

The following NEW packages will be INSTALLED:

    cpp-coveralls: 0.3.7-py_0  
    openssl:       1.0.1k-1    
    pip:           7.0.3-py27_0
    python:        2.7.10-0    
    readline:      6.2-2       
    requests:      2.7.0-py27_0
    setuptools:    17.0-py27_0 
    sqlite:        3.8.4.1-1   
    system:        5.8-2       
    tk:            8.5.18-0    
    zlib:          1.2.8-0     

Fetching packages ...
cpp-coveralls-   0% |                              | ETA:  --:--:--   0.00  B/scpp-coveralls-  16% |#####                          | ETA:  0:00:00  47.07 MB/scpp-coveralls-  32% |##########                     | ETA:  0:00:00  58.61 MB/scpp-coveralls-  49% |###############                | ETA:  0:00:00  62.78 MB/scpp-coveralls-  65% |####################           | ETA:  0:00:00  67.21 MB/scpp-coveralls-  82% |#########################      | ETA:  0:00:00  70.25 MB/scpp-coveralls-  98% |############################## | ETA:  0:00:00  72.65 MB/scpp-coveralls- 100% |###############################| ETA:  0:00:00  66.93 MB/scpp-coveralls- 100% |###############################| Time: 0:00:00  57.92 MB/s
Extracting packages ...
[      COMPLETE      ]|                                                  |   0%[cpp-coveralls       ]|                                                  |   0%[cpp-coveralls       ]|                                                  |   0%[      COMPLETE      ]|##################################################| 100%
Linking packages ...
[      COMPLETE      ]|                                                  |   0%[openssl             ]|                                                  |   0%[openssl             ]|                                                  |   0%[readline            ]|####                                              |   9%[sqlite              ]|#########                                         |  18%[system              ]|#############                                     |  27%[tk                  ]|##################                                |  36%[zlib                ]|######################                            |  45%[python              ]|###########################                       |  54%[requests            ]|###############################                   |  63%[setuptools          ]|####################################              |  72%[cpp-coveralls       ]|########################################          |  81%[pip                 ]|#############################################     |  90%[      COMPLETE      ]|##################################################| 100%
TEST END: cpp-coveralls-0.3.7-py_0
# If you want to upload this package to binstar.org later, type:
#
# $ binstar upload /home/ubuntu/miniconda/conda-bld/noarch/cpp-coveralls-0.3.7-py_0.tar.bz2
#
# To have conda build upload to binstar automatically, use
# $ conda config --set binstar_upload yes

