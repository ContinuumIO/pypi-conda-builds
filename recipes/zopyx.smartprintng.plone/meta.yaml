package:
  name: zopyx.smartprintng.plone
  version: "2.1.27"

source:
  fn: zopyx.smartprintng.plone-2.1.27.zip
  url: https://pypi.python.org/packages/source/z/zopyx.smartprintng.plone/zopyx.smartprintng.plone-2.1.27.zip
  md5: b35ab817c42f7a4a991a1cb1b5cc07de
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - zopyx.smartprintng.plone = zopyx.smartprintng.plone:main
    #
    # Would create an entry point called zopyx.smartprintng.plone that calls zopyx.smartprintng.plone.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - beautifulsoup
    - zopyx.smartprintng.client
    - zopyx.convert2
    - lxml
    - uuid
    - pillow
    - archetypes.schemaextender
    - unittest2

  run:
    - python
    - setuptools
    - setuptools
    - beautifulsoup
    - zopyx.smartprintng.client
    - zopyx.convert2
    - lxml
    - uuid
    - pillow
    - archetypes.schemaextender
    - unittest2

test:
  # Python imports
  imports:
    - zopyx
    - zopyx.smartprintng
    - zopyx.smartprintng.plone
    - zopyx.smartprintng.plone.browser
    - zopyx.smartprintng.plone.browser.tests
    - zopyx.smartprintng.plone.browser.types
    - zopyx.smartprintng.plone.extender
    - zopyx.smartprintng.plone.transforms
    - zopyx.smartprintng.plone.transforms.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/zopyx.smartprintng.plone
  license: GPL
  summary: 'Produce & Publisher server integration with Plone'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
