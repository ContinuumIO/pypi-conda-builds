package:
  name: asm.cmsui
  version: "0.1.18"

source:
  fn: asm.cmsui-0.1.18.tar.gz
  url: https://pypi.python.org/packages/source/a/asm.cmsui/asm.cmsui-0.1.18.tar.gz
  md5: 876285898ec7a64e23d9ea8f2ad59b53
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - asm.cmsui = asm.cmsui:main
    #
    # Would create an entry point called asm.cmsui that calls asm.cmsui.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - zodb3
    - asm.cms
    - gocept.selenium
    - grok
    - hurry.query
    - hurry.resource
    - hurry.tinymce
    - lxml
    - magic
    - megrok.pagelet
    - setuptools
    - simplejson
    - transaction
    - z3c.flashmessage
    - zope.app.component
    - zope.app.container
    - zope.app.folder
    - zope.app.form
    - zope.app.publication
    - zope.app.testing
    - zope.component
    - zope.copypastemove
    - zope.event
    - zope.interface
    - zope.intid
    - zope.testbrowser
    - zope.lifecycleevent
    - zope.security
    - zope.traversing

  run:
    - python
    - zodb3
    - asm.cms
    - gocept.selenium
    - grok
    - hurry.query
    - hurry.resource
    - hurry.tinymce
    - lxml
    - magic
    - megrok.pagelet
    - setuptools
    - simplejson
    - transaction
    - z3c.flashmessage
    - zope.app.component
    - zope.app.container
    - zope.app.folder
    - zope.app.form
    - zope.app.publication
    - zope.app.testing
    - zope.component
    - zope.copypastemove
    - zope.event
    - zope.interface
    - zope.intid
    - zope.testbrowser
    - zope.lifecycleevent
    - zope.security
    - zope.traversing

test:
  # Python imports
  imports:
    - asm
    - asm.cmsui
    - asm.cmsui.public
    - asm.cmsui.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: 
  license: ZPL 2.1
  summary: 'Assembly CMS - CMS UI package'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
