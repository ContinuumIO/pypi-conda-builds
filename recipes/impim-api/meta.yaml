package:
  name: impim-api
  version: "0.1.5"

source:
  fn: impim-api-0.1.5.tar.gz
  url: https://pypi.python.org/packages/source/i/impim-api/impim-api-0.1.5.tar.gz
  md5: e366360ea12b506d8e180843360dd401
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - impim-api = impim-api:main
    #
    # Would create an entry point called impim-api that calls impim-api.main()

    - impim-api = impim_api.server:main
    - impim-api-config = impim_api.conf:generate_config

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pillow >=1.7.8
    - derpconf >=0.3.0
    - libthumbor >=1.0.0
    - python-dateutil >=2.1
    - python-magic >=0.4.3
    - tapioca >=0.1.28
    - tornado >=2.4
    - tornado-thumbor-url >=0.1.1
    - boto ==2.6.0

  run:
    - python
    - pillow >=1.7.8
    - derpconf >=0.3.0
    - libthumbor >=1.0.0
    - python-dateutil >=2.1
    - python-magic >=0.4.3
    - tapioca >=0.1.28
    - tornado >=2.4
    - tornado-thumbor-url >=0.1.1
    - boto ==2.6.0

test:
  # Python imports
  imports:
    - impim_api
    - impim_api.domain
    - impim_api.domain.storage
    - impim_api.handlers
    - impim_api.infrastructure

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - impim-api --help
    - impim-api-config --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/globocom/impim-api
  license: MIT
  summary: 'UNKNOWN'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
