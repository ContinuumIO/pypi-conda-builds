package:
  name: jcvi
  version: "0.5.5"

source:
  fn: jcvi-0.5.5.tar.gz
  url: https://pypi.python.org/packages/source/j/jcvi/jcvi-0.5.5.tar.gz
  md5: f248dca9dcae1b10ee9c2e1c4b6885cf
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - jcvi = jcvi:main
    #
    # Would create an entry point called jcvi that calls jcvi.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - biopython
    - numpy
    - matplotlib
    - deap
    - networkx

  run:
    - python
    - biopython
    - numpy
    - matplotlib
    - deap
    - networkx

test:
  # Python imports
  imports:
    - jcvi
    - jcvi.algorithms
    - jcvi.annotation
    - jcvi.apps
    - jcvi.assembly
    - jcvi.compara
    - jcvi.formats
    - jcvi.graphics
    - jcvi.projects
    - jcvi.utils
    - jcvi.utils.data
    - jcvi.variation

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/tanghaibao/jcvi
  license: BSD License
  summary: 'Python utility libraries on genome assembly, annotation and comparative genomics'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
