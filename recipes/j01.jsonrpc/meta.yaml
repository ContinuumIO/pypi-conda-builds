package:
  name: j01.jsonrpc
  version: "2.0.1"

source:
  fn: j01.jsonrpc-2.0.1.zip
  url: https://pypi.python.org/packages/source/j/j01.jsonrpc/j01.jsonrpc-2.0.1.zip
  md5: ff1e71f9c578127608fd28d85507fe53
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - j01.jsonrpc = j01.jsonrpc:main
    #
    # Would create an entry point called j01.jsonrpc that calls j01.jsonrpc.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - z3c.form
    - z3c.jsonrpc
    - z3c.pagelet
    - z3c.template
    - zope.browserresource
    - zope.component
    - zope.i18n
    - zope.i18nmessageid
    - zope.interface
    - zope.location
    - zope.publisher
    - zope.schema
    - zope.site
    - zope.traversing

  run:
    - python
    - setuptools
    - z3c.form
    - z3c.jsonrpc
    - z3c.pagelet
    - z3c.template
    - zope.browserresource
    - zope.component
    - zope.i18n
    - zope.i18nmessageid
    - zope.interface
    - zope.location
    - zope.publisher
    - zope.schema
    - zope.site
    - zope.traversing

test:
  # Python imports
  imports:
    - j01
    - j01.jsonrpc
    - j01.jsonrpc.testing

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/j01.jsonrpc
  license: Zope Public License
  summary: 'JSON-RPC helpers based on JQuery, z3c.form and z3cjsonrpc for Zope 3'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
