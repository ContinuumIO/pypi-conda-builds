package:
  name: bundletester
  version: "0.5.2"

source:
  fn: bundletester-0.5.2.tar.gz
  url: https://pypi.python.org/packages/source/b/bundletester/bundletester-0.5.2.tar.gz
  md5: 3dfaa7130b5584bc4a97668565b74ed9
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bundletester = bundletester:main
    #
    # Would create an entry point called bundletester that calls bundletester.main()

    - bundletester = bundletester.tester:main
    - bundlewatcher = bundletester.watcher:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - bzr >=2.6.0
    - blessings
    - charm-tools
    - charmworldlib
    - coverage
    - juju-deployer
    - lazr.authentication
    - mock
    - nose
    - requests
    - websocket-client

  run:
    - python
    - bzr >=2.6.0
    - blessings
    - charm-tools
    - charmworldlib
    - coverage
    - juju-deployer
    - lazr.authentication
    - mock
    - nose
    - requests
    - websocket-client

test:
  # Python imports
  imports:
    - bundletester

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - bundletester --help
    - bundlewatcher --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/juju-solutions/bundletester
  license: Affero GNU Public License v3
  summary: 'UNKNOWN'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
