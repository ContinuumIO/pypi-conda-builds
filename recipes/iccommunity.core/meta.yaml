package:
  name: iccommunity.core
  version: "1.0-dev-r371"

source:
  fn: iccommunity.core-1.0-dev-r371.tar.gz
  url: https://pypi.python.org/packages/source/i/iccommunity.core/iccommunity.core-1.0-dev-r371.tar.gz
  md5: 88526ed2bf9bc424ff849e1c7c7c87d5
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - iccommunity.core = iccommunity.core:main
    #
    # Would create an entry point called iccommunity.core that calls iccommunity.core.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools

  run:
    - python
    - setuptools
    - setuptools

test:
  # Python imports
  imports:
    - iccommunity
    - iccommunity.core
    - iccommunity.core.Extensions
    - iccommunity.core.browser
    - iccommunity.core.content
    - iccommunity.core.exportimport
    - iccommunity.core.memberdata
    - iccommunity.core.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.platecom.com/productos/iccommunity.core/
  license: GNU General Public License (GPL)
  summary: 'icCommunity.Core'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
