package:
  name: dockertools
  version: "0.2.1"

source:
  fn: dockertools-0.2.1.tar.gz
  url: https://pypi.python.org/packages/source/d/dockertools/dockertools-0.2.1.tar.gz
  md5: ee4c8e6d7cb7ed0b94495388b38da97b
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - dockertools = dockertools:main
    #
    # Would create an entry point called dockertools that calls dockertools.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - docker-py ==0.4.0
    - mock ==1.0.1
    - requests ==2.2.1
    - six >=1.3.0
    - websocket-client ==0.11.0
    - click ==3.1
    - dnspython ==1.11.1

  run:
    - python
    - docker-py ==0.4.0
    - mock ==1.0.1
    - requests ==2.2.1
    - six >=1.3.0
    - websocket-client ==0.11.0
    - click ==3.1
    - dnspython ==1.11.1

test:
  # Python imports
  imports:
    - dockertools
    - dockertools.scripts
    - dockertools.test

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/GaretJax/dockertools
  license: MIT License
  summary: 'Command line utilities to make working with Docker easier.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
