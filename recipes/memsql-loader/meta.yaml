package:
  name: memsql-loader
  version: "2.0.1"

source:
  fn: memsql-loader-2.0.1.tar.gz
  url: https://pypi.python.org/packages/source/m/memsql-loader/memsql-loader-2.0.1.tar.gz
  md5: 9ac2aacddbf88c9645030d9af0ba455c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - memsql-loader = memsql-loader:main
    #
    # Would create an entry point called memsql-loader that calls memsql-loader.main()

    - memsql-loader = memsql_loader.main:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - memsql ==2.14.4
    - wraptor ==0.6.0
    - clark ==0.1.0
    - voluptuous ==0.8.5
    - boto ==2.28.0
    - pycurl ==7.19.3.1
    - prettytable ==0.7.2
    - pywebhdfs ==0.2.4
    - requests ==2.5.1

  run:
    - python
    - memsql ==2.14.4
    - wraptor ==0.6.0
    - clark ==0.1.0
    - voluptuous ==0.8.5
    - boto ==2.28.0
    - pycurl ==7.19.3.1
    - prettytable ==0.7.2
    - pywebhdfs ==0.2.4
    - requests ==2.5.1

test:
  # Python imports
  imports:
    - memsql_loader
    - memsql_loader.api
    - memsql_loader.cli
    - memsql_loader.db
    - memsql_loader.execution
    - memsql_loader.loader_db
    - memsql_loader.util
    - memsql_loader.util.apsw_sql_step_queue
    - memsql_loader.vendor
    - memsql_loader.vendor.glob2

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - memsql-loader --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/memsql/memsql-loader
  license: MIT License
  summary: 'MemSQL Loader helps you run complex ETL workflows against MemSQL'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
