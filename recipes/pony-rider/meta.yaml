package:
  name: pony-rider
  version: "1.0.0"

source:
  fn: pony-rider-1.0.0.tar.gz
  url: https://pypi.python.org/packages/source/p/pony-rider/pony-rider-1.0.0.tar.gz
  md5: 4cc6e881316ce3ade299baf7d5fc7c79
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pony-rider = pony-rider:main
    #
    # Would create an entry point called pony-rider that calls pony-rider.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - docopt >=0.6.1,<0.7
    - pyyaml >=3.10,<4
    - requests >=2.2.1,<3
    - texttable >=0.8.1,<0.9
    - websocket-client >=0.11.0,<0.12
    - docker-py >=0.5.3,<0.6
    - dockerpty >=0.3.2,<0.4
    - six >=1.3.0,<2
    - colorama >=0.3.2
    - fabric ==1.10.1
    - clint ==0.4.1

  run:
    - python
    - docopt >=0.6.1,<0.7
    - pyyaml >=3.10,<4
    - requests >=2.2.1,<3
    - texttable >=0.8.1,<0.9
    - websocket-client >=0.11.0,<0.12
    - docker-py >=0.5.3,<0.6
    - dockerpty >=0.3.2,<0.4
    - six >=1.3.0,<2
    - colorama >=0.3.2
    - fabric ==1.10.1
    - clint ==0.4.1

test:
  # Python imports
  imports:
    - rider
    - rider.cli
    - rider.pkg
    - rider.pkg.fig
    - rider.pkg.fig.cli

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/markshao/rider
  license: MIT
  summary: u'Splunk clustering deployment tool'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
