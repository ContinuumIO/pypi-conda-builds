package:
  name: python_jsonschema_objects
  version: "0.0.13"

source:
  fn: python_jsonschema_objects-0.0.13.tar.gz
  url: https://pypi.python.org/packages/source/p/python_jsonschema_objects/python_jsonschema_objects-0.0.13.tar.gz
  md5: 0740eebe742379964ddbeadc5db45d12
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - python_jsonschema_objects = python_jsonschema_objects:main
    #
    # Would create an entry point called python_jsonschema_objects that calls python_jsonschema_objects.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - markdown ==2.4
    - inflection ==0.2.0
    - jsonpatch ==1.3
    - jsonpointer ==1.2
    - jsonschema ==2.3.0
    - pandocfilters ==1.2
    - six ==1.5.2

  run:
    - python
    - markdown ==2.4
    - inflection ==0.2.0
    - jsonpatch ==1.3
    - jsonpointer ==1.2
    - jsonschema ==2.3.0
    - pandocfilters ==1.2
    - six ==1.5.2

test:
  # Python imports
  imports:
    - python_jsonschema_objects
    - test

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/cwacek/python-jsonschema-objects
  license: MIT
  summary: 'An object wrapper for JSON Schema definitions'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
