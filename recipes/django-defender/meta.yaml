package:
  name: django-defender
  version: "0.3.1"

source:
  fn: django-defender-0.3.1.tar.gz
  url: https://pypi.python.org/packages/source/d/django-defender/django-defender-0.3.1.tar.gz
  md5: 21a17cdcb25d27f39212687b4b26d382
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-defender = django-defender:main
    #
    # Would create an entry point called django-defender that calls django-defender.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django >=1.6,<1.8
    - redis ==2.10.3
    - hiredis ==0.1.6
    - mockredispy ==2.9.0.10

  run:
    - python
    - django >=1.6,<1.8
    - redis ==2.10.3
    - hiredis ==0.1.6
    - mockredispy ==2.9.0.10

test:
  # Python imports
  imports:
    - defender
    - defender/exampleapp
    - defender/management
    - defender/management/commands
    - defender/migrations
    - defender/south_migrations

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/kencochrane/django-defender
  license: Apache Software License
  summary: 'redis based Django app that locks out users after too many failed login attempts.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
