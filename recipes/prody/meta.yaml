package:
  name: prody
  version: "1.6.1"

source:
  fn: ProDy-1.6.1b.tar.gz
  url: https://pypi.python.org/packages/source/P/ProDy/ProDy-1.6.1b.tar.gz
  md5: 286625bb9061c6dad9b0cdc162b532f9
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - prody = prody:main
    #
    # Would create an entry point called prody that calls prody.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - prody
    - prody.apps
    - prody.apps.evol_apps
    - prody.apps.prody_apps
    - prody.atomic
    - prody.database
    - prody.dynamics
    - prody.ensemble
    - prody.kdtree
    - prody.measure
    - prody.proteins
    - prody.sequence
    - prody.tests
    - prody.tests.apps
    - prody.tests.atomic
    - prody.tests.datafiles
    - prody.tests.dynamics
    - prody.tests.ensemble
    - prody.tests.kdtree
    - prody.tests.measure
    - prody.tests.proteins
    - prody.tests.sequence
    - prody.tests.trajectory
    - prody.tests.utilities
    - prody.trajectory
    - prody.utilities

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.csb.pitt.edu/ProDy
  license: MIT License
  summary: 'A Python Package for Protein Dynamics Analysis'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
