package:
  name: jukebox-core
  version: "3.2.1"

source:
  fn: jukebox-core-3.2.1.tar.gz
  url: https://pypi.python.org/packages/source/j/jukebox-core/jukebox-core-3.2.1.tar.gz
  md5: 8fe99e62b3a4bdc80f5ac1b62a814075
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - jukebox-core = jukebox-core:main
    #
    # Would create an entry point called jukebox-core that calls jukebox-core.main()

    - jukebox = jukeboxcore.launcher:main_func
    - jukeboxw = jukeboxcore.launcher:main_func

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pyside
    - configobj
    - django >=1.7
    - psycopg2
    - jukedj

  run:
    - python
    - pyside
    - configobj
    - django >=1.7
    - psycopg2
    - jukedj

test:
  # Python imports
  imports:
    - jukeboxcore
    - jukeboxcore.addons
    - jukeboxcore.addons.configer
    - jukeboxcore.addons.genesis
    - jukeboxcore.addons.guerilla
    - jukeboxcore.gui
    - jukeboxcore.gui.resources
    - jukeboxcore.gui.widgets
    - jukeboxcore.gui.widgets.guerilla

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - jukebox --help
    - jukeboxw --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/JukeboxPipeline/jukebox-core
  license: BSD License
  summary: 'Core package for the jukebox pipeline.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
