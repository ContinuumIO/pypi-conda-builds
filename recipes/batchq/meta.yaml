package:
  name: batchq
  version: "0.1-2-pre-alpha"

source:
  fn: BatchQ-0.1-2-pre-alpha.tar.gz
  url: https://pypi.python.org/packages/source/B/BatchQ/BatchQ-0.1-2-pre-alpha.tar.gz
  md5: 0f905d6ea60917e1b5c7557d9e4e8186
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - batchq = batchq:main
    #
    # Would create an entry point called batchq that calls batchq.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - batchq
    - batchq.contrib
    - batchq.contrib.alps
    - batchq.contrib.examples2.nohup
    - batchq.core
    - batchq.core.terminal
    - batchq.pipelines
    - batchq.pipelines.interpreters
    - batchq.pipelines.math
    - batchq.pipelines.shell
    - batchq.queues
    - batchq.shortcuts
    - batchq.templates

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/troelsfr/BatchQ/tarball/master
  license: MIT License
  summary: 'Python automatisation tools.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
