package:
  name: goodtables
  version: "0.5.3"

source:
  fn: goodtables-0.5.3.tar.gz
  url: https://pypi.python.org/packages/source/g/goodtables/goodtables-0.5.3.tar.gz
  md5: b8310bc9e5715281471dd599e8b0166c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - goodtables = goodtables:main
    #
    # Would create an entry point called goodtables that calls goodtables.main()

    - goodtables = goodtables.cli.main:cli

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - click >=3.3
    - jsonschema >=2.4.0
    - chardet >=2.3.0
    - xlrd >=0.9.3
    - tellme >=0.2.4
    - jtskit >=0.2.7
    - beautifulsoup4 >=4.3.2

  run:
    - python
    - click >=3.3
    - jsonschema >=2.4.0
    - chardet >=2.3.0
    - xlrd >=0.9.3
    - tellme >=0.2.4
    - jtskit >=0.2.7
    - beautifulsoup4 >=4.3.2

test:
  # Python imports
  imports:
    - goodtables
    - goodtables.cli
    - goodtables.datatable
    - goodtables.pipeline
    - goodtables.processors
    - goodtables.utilities

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - goodtables --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://okfn.org
  license: MIT License
  summary: u'Validate and process tabular data.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
