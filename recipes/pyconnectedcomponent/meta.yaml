package:
  name: pyconnectedcomponent
  version: "0.1.3"

source:
  fn: pyconnectedcomponent-0.1.3.tar.gz
  url: https://pypi.python.org/packages/source/p/pyconnectedcomponent/pyconnectedcomponent-0.1.3.tar.gz
  md5: b6b1a3b791cde9102f6893a02c534ff8
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pyconnectedcomponent = pyconnectedcomponent:main
    #
    # Would create an entry point called pyconnectedcomponent that calls pyconnectedcomponent.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pytest

  run:
    - python
    - pytest

test:
  # Python imports
  imports:
    - pyconnectedcomponent
    - tests
    - tests.pyconnectedcomponent

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://breakingcode.wordpress.com/2013/04/08/finding-connected-components-in-a-graph/
  license: MIT License
  summary: 'simple connected component tool from http://breakingcode.wordpress.com/2013/04/08/finding-connected-components-in-a-graph/'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
