package:
  name: supermann
  version: "3.0.0"

source:
  fn: supermann-3.0.0.tar.gz
  url: https://pypi.python.org/packages/source/s/supermann/supermann-3.0.0.tar.gz
  md5: db432c4266f00a870c3d043841d98e29
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - supermann = supermann:main
    #
    # Would create an entry point called supermann that calls supermann.main()

    - supermann = supermann.cli:main
    - supermann-from-file = supermann.cli:from_file

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - blinker >=1.1,<2.0
    - click >=3.1,<4.0
    - psutil >=2.1.1,<3.0.0
    - riemann-client >=5.0.0,<6.0.0
    - supervisor >=3.0,<4.0

  run:
    - python
    - blinker >=1.1,<2.0
    - click >=3.1,<4.0
    - psutil >=2.1.1,<3.0.0
    - riemann-client >=5.0.0,<6.0.0
    - supervisor >=3.0,<4.0

test:
  # Python imports
  imports:
    - supermann
    - supermann.metrics

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - supermann --help
    - supermann-from-file --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/borntyping/supermann
  license: MIT License
  summary: u'A Supervisor event listener for Riemann'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
