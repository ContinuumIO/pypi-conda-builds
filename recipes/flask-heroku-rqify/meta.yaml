package:
  name: flask-heroku-rqify
  version: "0.2"

source:
  fn: Flask-Heroku-RQify-0.2.tar.gz
  url: https://pypi.python.org/packages/source/F/Flask-Heroku-RQify/Flask-Heroku-RQify-0.2.tar.gz
  md5: 87d3d2d702b46dd76f6016b18bd6a291
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - flask-heroku-rqify = flask-heroku-rqify:main
    #
    # Would create an entry point called flask-heroku-rqify that calls flask-heroku-rqify.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - flask-rq ==0.2
    - flask-script >=0.5.3

  run:
    - python
    - flask-rq ==0.2
    - flask-script >=0.5.3

# test:
  # Python imports
  # imports:

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/rdegges/flask-heroku-cacheify
  license: UNLICENSE
  summary: 'Automatic RQ configuration for your Heroku Flask applications.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
