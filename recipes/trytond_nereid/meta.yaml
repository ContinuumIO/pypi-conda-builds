package:
  name: trytond_nereid
  version: "3.4.0.5"

source:
  fn: trytond_nereid-3.4.0.5.tar.gz
  url: https://pypi.python.org/packages/source/t/trytond_nereid/trytond_nereid-3.4.0.5.tar.gz
  md5: 04ae4246d241674c356f0547e2b48f3e
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - trytond_nereid = trytond_nereid:main
    #
    # Would create an entry point called trytond_nereid that calls trytond_nereid.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pytz
    - flask >=0.10
    - flask-wtf
    - babel
    - blinker
    - speaklater
    - flask-babel >=0.9
    - flask-login
    - trytond_company >=3.4,<3.5
    - openlabs_email_queue >=3.4,<3.5
    - trytond >=3.4,<3.5

  run:
    - python
    - setuptools
    - pytz
    - flask >=0.10
    - flask-wtf
    - babel
    - blinker
    - speaklater
    - flask-babel >=0.9
    - flask-login
    - trytond_company >=3.4,<3.5
    - openlabs_email_queue >=3.4,<3.5
    - trytond >=3.4,<3.5

test:
  # Python imports
  imports:
    - nereid
    - nereid.contrib
    - nereid.tests
    - trytond.modules.nereid
    - trytond.modules.nereid.tests
    - trytond.modules.nereid_test
    - trytond_nereid

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://nereid.openlabs.co.in/docs/
  license: GNU General Public License v3 (GPLv3)
  summary: 'Tryton - Web Framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
