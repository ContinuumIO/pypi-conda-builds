package:
  name: charmrunner
  version: "0.2.5"

source:
  fn: charmrunner-0.2.5.tar.gz
  url: https://pypi.python.org/packages/source/c/charmrunner/charmrunner-0.2.5.tar.gz
  md5: d2eb479af3112861c8740efef1d72bb3
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - charmrunner = charmrunner:main
    #
    # Would create an entry point called charmrunner that calls charmrunner.main()

    - juju-record = charmrunner.recorder:main
    - juju-watch = charmrunner.watcher:main
    - juju-load-plan = charmrunner.loader:main
    - juju-plan = charmrunner.planner:main
    - juju-snapshot = charmrunner.snapshot:main
    - juju-graph-runner = charmrunner.runner:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - networkx
    - requests

  run:
    - python
    - networkx
    - requests

test:
  # Python imports
  imports:
    - charmrunner

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - juju-record --help
    - juju-watch --help
    - juju-load-plan --help
    - juju-plan --help
    - juju-snapshot --help
    - juju-graph-runner --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://launchpad.net/charmrunner
  license: GPL
  summary: 'Tools for automated distributed juju charm testing.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
