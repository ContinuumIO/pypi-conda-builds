package:
  name: salesking
  version: "0.0.1"

source:
  fn: salesking-0.0.1.tar.gz
  url: https://pypi.python.org/packages/source/s/salesking/salesking-0.0.1.tar.gz
  md5: 9b4bef75b8e5dace60845751ed6f2b07
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - salesking = salesking:main
    #
    # Would create an entry point called salesking that calls salesking.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - requests
    - requests-oauth
    - certifi >=0.0.7
    - oauthlib
    - chardet >=1.0.0
    - jsonpatch ==0.10
    - jsonpointer ==0.5
    - jsonschema >=0.7,<1
    - validictory ==0.8.3
    - iso8601 ==0.1.4
    - warlock ==0.7.0

  run:
    - python
    - requests
    - requests-oauth
    - certifi >=0.0.7
    - oauthlib
    - chardet >=1.0.0
    - jsonpatch ==0.10
    - jsonpointer ==0.5
    - jsonschema >=0.7,<1
    - validictory ==0.8.3
    - iso8601 ==0.1.4
    - warlock ==0.7.0

test:
  # Python imports
  imports:
    - salesking
    - warlock

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/salesking/salesking_python_sdk
  license: UNKNOWN
  summary: 'SalesKing API Wrapper and SDK'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
