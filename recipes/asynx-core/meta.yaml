package:
  name: asynx-core
  version: "0.4dev1"

source:
  fn: asynx-core-0.4dev1.tar.gz
  url: https://pypi.python.org/packages/source/a/asynx-core/asynx-core-0.4dev1.tar.gz
  md5: 9163754118eb61db5dd55e387516ebf2
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - asynx-core = asynx-core:main
    #
    # Would create an entry point called asynx-core that calls asynx-core.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - anyjson >=0.3.3
    - python-dateutil >=2.2
    - celery >=3.1.11
    - redis >=2.6.2
    - tzlocal >=1.1.1
    - pytz >2014
    - requests >=2.3.0

  run:
    - python
    - anyjson >=0.3.3
    - python-dateutil >=2.2
    - celery >=3.1.11
    - redis >=2.6.2
    - tzlocal >=1.1.1
    - pytz >2014
    - requests >=2.3.0

test:
  # Python imports
  imports:
    - asynx_core

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/guokr/asynx
  license: MIT License
  summary: 'Core of the open source, distributed, and web / HTTP oriented taskqueue & scheduler service inspired by Google App Engine'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
