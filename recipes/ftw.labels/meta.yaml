package:
  name: ftw.labels
  version: "1.0.2"

source:
  fn: ftw.labels-1.0.2.zip
  url: https://pypi.python.org/packages/source/f/ftw.labels/ftw.labels-1.0.2.zip
  md5: de7f708f224ac1058dc18176ec6c454a
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ftw.labels = ftw.labels:main
    #
    # Would create an entry point called ftw.labels that calls ftw.labels.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - acquisition
    - products.cmfcore
    - products.genericsetup
    - zodb3
    - zope2
    - plone.app.portlets
    - plone.i18n
    - plone.indexer
    - plone.portlets
    - setuptools
    - zexceptions
    - zope.annotation
    - zope.component
    - zope.i18nmessageid
    - zope.interface

  run:
    - python
    - setuptools
    - acquisition
    - products.cmfcore
    - products.genericsetup
    - zodb3
    - zope2
    - plone.app.portlets
    - plone.i18n
    - plone.indexer
    - plone.portlets
    - setuptools
    - zexceptions
    - zope.annotation
    - zope.component
    - zope.i18nmessageid
    - zope.interface

test:
  # Python imports
  imports:
    - ftw
    - ftw.labels
    - ftw.labels.browser
    - ftw.labels.portlets
    - ftw.labels.tests
    - ftw.labels.tests.pages
    - ftw.labels.viewlets

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/4teamwork/ftw.labels
  license: GPL2
  summary: 'A Plone addon for labels.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
