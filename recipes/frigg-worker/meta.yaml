package:
  name: frigg-worker
  version: "1.0.1"

source:
  fn: frigg-worker-1.0.1.tar.gz
  url: https://pypi.python.org/packages/source/f/frigg-worker/frigg-worker-1.0.1.tar.gz
  md5: aaf348c04e3ab605c8ce21e683a8347a
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - frigg-worker = frigg-worker:main
    #
    # Would create an entry point called frigg-worker that calls frigg-worker.main()

    - frigg-worker = frigg_worker.cli:start

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - click ==4.0
    - frigg-coverage ==1.0.0
    - frigg-test-discovery >0.0,<1.1
    - docker-wrapper ==0.5.0
    - pyyaml ==3.11
    - raven ==5.2.0

  run:
    - python
    - click ==4.0
    - frigg-coverage ==1.0.0
    - frigg-test-discovery >0.0,<1.1
    - docker-wrapper ==0.5.0
    - pyyaml ==3.11
    - raven ==5.2.0

test:
  # Python imports
  imports:
    - frigg_worker

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - frigg-worker --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/frigg/frigg-worker
  license: MIT
  summary: 'A worker application that listens to the frigg broker an pick up builds and build them.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
