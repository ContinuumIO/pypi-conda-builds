package:
  name: djangodevkit
  version: "1.0.6"

source:
  fn: DjangoDevKit-1.0.6.zip
  url: https://pypi.python.org/packages/source/D/DjangoDevKit/DjangoDevKit-1.0.6.zip
  md5: e6fe579dc2473b572bc2371a41c02a68
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - djangodevkit = djangodevkit:main
    #
    # Would create an entry point called djangodevkit that calls djangodevkit.main()

    - django-serve=djangodevkit.serve:main
    - django-manage=djangodevkit.scripts:manage
    - django-migrate=djangodevkit.scripts:manage_migrate
    - django-shell=djangodevkit.scripts:manage_shell
    - django-admin=djangodevkit.scripts:admin

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - webob
    - backlash
    - webtest
    - ipython
    - waitress
    - django-webtest
    - django-extensions
    - django-debug-toolbar

  run:
    - python
    - setuptools
    - webob
    - backlash
    - webtest
    - ipython
    - waitress
    - django-webtest
    - django-extensions
    - django-debug-toolbar

test:
  # Python imports
  imports:
    - djangodevkit

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - django-serve --help
    - django-manage --help
    - django-migrate --help
    - django-shell --help
    - django-admin --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/bearstech/DjangoDevKit
  license: MIT License
  summary: 'DjangoDevKit package'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
