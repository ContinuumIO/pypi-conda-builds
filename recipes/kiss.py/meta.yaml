package:
  name: kiss.py
  version: "1.0.0"

source:
  fn: kiss.py-1.0.0.tar.gz
  url: https://pypi.python.org/packages/source/k/kiss.py/kiss.py-1.0.0.tar.gz
  md5: 8cd27b90b94b158fe41882a6ee67e9c6
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - kiss.py = kiss.py:main
    #
    # Would create an entry point called kiss.py that calls kiss.py.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - gevent
    - jinja2
    - compressinja
    - beaker
    - werkzeug
    - putils
    - jsmin
    - pyscss
    - sqlalchemy ==0.7.8
    - elixir
    - jsonpickle
    - pev
    - requests
    - pycrypto

  run:
    - python
    - gevent
    - jinja2
    - compressinja
    - beaker
    - werkzeug
    - putils
    - jsmin
    - pyscss
    - sqlalchemy ==0.7.8
    - elixir
    - jsonpickle
    - pev
    - requests
    - pycrypto

test:
  # Python imports
  imports:
    - kiss
    - kiss.controllers
    - kiss.core
    - kiss.models
    - kiss.views

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://stanislavfeldman.github.com/kiss.py/
  license: UNKNOWN
  summary: 'MVC web framework in Python with Gevent, Jinja2, Werkzeug'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
