package:
  name: ipkiss24ce
  version: "(latest release)"

source:
  fn: ipkiss24ce.tar.gz
  url: https://pypi.python.org/packages/source/i/ipkiss24ce/ipkiss24ce.tar.gz
  md5: c29a84d227f96d8922e1b85ee7900e4f
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ipkiss24ce = ipkiss24ce:main
    #
    # Would create an entry point called ipkiss24ce that calls ipkiss24ce.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - dependencies
    - descartes
    - genericpdk
    - genericpdk.library
    - genericpdk.library.constants
    - genericpdk.library.io
    - genericpdk.materials
    - ipcore
    - ipcore.caching
    - ipcore.config
    - ipcore.exceptions
    - ipcore.mixin
    - ipcore.properties
    - ipcore.runtime
    - ipkiss
    - ipkiss.aspects
    - ipkiss.aspects.layout
    - ipkiss.aspects.output
    - ipkiss.aspects.port
    - ipkiss.boolean_ops
    - ipkiss.exceptions
    - ipkiss.geometry
    - ipkiss.geometry.shapes
    - ipkiss.geometry.transforms
    - ipkiss.io
    - ipkiss.logos
    - ipkiss.path_definition
    - ipkiss.plugins
    - ipkiss.plugins.photonics
    - ipkiss.plugins.photonics.port
    - ipkiss.plugins.photonics.routing
    - ipkiss.plugins.photonics.technology
    - ipkiss.plugins.photonics.technology.default
    - ipkiss.plugins.photonics.wg
    - ipkiss.plugins.simulation
    - ipkiss.plugins.vfabrication
    - ipkiss.primitives
    - ipkiss.primitives.elements
    - ipkiss.primitives.filters
    - ipkiss.primitives.fonts
    - ipkiss.process
    - ipkiss.technology
    - ipkiss.visualisation
    - ipkiss.visualisation.manager
    - ipkiss24ce
    - picazzo
    - picazzo.container
    - picazzo.fibcoup
    - picazzo.fibcoup.basic
    - picazzo.fibcoup.cleave
    - picazzo.fibcoup.curved
    - picazzo.fibcoup.grating
    - picazzo.fibcoup.inverted_taper
    - picazzo.fibcoup.line_grating
    - picazzo.fibcoup.segmented
    - picazzo.fibcoup.socket
    - picazzo.fibcoup.socket_2d
    - picazzo.fibcoup.uniform
    - picazzo.fibcoup.uniform_2d
    - picazzo.filters
    - picazzo.filters.mmi
    - picazzo.filters.mmi_shallow
    - picazzo.filters.multi_ring
    - picazzo.filters.mzi
    - picazzo.filters.parallel_ring
    - picazzo.filters.ring
    - picazzo.filters.ring_ccw
    - picazzo.filters.ring_xing
    - picazzo.filters.spline_ring
    - picazzo.io
    - picazzo.io.block_structure
    - picazzo.io.cleave
    - picazzo.io.column_set
    - picazzo.io.fibcoup
    - picazzo.io.fibcoup_2d
    - picazzo.io.io_array
    - picazzo.markers
    - picazzo.phc
    - picazzo.process
    - picazzo.slab
    - picazzo.tools
    - picazzo.wg
    - picazzo.wg.aperture
    - picazzo.wg.aperture_multi
    - picazzo.wg.bend
    - picazzo.wg.coupler
    - picazzo.wg.crossing
    - picazzo.wg.grating
    - picazzo.wg.sbend
    - picazzo.wg.spiral
    - picazzo.wg.spline_coupler
    - picazzo.wg.splitter_tree
    - picazzo.wg.splitters
    - picazzo.wg.taper
    - picazzo.wg.taper_extended
    - picazzo.wg.tapers
    - picazzo.wg.tapers.auto_taper
    - picazzo.wg.tapers.basic
    - picazzo.wg.tapers.deep_shallow
    - picazzo.wg.tapers.linear
    - picazzo.wg.tapers.parabolic
    - picazzo.wg.wgdef
    - picazzo.wg.wgdefs
    - picazzo.wg.wgdefs.slot
    - picazzo.wg.wgdefs.thin
    - picazzo.wg.wgdefs.wg_fc
    - pysics
    - pysics.basics
    - pysics.basics.geometry
    - pysics.basics.material
    - pysics.electromagnetics
    - pysics.materials
    - pysics.optics
    - pysics.thermal
    - pysics.visualisation
    - pysics.visualisation.geometry
    - pysimul
    - pysimul.integration
    - pysimul.runtime
    - pysimul.runtime.MeepFDTD
    - pysimul.runtime.camfr_engine
    - pysimul.visualization
    - samples
    - samples.ipkiss
    - samples.ipkiss.import
    - samples.ipkiss.output
    - samples.picazzo
    - samples.picazzo.advanced
    - samples.picazzo.basic
    - samples.picazzo.columns_adapters
    - samples.picazzo.columns_adapters._01_basic_column
    - samples.picazzo.columns_adapters._02_column_stacking
    - samples.picazzo.columns_adapters._03_column_parameters
    - samples.picazzo.columns_adapters._04_advanced_adapters
    - samples.picazzo.containers
    - samples.picazzo.containers._01_basic
    - samples.picazzo.containers._02_suppress_ports
    - samples.picazzo.containers._03_extend_ports
    - samples.picazzo.containers._04_taper_ports
    - samples.picazzo.containers._05_auto_taper_ports
    - samples.picazzo.containers._06_fanout
    - samples.picazzo.containers._07_route_ports
    - samples.picazzo.containers._08_route_east_west
    - samples.picazzo.containers._09_matrioszka
    - samples.pysimul
    - samples.pysimul.awg_aperture_camfr_and_fdtd
    - samples.pysimul.grating_3D_Meep
    - samples.pysimul.mmi_camfr
    - samples.pysimul.mmi_fdtd
    - samples.pysimul.pysimul_low_level_python_meep
    - samples.pysimul.ring_fdtd
    - samples.tutorial_rlmzi
    - samples.tutorial_rlmzi.module_01_layout
    - samples.tutorial_rlmzi.module_01_layout._01_structure
    - samples.tutorial_rlmzi.module_01_layout._02_technology
    - samples.tutorial_rlmzi.module_01_layout._03_simple_layout
    - samples.tutorial_rlmzi.module_01_layout._04_waveguide_definitions
    - samples.tutorial_rlmzi.module_01_layout._05_ports
    - samples.tutorial_rlmzi.module_01_layout._06_hierarchy
    - samples.tutorial_rlmzi.module_01_layout._07_routing
    - samples.tutorial_rlmzi.module_01_layout._08_inheritance
    - samples.tutorial_rlmzi.module_01_layout._09_more_routing
    - samples.tutorial_rlmzi.module_01_layout._10_rlmzi
    - samples.tutorial_rlmzi.module_01_layout._11_generic_mzi
    - samples.tutorial_rlmzi.module_01_layout._12_rlmzi_redone
    - technologies
    - technologies.default_ipkiss
    - technologies.si_photonics
    - technologies.si_photonics.ipkiss
    - technologies.si_photonics.ipkiss.default
    - technologies.si_photonics.picazzo
    - technologies.si_photonics.picazzo.default

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: www.ipkiss.org
  license: GPL
  summary: 'IPKISS Framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
