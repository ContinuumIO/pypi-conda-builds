package:
  name: ftw.inflator
  version: "1.5"

source:
  fn: ftw.inflator-1.5.zip
  url: https://pypi.python.org/packages/source/f/ftw.inflator/ftw.inflator-1.5.zip
  md5: 1b7b86e423ee1e451e809b2f8c7a4013
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ftw.inflator = ftw.inflator:main
    #
    # Would create an entry point called ftw.inflator that calls ftw.inflator.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - zope.annotation
    - zope.component
    - zope.configuration
    - zope.dottedname
    - zope.i18n
    - zope.i18nmessageid
    - zope.interface
    - zope.schema
    - zodb3
    - zope2
    - plone.i18n
    - plone.uuid
    - products.atcontenttypes
    - products.cmfcore
    - products.cmfplone
    - products.genericsetup
    - plone.app.transmogrifier
    - collective.transmogrifier
    - collective.blueprint.jsonmigrator
    - ftw.profilehook

  run:
    - python
    - setuptools
    - setuptools
    - zope.annotation
    - zope.component
    - zope.configuration
    - zope.dottedname
    - zope.i18n
    - zope.i18nmessageid
    - zope.interface
    - zope.schema
    - zodb3
    - zope2
    - plone.i18n
    - plone.uuid
    - products.atcontenttypes
    - products.cmfcore
    - products.cmfplone
    - products.genericsetup
    - plone.app.transmogrifier
    - collective.transmogrifier
    - collective.blueprint.jsonmigrator
    - ftw.profilehook

test:
  # Python imports
  imports:
    - ftw
    - ftw.inflator
    - ftw.inflator.browser
    - ftw.inflator.creation
    - ftw.inflator.creation.sections
    - ftw.inflator.patches
    - ftw.inflator.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/4teamwork/ftw.inflator
  license: GPL2
  summary: 'Plone site setup wizard with content creation and bundle system for predefined configurations.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
