package:
  name: mortar_rdb
  version: "2.0"

source:
  fn: mortar_rdb-2.0.tar.gz
  url: https://pypi.python.org/packages/source/m/mortar_rdb/mortar_rdb-2.0.tar.gz
  md5: 53123056c747b5e0d11bc6e0356eee42
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - mortar_rdb = mortar_rdb:main
    #
    # Would create an entry point called mortar_rdb that calls mortar_rdb.main()

    - mortar_rdb_create = mortar_rdb.controlled:create_main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - argparse
    - sqlalchemy
    - zope.component
    - zope.dottedname
    - zope.interface
    - zope.sqlalchemy

  run:
    - python
    - argparse
    - sqlalchemy
    - zope.component
    - zope.dottedname
    - zope.interface
    - zope.sqlalchemy

test:
  # Python imports
  imports:
    - mortar_rdb
    - mortar_rdb.sequence
    - mortar_rdb.tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - mortar_rdb_create --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.simplistix.co.uk/software/python/mortar_rdb
  license: MIT
  summary: 'SQLAlchemy and the component architecture tied together for easy use in multi-package projects for any framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
