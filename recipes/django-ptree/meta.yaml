package:
  name: django-ptree
  version: "0.2.151"

source:
  fn: django-ptree-0.2.151.zip
  url: https://pypi.python.org/packages/source/d/django-ptree/django-ptree-0.2.151.zip
  md5: 82eea6ab723869f7ee27ed7204007fe1
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-ptree = django-ptree:main
    #
    # Would create an entry point called django-ptree that calls django-ptree.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django-crispy-forms ==1.4.0
    - django ==1.6.1
    - django-vanilla-views ==1.0.2
    - babel ==1.3
    - raven ==3.5.2
    - django-inspect-model
    - django-ptree-extra-views
    - dj-static ==0.0.5
    - selenium ==2.41.0
    - xmltodict ==0.9.0
    - django-ptree-mturk
    - django-extensions
    - django-save-the-change ==1.0.0
    - pytz ==2013.9
    - coverage ==3.7.1
    - django-easymoney ==0.3.5

  run:
    - python
    - django-crispy-forms ==1.4.0
    - django ==1.6.1
    - django-vanilla-views ==1.0.2
    - babel ==1.3
    - raven ==3.5.2
    - django-inspect-model
    - django-ptree-extra-views
    - dj-static ==0.0.5
    - selenium ==2.41.0
    - xmltodict ==0.9.0
    - django-ptree-mturk
    - django-extensions
    - django-save-the-change ==1.0.0
    - pytz ==2013.9
    - coverage ==3.7.1
    - django-easymoney ==0.3.5

test:
  # Python imports
  imports:
    - django_ptree
    - ptree
    - ptree.db
    - ptree.management
    - ptree.management.commands
    - ptree.models
    - ptree.sessionlib
    - ptree.templatetags
    - ptree.test
    - ptree.user
    - ptree.views

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://ptree.org/
  license: MIT License
  summary: 'pTree is a Django toolset that makes it easy to create and administer web-based social science experiments.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
