package:
  name: redsolutioncms.django-server-config
  version: "0.1.4"

source:
  fn: redsolutioncms.django-server-config-0.1.4.tar.gz
  url: https://pypi.python.org/packages/source/r/redsolutioncms.django-server-config/redsolutioncms.django-server-config-0.1.4.tar.gz
  md5: 4f349591badfdee6cd9307f0874074e7
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - redsolutioncms.django-server-config = redsolutioncms.django-server-config:main
    #
    # Would create an entry point called redsolutioncms.django-server-config that calls redsolutioncms.django-server-config.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - ordereddict ==1.1

  run:
    - python
    - setuptools
    - ordereddict ==1.1

test:
  # Python imports
  imports:
    - config
    - config.management
    - config.management.commands
    - config.redsolution_setup
    - config.templatetags

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  #home: The package home page
  license: GNU General Public License (GPL)
  summary: 'Useful for deploy server installation. \nAdds management command to make configs for your project. \nAutomatically recognizes media directories in 3-party applications'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
