package:
  name: armstrong.core.arm_wells
  version: "1.10.0"

source:
  fn: armstrong.core.arm_wells-1.10.0.tar.gz
  url: https://pypi.python.org/packages/source/a/armstrong.core.arm_wells/armstrong.core.arm_wells-1.10.0.tar.gz
  md5: 20d3b10e05d487723365eb1a3a73189d
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - armstrong.core.arm_wells = armstrong.core.arm_wells:main
    #
    # Would create an entry point called armstrong.core.arm_wells that calls armstrong.core.arm_wells.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - django-reversion
    - armstrong.hatband >=1.2.4

  run:
    - python
    - django-reversion
    - armstrong.hatband >=1.2.4

test:
  # Python imports
  imports:
    - armstrong.core.arm_wells
    - armstrong.core.arm_wells.migrations
    - armstrong.core.arm_wells.tests
    - armstrong.core.arm_wells.tests.arm_wells_support

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/armstrong/armstrong.core.arm_wells/
  license: Apache Software License
  summary: 'Provides the basic well objects'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
