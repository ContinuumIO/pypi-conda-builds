package:
  name: gitbranchhealth
  version: "0.2.2"

source:
  fn: gitbranchhealth-0.2.2.tar.gz
  url: https://pypi.python.org/packages/source/g/gitbranchhealth/gitbranchhealth-0.2.2.tar.gz
  md5: 0b42a4d76863768ea78ac7ae7f871cd6
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - gitbranchhealth = gitbranchhealth:main
    #
    # Would create an entry point called gitbranchhealth that calls gitbranchhealth.main()

    - git-branchhealth = gitbranchhealth.branchhealth:runMain

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - ansicolors >=1.0.2
    - argparse >=1.2.1
    - nicelog >=0.1.7
    - gitpython >=0.3.2.RC1
    - python-dateutil >=1.5

  run:
    - python
    - ansicolors >=1.0.2
    - argparse >=1.2.1
    - nicelog >=0.1.7
    - gitpython >=0.3.2.RC1
    - python-dateutil >=1.5

test:
  # Python imports
  imports:
    - gitbranchhealth

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - git-branchhealth --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/jwir3/gitbranchhealth
  license: Mozilla Public License v2.0
  summary: ('A tool for determining the health of branches in a git repository',)

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
