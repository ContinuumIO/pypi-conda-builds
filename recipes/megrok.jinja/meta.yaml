package:
  name: megrok.jinja
  version: "0.1"

source:
  fn: megrok.jinja-0.1.tar.gz
  url: https://pypi.python.org/packages/source/m/megrok.jinja/megrok.jinja-0.1.tar.gz
  md5: ebacb92c8a301b40976ad87dc9feff9e
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - megrok.jinja = megrok.jinja:main
    #
    # Would create an entry point called megrok.jinja that calls megrok.jinja.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - grokcore.component
    - grokcore.view
    - grokcore.viewlet
    - jinja2
    - simplejson
    - pyyaml

  run:
    - python
    - setuptools
    - setuptools
    - grokcore.component
    - grokcore.view
    - grokcore.viewlet
    - jinja2
    - simplejson
    - pyyaml

test:
  # Python imports
  imports:
    - megrok
    - megrok.jinja
    - megrok.jinja.ftests
    - megrok.jinja.ftests.i18n
    - megrok.jinja.ftests.inline
    - megrok.jinja.ftests.module_directory
    - megrok.jinja.ftests.providers

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.zope.org/megrok.jinja/
  license: Zope Public License
  summary: 'Jinja2 templates integration in Grok'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
