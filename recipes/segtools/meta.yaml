package:
  name: segtools
  version: "1.1.9"

source:
  fn: segtools-1.1.9.tar.gz
  url: https://pypi.python.org/packages/source/s/segtools/segtools-1.1.9.tar.gz
  md5: 62510d45d45befeacfe9d02ee73b1654
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - segtools = segtools:main
    #
    # Would create an entry point called segtools that calls segtools.main()

    - segtools-aggregation=segtools.aggregation:main
    - segtools-compare=segtools.compare:main
    - segtools-feature-distance=segtools.feature_distance:main
    - segtools-flatten=segtools.flatten:main
    - segtools-gmtk-parameters=segtools.gmtk_parameters:main
    - segtools-html-report=segtools.html:main
    - segtools-length-distribution=segtools.length_distribution:main
    - segtools-nucleotide-frequency=segtools.nucleotide_frequency:main [genomedata]
    - segtools-overlap=segtools.overlap:main
    - segtools-preprocess=segtools.preprocess:main
    - segtools-relabel=segtools.relabel:main
    - segtools-signal-distribution=segtools.signal_distribution:main [genomedata]
    - segtools-transition=segtools.transition:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.3
    - rpy2

  run:
    - python
    - setuptools
    - numpy >=1.3
    - rpy2

test:
  # Python imports
  imports:
    - segtools
    - segtools.R
    - segtools.resources

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - segtools-aggregation --help
    - segtools-compare --help
    - segtools-feature-distance --help
    - segtools-flatten --help
    - segtools-gmtk-parameters --help
    - segtools-html-report --help
    - segtools-length-distribution --help
    - segtools-nucleotide-frequency --help
    - segtools-overlap --help
    - segtools-preprocess --help
    - segtools-relabel --help
    - segtools-signal-distribution --help
    - segtools-transition --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://noble.gs.washington.edu/proj/segtools/
  license: UNKNOWN
  summary: 'Tools for exploratory analysis of genomic segmentations'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
