package:
  name: p4a.video
  version: "1.4"

source:
  fn: p4a.video-1.4.zip
  url: https://pypi.python.org/packages/source/p/p4a.video/p4a.video-1.4.zip
  md5: da2c4d581a3ed9ecb6111a35110480d6
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - p4a.video = p4a.video:main
    #
    # Would create an entry point called p4a.video that calls p4a.video.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - p4a.subtyper
    - p4a.common >=1.0
    - p4a.z2utils >=1.0
    - p4a.fileimage >=1.0
    - hachoir_core
    - hachoir_metadata
    - hachoir_parser

  run:
    - python
    - setuptools
    - setuptools
    - p4a.subtyper
    - p4a.common >=1.0
    - p4a.z2utils >=1.0
    - p4a.fileimage >=1.0
    - hachoir_core
    - hachoir_metadata
    - hachoir_parser

test:
  # Python imports
  imports:
    - p4a
    - p4a.video
    - p4a.video.browser
    - p4a.video.flv
    - p4a.video.mov
    - p4a.video.real-media
    - p4a.video.swf
    - p4a.video.tests
    - p4a.video.wmv

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://plone.org/products/plone4artistsvideo
  license: GNU General Public License (GPL)
  summary: 'Plone4Artists video abstraction library'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
