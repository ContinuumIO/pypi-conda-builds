package:
  name: python-ase
  version: "3.8.1"

source:
  fn: python-ase-3.8.1.3440.tar.gz
  url: https://pypi.python.org/packages/source/p/python-ase/python-ase-3.8.1.3440.tar.gz
  md5: 86fa053caf169bfcdddbe7ac985d9740
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - python-ase = python-ase:main
    #
    # Would create an entry point called python-ase that calls python-ase.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - ase
    - ase.calculators
    - ase.calculators.jacapo
    - ase.cli
    - ase.cluster
    - ase.cluster.data
    - ase.data
    - ase.db
    - ase.dft
    - ase.examples
    - ase.gui
    - ase.gui.languages
    - ase.io
    - ase.lattice
    - ase.lattice.spacegroup
    - ase.md
    - ase.optimize
    - ase.optimize.test
    - ase.tasks
    - ase.test
    - ase.test.abinit
    - ase.test.aims
    - ase.test.castep
    - ase.test.cmr
    - ase.test.elk
    - ase.test.exciting
    - ase.test.fio
    - ase.test.fleur
    - ase.test.gaussian
    - ase.test.gromacs
    - ase.test.jacapo
    - ase.test.mopac
    - ase.test.nwchem
    - ase.test.tasks
    - ase.test.vasp
    - ase.transport
    - ase.utils
    - ase.vibrations
    - ase.visualize
    - ase.visualize.vtk

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://wiki.fysik.dtu.dk/ase
  license: LGPLv2.1+
  summary: 'Atomic Simulation Environment'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
