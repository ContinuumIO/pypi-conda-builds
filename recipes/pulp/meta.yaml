package:
  name: pulp
  version: "1.5.9"

source:
  fn: PuLP-1.5.9.zip
  url: https://pypi.python.org/packages/source/P/PuLP/PuLP-1.5.9.zip
  md5: 0f31a21b9fb908c048b056df613a5903
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pulp = pulp:main
    #
    # Would create an entry point called pulp that calls pulp.main()

    - pulptest=pulp:pulpTestAll
    - pulpdoctest=pulp:pulpDoctest

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pyparsing <=1.9.9

  run:
    - python
    - setuptools
    - pyparsing <=1.9.9

test:
  # Python imports
  imports:
    - pulp
    - pulp.solverdir
    - pulp.solverdir.cbc.linux.32
    - pulp.solverdir.cbc.linux.64
    - pulp.solverdir.cbc.osx.64
    - pulp.solverdir.cbc.win.32
    - pulp.solverdir.cbc.win.64

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - pulptest --help
    - pulpdoctest --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/coin-or/pulp
  license: BSD License
  summary: '\nPuLP is an LP modeler written in python. PuLP can generate MPS or LP files\nand call GLPK, COIN CLP/CBC, CPLEX, and GUROBI to solve linear\nproblems.\n'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
