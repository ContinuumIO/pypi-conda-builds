package:
  name: plone.app.kss
  version: "1.8.0"

source:
  fn: plone.app.kss-1.8.0.zip
  url: https://pypi.python.org/packages/source/p/plone.app.kss/plone.app.kss-1.8.0.zip
  md5: 46009e4bb169a0465296311cf6e2e0bd
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - plone.app.kss = plone.app.kss:main
    #
    # Would create an entry point called plone.app.kss that calls plone.app.kss.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - kss.core
    - archetypes.kss
    - plone.portlets >=2.0.1dev
    - plone.app.layout
    - plone.app.portlets
    - plone.locking
    - zope.component
    - zope.contentprovider
    - zope.deprecation
    - zope.i18n
    - zope.i18nmessageid
    - zope.interface
    - zope.lifecycleevent
    - zope.viewlet
    - acquisition
    - products.cmfcore
    - products.dcworkflow
    - products.statusmessages
    - zope2

  run:
    - python
    - setuptools
    - setuptools
    - kss.core
    - archetypes.kss
    - plone.portlets >=2.0.1dev
    - plone.app.layout
    - plone.app.portlets
    - plone.locking
    - zope.component
    - zope.contentprovider
    - zope.deprecation
    - zope.i18n
    - zope.i18nmessageid
    - zope.interface
    - zope.lifecycleevent
    - zope.viewlet
    - acquisition
    - products.cmfcore
    - products.dcworkflow
    - products.statusmessages
    - zope2

test:
  # Python imports
  imports:
    - plone
    - plone.app
    - plone.app.kss
    - plone.app.kss.commands
    - plone.app.kss.demo
    - plone.app.kss.exportimport
    - plone.app.kss.plugins
    - plone.app.kss.plugins.legacy
    - plone.app.kss.plugins.plone
    - plone.app.kss.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/plone.app.kss
  license: GNU General Public License (GPL)
  summary: 'KSS (Kinetic Style Sheets) for Plone'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
