package:
  name: beets
  version: "1.3.13"

source:
  fn: beets-1.3.13.tar.gz
  url: https://pypi.python.org/packages/source/b/beets/beets-1.3.13.tar.gz
  md5: 3cbb0426906a0556fbb14f53b5273011
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - beets = beets:main
    #
    # Would create an entry point called beets that calls beets.main()

    - beet = beets.ui:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - enum34 >=1.0.4
    - mutagen >=1.27
    - munkres
    - unidecode
    - musicbrainzngs >=0.4
    - pyyaml
    - jellyfish

  run:
    - python
    - enum34 >=1.0.4
    - mutagen >=1.27
    - munkres
    - unidecode
    - musicbrainzngs >=0.4
    - pyyaml
    - jellyfish

test:
  # Python imports
  imports:
    - beets
    - beets.autotag
    - beets.dbcore
    - beets.ui
    - beets.util
    - beetsplug
    - beetsplug.bpd
    - beetsplug.lastgenre
    - beetsplug.metasync
    - beetsplug.web

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - beet --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://beets.radbox.org/
  license: MIT License
  summary: 'music tagger and library organizer'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
