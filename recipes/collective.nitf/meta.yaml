package:
  name: collective.nitf
  version: "1.0b5"

source:
  fn: collective.nitf-1.0b5.zip
  url: https://pypi.python.org/packages/source/c/collective.nitf/collective.nitf-1.0b5.zip
  md5: 8da3f38c5e7b03eab5ef6fdcd428c2f0
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - collective.nitf = collective.nitf:main
    #
    # Would create an entry point called collective.nitf that calls collective.nitf.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - accesscontrol
    - acquisition
    - collective.js.galleria
    - collective.js.jqueryui
    - collective.prettydate >=1.1
    - collective.z3cform.widgets >=1.0b9
    - five.grok
    - pillow
    - plone.app.dexterity[grok,relations]
    - plone.app.imaging
    - plone.app.lockingbehavior
    - plone.app.portlets
    - plone.app.querystring >=1.2.5
    - plone.app.referenceablebehavior
    - plone.app.registry
    - plone.app.textfield
    - plone.app.vocabularies
    - plone.autoform
    - plone.dexterity
    - plone.directives.dexterity
    - plone.directives.form
    - plone.formwidget.contenttree
    - plone.indexer
    - plone.portlets
    - plone.registry
    - plone.uuid
    - products.cmfcore
    - products.cmfplone >=4.2
    - products.genericsetup
    - setuptools
    - z3c.form
    - z3c.relationfield
    - zope.browserpage
    - zope.component
    - zope.i18nmessageid
    - zope.interface
    - zope.schema

  run:
    - python
    - setuptools
    - accesscontrol
    - acquisition
    - collective.js.galleria
    - collective.js.jqueryui
    - collective.prettydate >=1.1
    - collective.z3cform.widgets >=1.0b9
    - five.grok
    - pillow
    - plone.app.dexterity[grok,relations]
    - plone.app.imaging
    - plone.app.lockingbehavior
    - plone.app.portlets
    - plone.app.querystring >=1.2.5
    - plone.app.referenceablebehavior
    - plone.app.registry
    - plone.app.textfield
    - plone.app.vocabularies
    - plone.autoform
    - plone.dexterity
    - plone.directives.dexterity
    - plone.directives.form
    - plone.formwidget.contenttree
    - plone.indexer
    - plone.portlets
    - plone.registry
    - plone.uuid
    - products.cmfcore
    - products.cmfplone >=4.2
    - products.genericsetup
    - setuptools
    - z3c.form
    - z3c.relationfield
    - zope.browserpage
    - zope.component
    - zope.i18nmessageid
    - zope.interface
    - zope.schema

test:
  # Python imports
  imports:
    - collective
    - collective.nitf
    - collective.nitf.Extensions
    - collective.nitf.portlets
    - collective.nitf.tests
    - collective.nitf.upgrades
    - collective.nitf.upgrades.v1007
    - collective.nitf.upgrades.v1008

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/collective/collective.nitf
  license: GNU General Public License v2 (GPLv2)
  summary: "A content type inspired on the IPTC's News Industry Text "

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
