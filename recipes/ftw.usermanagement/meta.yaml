package:
  name: ftw.usermanagement
  version: "1.9.1"

source:
  fn: ftw.usermanagement-1.9.1.zip
  url: https://pypi.python.org/packages/source/f/ftw.usermanagement/ftw.usermanagement-1.9.1.zip
  md5: 2f1b04bdb39ecff47524c8ad6cd514e3
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ftw.usermanagement = ftw.usermanagement:main
    #
    # Would create an entry point called ftw.usermanagement that calls ftw.usermanagement.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - ftw.table
    - ftw.tabbedview
    - plone.principalsource
    - collective.js.jqueryui
    - collective.js.ui.multiselect

  run:
    - python
    - setuptools
    - setuptools
    - ftw.table
    - ftw.tabbedview
    - plone.principalsource
    - collective.js.jqueryui
    - collective.js.ui.multiselect

test:
  # Python imports
  imports:
    - ftw
    - ftw.usermanagement
    - ftw.usermanagement.browser
    - ftw.usermanagement.browser.group
    - ftw.usermanagement.browser.mail_templates
    - ftw.usermanagement.browser.user
    - ftw.usermanagement.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/4teamwork/ftw.usermanagement
  license: GPL2
  summary: 'An advanced view for managing users in plone.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
