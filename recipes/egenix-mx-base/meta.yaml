package:
  name: egenix-mx-base
  version: "3.2.8"

source:
  fn: egenix-mx-base-3.2.8.zip
  url: https://pypi.python.org/packages/source/e/egenix-mx-base/egenix-mx-base-3.2.8.zip
  md5: 6bb912968a048426a66b9053cced3e0a
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - egenix-mx-base = egenix-mx-base:main
    #
    # Would create an entry point called egenix-mx-base that calls egenix-mx-base.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - mx
    - mx.BeeBase
    - mx.BeeBase.mxBeeBase
    - mx.DateTime
    - mx.DateTime.Examples
    - mx.DateTime.mxDateTime
    - mx.Misc
    - mx.Proxy
    - mx.Proxy.mxProxy
    - mx.Queue
    - mx.Queue.mxQueue
    - mx.Stack
    - mx.Stack.mxStack
    - mx.TextTools
    - mx.TextTools.Constants
    - mx.TextTools.Examples
    - mx.TextTools.mxTextTools
    - mx.Tools
    - mx.Tools.Examples
    - mx.Tools.mxTools
    - mx.UID
    - mx.UID.mxUID
    - mx.URL
    - mx.URL.mxURL

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.egenix.com/products/python/mxBase/
  license: Python License (CNRI Python License)
  summary: 'eGenix mx Base Distribution for Python - mxDateTime, mxTextTools, mxProxy, mxTools, mxBeeBase, mxStack, mxQueue, mxURL, mxUID'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
