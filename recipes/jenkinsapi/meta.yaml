package:
  name: jenkinsapi
  version: "0.2.28"

source:
  fn: jenkinsapi-0.2.28.tar.gz
  url: https://pypi.python.org/packages/source/j/jenkinsapi/jenkinsapi-0.2.28.tar.gz
  md5: 96e1669a13d487483afe55af771358f5
#  patches:
   # List any patch files here
   # - fix.patch

build:
  noarch_python: True
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - jenkinsapi = jenkinsapi:main
    #
    # Would create an entry point called jenkinsapi that calls jenkinsapi.main()

    - jenkins_invoke=jenkinsapi.command_line.jenkins_invoke:main
    - jenkinsapi_version=jenkinsapi.command_line.jenkinsapi_version:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - requests >=2.3.0
    - pytz >=2014.4

  run:
    - python
    - requests >=2.3.0
    - pytz >=2014.4

test:
  # Python imports
  imports:
    - jenkinsapi
    - jenkinsapi.command_line
    - jenkinsapi.utils
    - jenkinsapi_tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - jenkins_invoke --help
    - jenkinsapi_version --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    - coverage
    - mock
    - nose
    - unittest2
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/salimfadhley/jenkinsapi
  license: MIT License
  summary: 'A Python API for accessing resources on a Jenkins continuous-integration server.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
