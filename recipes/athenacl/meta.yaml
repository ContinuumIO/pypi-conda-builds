package:
  name: athenacl
  version: "2.0.0a15"

source:
  fn: athenaCL-2.0.0a15.tar.gz
  url: http://athenacl.googlecode.com/files/athenaCL-2.0.0a15.tar.gz
  #md5: 
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - athenacl = athenacl:main
    #
    # Would create an entry point called athenacl that calls athenacl.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - athenaCL
    - athenaCL.demo
    - athenaCL.demo.csound
    - athenaCL.demo.legacy
    - athenaCL.demo.manual
    - athenaCL.demo.midi
    - athenaCL.libATH
    - athenaCL.libATH.libGfx
    - athenaCL.libATH.libOrc
    - athenaCL.libATH.libPmtr
    - athenaCL.libATH.libTM
    - athenaCL.libATH.omde
    - athenaCL.test
    - athenacl

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.athenacl.org
  license: GNU General Public License (GPL)
  summary: 'modular poly-paradigm algorithmic music composition in a cross-platform interactive command-line environment.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
