package:
  name: securesubmit
  version: "2.0.1.1"

source:
  fn: SecureSubmit-2.0.1.1.tar.gz
  url: https://pypi.python.org/packages/source/S/SecureSubmit/SecureSubmit-2.0.1.1.tar.gz
  md5: 1e9199cef611fc85e1cd0f414c405038
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - securesubmit = securesubmit:main
    #
    # Would create an entry point called securesubmit that calls securesubmit.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - xmltodict >=0.9.0
    - jsonpickle >=0.6.1
    - enum >=0.4.4
    - requests >=2.1.0

  run:
    - python
    - xmltodict >=0.9.0
    - jsonpickle >=0.6.1
    - enum >=0.4.4
    - requests >=2.1.0

test:
  # Python imports
  imports:
    - securesubmit
    - securesubmit.applepay
    - securesubmit.entities
    - securesubmit.infrastructure
    - securesubmit.services
    - securesubmit.services.fluent
    - securesubmit.tests
    - securesubmit.tests.applepay
    - securesubmit.tests.fluent
    - securesubmit.tests.payplan

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://developer.heartlandpaymentsystems.com/SecureSubmit
  license: LICENSE.txt
  summary: 'SDK for integrating with the Heartland Portico Gateway'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
