package:
  name: cleverharold
  version: "0.1"

source:
  fn: CleverHarold-0.1.tar.gz
  url: https://pypi.python.org/packages/source/C/CleverHarold/CleverHarold-0.1.tar.gz
  md5: 083d3a727366585314c6c51c61998575
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cleverharold = cleverharold:main
    #
    # Would create an entry point called cleverharold that calls cleverharold.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - celementtree >=1.0.2
    - cheetah ==1.0
    - docutils >=0.4
    - flup >=0.5
    - kid >=0.9.3
    - mechanize >=0.1.2b
    - paste ==0.9.6
    - pastedeploy >=0.9.6
    - pastescript >=0.9.6
    - simplejson >=1.3
    - sqlalchemy >=0.2.6
    - static >=0.3
    - wsgiref >0.1

  run:
    - python
    - setuptools
    - celementtree >=1.0.2
    - cheetah ==1.0
    - docutils >=0.4
    - flup >=0.5
    - kid >=0.9.3
    - mechanize >=0.1.2b
    - paste ==0.9.6
    - pastedeploy >=0.9.6
    - pastescript >=0.9.6
    - simplejson >=1.3
    - sqlalchemy >=0.2.6
    - static >=0.3
    - wsgiref >0.1

test:
  # Python imports
  imports:
    - cleverharold
    - harold
    - harold.armor
    - harold.cache
    - harold.database
    - harold.form
    - harold.form.constructor
    - harold.form.responder
    - harold.lib
    - harold.log
    - harold.plugins
    - harold.publishers
    - harold.sessions
    - harold.tests
    - harold.tests.files_four
    - harold.tests.files_four.pack
    - harold.tests.files_mixed
    - harold.views
    - harold.views.defaults
    - harold.views.site

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.cleverharold.org
  license: GNU General Public License (GPL)
  summary: 'Experimental Web Framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
