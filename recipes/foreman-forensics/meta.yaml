package:
  name: foreman-forensics
  version: "0.0.1"

source:
  fn: foreman-forensics-0.0.1a.tar.gz
  url: https://pypi.python.org/packages/source/F/Foreman-Forensics/foreman-forensics-0.0.1a.tar.gz
  md5: 7a28e2ca4d34bee93112f2be5429e3d6
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - foreman-forensics = foreman-forensics:main
    #
    # Would create an entry point called foreman-forensics that calls foreman-forensics.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - simplejson
    - formencode ==1.3.0a1
    - mako ==0.9.1
    - sqlalchemy ==0.9.1
    - werkzeug ==0.9.4
    - pil ==1.1.7
    - qrcode ==4.0.4

  run:
    - python
    - simplejson
    - formencode ==1.3.0a1
    - mako ==0.9.1
    - sqlalchemy ==0.9.1
    - werkzeug ==0.9.4
    - pil ==1.1.7
    - qrcode ==4.0.4

test:
  # Python imports
  imports:
    - foreman
    - foreman.controllers
    - foreman.forms
    - foreman.model
    - foreman.utils

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://foreman-forensics.org
  license: GPL 3.0
  summary: 'Open Source Forensic Case Management'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
