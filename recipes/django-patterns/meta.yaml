package:
  name: django-patterns
  version: "0.0.3"

source:
  fn: django-patterns-0.0.3.tar.gz
  url: https://pypi.python.org/packages/source/d/django-patterns/django-patterns-0.0.3.tar.gz
  md5: 61f4edee969cd573b750bc627d5bc277
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-patterns = django-patterns:main
    #
    # Would create an entry point called django-patterns that calls django-patterns.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - django_patterns
    - django_patterns.db
    - django_patterns.db.fields
    - django_patterns.db.fields.base64_encoded_test
    - django_patterns.db.fields.uuid_field_test
    - django_patterns.db.models
    - django_patterns.db.models.mixins
    - django_patterns.db.models.mixins.positional_order_test
    - django_patterns.db.models.mixins.uuid_primary_key_test
    - django_patterns.db.models.mixins.uuid_stamped_test
    - django_patterns.management
    - django_patterns.management.commands
    - django_patterns.templatetags
    - django_patterns.test
    - django_patterns.test.project

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.github.com/rokusigma/django-patterns/
  license: UNKNOWN
  summary: 'A collection of commonly used Python patterns.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
