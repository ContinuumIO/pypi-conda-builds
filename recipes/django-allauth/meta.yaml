package:
  name: django-allauth
  version: "0.19.1"

source:
  fn: django-allauth-0.19.1.tar.gz
  url: https://pypi.python.org/packages/source/d/django-allauth/django-allauth-0.19.1.tar.gz
  md5: 72fbf0f783feb8172ec7143528f732f9
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-allauth = django-allauth:main
    #
    # Would create an entry point called django-allauth that calls django-allauth.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django >=1.4.3
    - python-openid >=2.2.5
    - requests-oauthlib >=0.3.0
    - requests >=1.0.3

  run:
    - python
    - django >=1.4.3
    - python-openid >=2.2.5
    - requests-oauthlib >=0.3.0
    - requests >=1.0.3

test:
  # Python imports
  imports:
    - allauth
    - allauth.account
    - allauth.account.management
    - allauth.account.management.commands
    - allauth.account.migrations
    - allauth.account.templatetags
    - allauth.socialaccount
    - allauth.socialaccount.migrations
    - allauth.socialaccount.providers
    - allauth.socialaccount.providers.amazon
    - allauth.socialaccount.providers.angellist
    - allauth.socialaccount.providers.bitbucket
    - allauth.socialaccount.providers.bitly
    - allauth.socialaccount.providers.coinbase
    - allauth.socialaccount.providers.dropbox
    - allauth.socialaccount.providers.facebook
    - allauth.socialaccount.providers.facebook.south_migrations
    - allauth.socialaccount.providers.feedly
    - allauth.socialaccount.providers.flickr
    - allauth.socialaccount.providers.foursquare
    - allauth.socialaccount.providers.fxa
    - allauth.socialaccount.providers.github
    - allauth.socialaccount.providers.google
    - allauth.socialaccount.providers.hubic
    - allauth.socialaccount.providers.instagram
    - allauth.socialaccount.providers.linkedin
    - allauth.socialaccount.providers.linkedin_oauth2
    - allauth.socialaccount.providers.mailru
    - allauth.socialaccount.providers.oauth
    - allauth.socialaccount.providers.oauth2
    - allauth.socialaccount.providers.odnoklassniki
    - allauth.socialaccount.providers.openid
    - allauth.socialaccount.providers.openid.south_migrations
    - allauth.socialaccount.providers.orcid
    - allauth.socialaccount.providers.paypal
    - allauth.socialaccount.providers.persona
    - allauth.socialaccount.providers.soundcloud
    - allauth.socialaccount.providers.stackexchange
    - allauth.socialaccount.providers.tumblr
    - allauth.socialaccount.providers.twitch
    - allauth.socialaccount.providers.twitter
    - allauth.socialaccount.providers.twitter.south_migrations
    - allauth.socialaccount.providers.vimeo
    - allauth.socialaccount.providers.vk
    - allauth.socialaccount.providers.weibo
    - allauth.socialaccount.providers.windowslive
    - allauth.socialaccount.providers.xing
    - allauth.socialaccount.south_migrations
    - allauth.socialaccount.templatetags

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/pennersr/django-allauth
  license: MIT License
  summary: 'Integrated set of Django applications addressing authentication, registration, account management as well as 3rd party (social) account authentication.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
