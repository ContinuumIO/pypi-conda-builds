package:
  name: link-py
  version: "0.0.3"

source:
  fn: link-py-0.0.3.tar.gz
  url: https://pypi.python.org/packages/source/l/link-py/link-py-0.0.3.tar.gz
  md5: d78c234c637450e3281cbbcc013c2922
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - link-py = link-py:main
    #
    # Would create an entry point called link-py that calls link-py.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - certifi ==0.0.8
    - chardet ==1.0.1
    - httplib2 ==0.7.4
    - oauth2 ==1.5.211
    - requests ==0.11.2
    - requests-oauth ==0.3.0
    - simplejson ==2.5.0
    - wsgiref ==0.1.2

  run:
    - python
    - certifi ==0.0.8
    - chardet ==1.0.1
    - httplib2 ==0.7.4
    - oauth2 ==1.5.211
    - requests ==0.11.2
    - requests-oauth ==0.3.0
    - simplejson ==2.5.0
    - wsgiref ==0.1.2

test:
  # Python imports
  imports:
    - link

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://mikegrouchy.com/link
  license: MIT
  summary: 'Your Master Sword for dealing with the Linkedin API'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
