package:
  name: merlot
  version: "0.2"

source:
  fn: Merlot-0.2.zip
  url: https://pypi.python.org/packages/source/M/Merlot/Merlot-0.2.zip
  md5: c9898fa95e830f6c1e55c973efb8cf61
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - merlot = merlot:main
    #
    # Would create an entry point called merlot that calls merlot.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - grok
    - grokui.admin
    - z3c.testsetup
    - grokcore.startup
    - plone.i18n
    - zope.browserresource
    - z3c.relationfieldui
    - webob
    - z3c.objpath
    - zope.app.schema
    - zope.pluggableauth
    - zope.i18n
    - fanstatic
    - zope.fanstatic

  run:
    - python
    - setuptools
    - setuptools
    - grok
    - grokui.admin
    - z3c.testsetup
    - grokcore.startup
    - plone.i18n
    - zope.browserresource
    - z3c.relationfieldui
    - webob
    - z3c.objpath
    - zope.app.schema
    - zope.pluggableauth
    - zope.i18n
    - fanstatic
    - zope.fanstatic

test:
  # Python imports
  imports:
    - merlot

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://code.google.com/p/merlot/
  license: GNU General Public License (GPL)
  summary: 'A web-based project management software'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
