package:
  name: m3-datalogging
  version: "3.0.1"

source:
  fn: m3-datalogging-3.0.1.tar.gz
  url: https://pypi.python.org/packages/source/m/m3-datalogging/m3-datalogging-3.0.1.tar.gz
  md5: 9dad7510105ceb3192060a650d8c015f
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - m3-datalogging = m3-datalogging:main
    #
    # Would create an entry point called m3-datalogging that calls m3-datalogging.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django-json-field
    - m3-legacy
    - architect ==0.4.0

  run:
    - python
    - django-json-field
    - m3-legacy
    - architect ==0.4.0

test:
  # Python imports
  imports:
    - datalogging
    - datalogging.management
    - datalogging.management.commands
    - datalogging.migrations
    - datalogging.south_migrate
    - datalogging.south_migrate.management
    - datalogging.south_migrate.management.commands
    - datalogging.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://bitbucket.org/barsgroup/data-logging
  license: MIT License
  summary: 'Logging system to spy on users.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
