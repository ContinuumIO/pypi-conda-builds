package:
  name: django-mapit
  version: "1.3.1.post1"

source:
  fn: django-mapit-1.3.1.post1.tar.gz
  url: https://pypi.python.org/packages/source/d/django-mapit/django-mapit-1.3.1.post1.tar.gz
  md5: be37ce646fb88bb72eb265e2da089bd3
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-mapit = django-mapit:main
    #
    # Would create an entry point called django-mapit that calls django-mapit.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django >=1.4.18
    - south ==1.0.2
    - psycopg2
    - pyyaml
    - shapely

  run:
    - python
    - django >=1.4.18
    - south ==1.0.2
    - psycopg2
    - pyyaml
    - shapely

test:
  # Python imports
  imports:
    - mapit
    - mapit.countries
    - mapit.management
    - mapit.management.commands
    - mapit.middleware
    - mapit.migrations
    - mapit.south_migrations
    - mapit.templatetags
    - mapit.tests
    - mapit.views
    - mapit_gb
    - mapit_gb.controls
    - mapit_gb.management
    - mapit_gb.management.commands
    - mapit_global
    - mapit_global.management
    - mapit_global.management.commands
    - mapit_it
    - mapit_it.management
    - mapit_it.management.commands
    - mapit_no
    - mapit_no.management
    - mapit_no.management.commands
    - mapit_za
    - mapit_za.management
    - mapit_za.management.commands

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/mysociety/mapit
  license: GNU Affero General Public License v3
  summary: 'A web service for mapping postcodes and points to current or past administrative area information and polygons.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
