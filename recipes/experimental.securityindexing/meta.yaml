package:
  name: experimental.securityindexing
  version: "0.6"

source:
  fn: experimental.securityindexing-0.6.zip
  url: https://pypi.python.org/packages/source/e/experimental.securityindexing/experimental.securityindexing-0.6.zip
  md5: bcda09e8993fbcb6a5488d86dec8141b
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - experimental.securityindexing = experimental.securityindexing:main
    #
    # Would create an entry point called experimental.securityindexing that calls experimental.securityindexing.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - plone.api
    - zope.annotation
    - zope.component
    - zope.interface
    - products.archetypes
    - products.cmfcore

  run:
    - python
    - setuptools
    - setuptools
    - plone.api
    - zope.annotation
    - zope.component
    - zope.interface
    - products.archetypes
    - products.cmfcore

test:
  # Python imports
  imports:
    - experimental
    - experimental.securityindexing
    - experimental.securityindexing.Extensions
    - experimental.securityindexing.browser
    - experimental.securityindexing.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/ploneintranet/experimental.securityindexing
  license: GPLv2
  summary: '      Optimises indexing of object security for a Plone site.\n      '

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
