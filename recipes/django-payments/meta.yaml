package:
  name: django-payments
  version: "0.6.5"

source:
  fn: django-payments-0.6.5.tar.gz
  url: https://pypi.python.org/packages/source/d/django-payments/django-payments-0.6.5.tar.gz
  md5: 9aa4e8d0fbc5bdd6c4189ac331b759ad
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-payments = django-payments:main
    #
    # Would create an entry point called django-payments that calls django-payments.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django >=1.5
    - pycrypto >=2.6
    - pyjwt
    - requests >=1.2.0
    - stripe >=1.9.8
    - suds-jurko >=0.6
    - braintree >=2.24.1

  run:
    - python
    - django >=1.5
    - pycrypto >=2.6
    - pyjwt
    - requests >=1.2.0
    - stripe >=1.9.8
    - suds-jurko >=0.6
    - braintree >=2.24.1

test:
  # Python imports
  imports:
    - payments
    - payments.authorizenet
    - payments.braintree
    - payments.cybersource
    - payments.dotpay
    - payments.dummy
    - payments.paypal
    - payments.sagepay
    - payments.stripe
    - payments.wallet

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/mirumee/django-payments
  license: BSD License
  summary: 'Universal payment handling for Django'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
