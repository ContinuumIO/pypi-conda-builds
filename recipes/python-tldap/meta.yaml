package:
  name: python-tldap
  version: "0.3.10"

source:
  fn: python-tldap-0.3.10.tar.gz
  url: https://pypi.python.org/packages/source/p/python-tldap/python-tldap-0.3.10.tar.gz
  md5: 88640b2a03fee7f90b284d02b90905f0
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - python-tldap = python-tldap:main
    #
    # Would create an entry point called python-tldap that calls python-tldap.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django
    - ldap3
    - passlib
    - six

  run:
    - python
    - django
    - ldap3
    - passlib
    - six

test:
  # Python imports
  imports:
    - docs
    - tldap
    - tldap.backend
    - tldap.methods
    - tldap.methods.migrations
    - tldap.methods.south_migrations
    - tldap.schemas
    - tldap.test
    - tldap.test.ldap_schemas
    - tldap.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/Karaage-Cluster/python-tldap
  license: GNU Lesser General Public License v3 or later (LGPLv3+)
  summary: 'High level python LDAP Library'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
