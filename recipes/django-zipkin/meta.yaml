package:
  name: django-zipkin
  version: "0.0.2"

source:
  fn: django-zipkin-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/d/django-zipkin/django-zipkin-0.0.2.tar.gz
  md5: d245f814a1d68eff2d0ff1910d09ca6c
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-zipkin = django-zipkin:main
    #
    # Would create an entry point called django-zipkin that calls django-zipkin.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - thrift >=0.9.1

  run:
    - python
    - thrift >=0.9.1

test:
  # Python imports
  imports:
    - django_zipkin
    - django_zipkin._thrift
    - django_zipkin._thrift.scribe
    - django_zipkin._thrift.zipkinCollector
    - django_zipkin._thrift.zipkinCore
    - django_zipkin._thrift.zipkinDependencies
    - django_zipkin._thrift.zipkinQuery
    - django_zipkin.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/prezi/django-zipkin
  license: WTFPL License
  summary: 'django-zipkin is a Django middleware and api for recording and sending messages to Zipkin'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
