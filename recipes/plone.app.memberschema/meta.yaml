package:
  name: plone.app.memberschema
  version: "1.0a3"

source:
  fn: plone.app.memberschema-1.0a3.tar.gz
  url: https://pypi.python.org/packages/source/p/plone.app.memberschema/plone.app.memberschema-1.0a3.tar.gz
  md5: c1dbb7f446d0d1acd5294c2fdca839da
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - plone.app.memberschema = plone.app.memberschema:main
    #
    # Would create an entry point called plone.app.memberschema that calls plone.app.memberschema.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - zodb3
    - zope.schema
    - zope.dottedname
    - zope.i18nmessageid
    - z3c.form
    - plone.z3cform
    - plone.memoize
    - plone.autoform >=1.0b2
    - plone.namedfile
    - plone.formwidget.namedfile
    - plone
    - products.plonepas
    - products.pluggableauthservice
    - products.statusmessages
    - products.cmfcore

  run:
    - python
    - setuptools
    - setuptools
    - zodb3
    - zope.schema
    - zope.dottedname
    - zope.i18nmessageid
    - z3c.form
    - plone.z3cform
    - plone.memoize
    - plone.autoform >=1.0b2
    - plone.namedfile
    - plone.formwidget.namedfile
    - plone
    - products.plonepas
    - products.pluggableauthservice
    - products.statusmessages
    - products.cmfcore

test:
  # Python imports
  imports:
    - plone
    - plone.app
    - plone.app.memberschema
    - plone.app.memberschema.browser
    - plone.app.memberschema.exportimport
    - plone.app.memberschema.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/plone.app.memberschema
  license: GPL
  summary: 'Support for storing member data based on interfaces'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
