package:
  name: django-test-utils
  version: "0.3"

source:
  fn: django-test-utils-0.3.tar.gz
  url: https://pypi.python.org/packages/source/d/django-test-utils/django-test-utils-0.3.tar.gz
  md5: 3eb304a9964fd510cc2f6f444d239142
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-test-utils = django-test-utils:main
    #
    # Would create an entry point called django-test-utils that calls django-test-utils.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - beautifulsoup

  run:
    - python
    - beautifulsoup

test:
  # Python imports
  imports:
    - test_project
    - test_project.polls
    - test_project.test_app
    - test_project.test_app.tests
    - test_utils
    - test_utils.crawler
    - test_utils.crawler.plugins
    - test_utils.management
    - test_utils.management.commands
    - test_utils.templatetags
    - test_utils.test_runners
    - test_utils.testmaker
    - test_utils.testmaker.middleware
    - test_utils.testmaker.processors
    - test_utils.testmaker.serializers
    - test_utils.utils

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/ericholscher/django-test-utils/tree/master
  license: UNKNOWN
  summary: 'A package to help testing in Django'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
