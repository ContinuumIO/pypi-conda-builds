package:
  name: appy
  version: "0.9.2"

source:
  fn: appy-0.9.2.tar.gz
  url: https://pypi.python.org/packages/source/a/appy/appy-0.9.2.tar.gz
  md5: a96fa15b3386cd4a031e7c722445911f
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - appy = appy:main
    #
    # Would create an entry point called appy that calls appy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - appy
    - appy.bin
    - appy.fields
    - appy.gen
    - appy.gen.mixins
    - appy.gen.templates
    - appy.gen.tr
    - appy.gen.ui
    - appy.gen.ui.ckeditor
    - appy.gen.ui.jscalendar
    - appy.gen.ui.jscalendar.lang
    - appy.gen.ui.jscalendar.skins
    - appy.gen.ui.jscalendar.skins.aqua
    - appy.gen.ui.jscalendar.skins.tiger
    - appy.gen.wrappers
    - appy.pod
    - appy.pod.test
    - appy.pod.test.contexts
    - appy.pod.test.images
    - appy.pod.test.results
    - appy.pod.test.templates
    - appy.px
    - appy.shared
    - appy.shared.data

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://appyframework.org
  license: GPL
  summary: 'The Appy framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
