package:
  name: corejet.robot
  version: "0.5.0"

source:
  fn: corejet.robot-0.5.0.zip
  url: https://pypi.python.org/packages/source/c/corejet.robot/corejet.robot-0.5.0.zip
  md5: d424a40926186de4199bde658eb2ea64
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - corejet.robot = corejet.robot:main
    #
    # Would create an entry point called corejet.robot that calls corejet.robot.main()

    - corejet2robot=corejet.robot.scripts.corejet2robot:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - argparse
    - robotsuite
    - corejet.core
    - corejet.testrunner >=1.0.1
    - zope.interface
    - zope.component

  run:
    - python
    - setuptools
    - setuptools
    - argparse
    - robotsuite
    - corejet.core
    - corejet.testrunner >=1.0.1
    - zope.interface
    - zope.component

test:
  # Python imports
  imports:
    - corejet
    - corejet.robot
    - corejet.robot.scripts

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - corejet2robot --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/datakurre/corejet.robot/
  license: GPL
  summary: 'Robot Framework support for CoreJet'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
