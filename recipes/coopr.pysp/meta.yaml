package:
  name: coopr.pysp
  version: "3.5.5"

source:
  fn: coopr.pysp-3.5.5.tar.gz
  url: https://pypi.python.org/packages/source/c/coopr.pysp/coopr.pysp-3.5.5.tar.gz
  md5: 523293fc7d8c8948f63ddd924061cefd
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - coopr.pysp = coopr.pysp:main
    #
    # Would create an entry point called coopr.pysp that calls coopr.pysp.main()

    - runph=coopr.pysp.phinit:PH_main
    - rundph=coopr.pysp.phinit:DualPH_main
    - runef=coopr.pysp.ef_writer_script:main
    - phsolverserver=coopr.pysp.phsolverserver:main
    - computeconf=coopr.pysp.computeconf:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - setuptools

test:
  # Python imports
  imports:
    - coopr
    - coopr.pysp
    - coopr.pysp.plugins
    - coopr.pysp.tests
    - coopr.pysp.tests.examples
    - coopr.pysp.tests.unit
    - coopr.pysp.util

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - runph --help
    - rundph --help
    - runef --help
    - phsolverserver --help
    - computeconf --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://software.sandia.gov/svn/public/coopr/coopr.pysp
  license: BSD License
  summary: 'Coopr stochastic programming modeling and solver techniques'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
