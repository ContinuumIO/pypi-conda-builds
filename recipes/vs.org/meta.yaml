package:
  name: vs.org
  version: "1.1.1"

source:
  fn: vs.org-1.1.1.zip
  url: https://pypi.python.org/packages/source/v/vs.org/vs.org-1.1.1.zip
  md5: b7397d4f8ecf4e47e94674f8af89ff4c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - vs.org = vs.org:main
    #
    # Would create an entry point called vs.org that calls vs.org.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - pycountry
    - archetypes.referencebrowserwidget
    - products.datagridfield
    - products.masterselectwidget
    - products.atvocabularymanager

  run:
    - python
    - setuptools
    - setuptools
    - pycountry
    - archetypes.referencebrowserwidget
    - products.datagridfield
    - products.masterselectwidget
    - products.atvocabularymanager

test:
  # Python imports
  imports:
    - vs
    - vs.org
    - vs.org.adapters
    - vs.org.browser
    - vs.org.content
    - vs.org.interfaces
    - vs.org.portlets
    - vs.org.tests
    - vs.org.validators

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.plone.org/svn/collective/vs.org/
  license: GNU General Public License (GPL)
  summary: 'Plone 4 add-on: Representation of organisational structures'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
