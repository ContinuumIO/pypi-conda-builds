package:
  name: herculeum
  version: "0.13.1"

source:
  fn: herculeum-0.13.1.tar.gz
  url: https://pypi.python.org/packages/source/h/herculeum/herculeum-0.13.1.tar.gz
  md5: 6e729dd29b4a971f491f49142230d30a
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - herculeum = herculeum:main
    #
    # Would create an entry point called herculeum that calls herculeum.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - herculeum
    - herculeum.ai
    - herculeum.config
    - herculeum.config.levels
    - herculeum.ui
    - herculeum.ui.controllers
    - herculeum.ui.gui
    - herculeum.ui.gui.animations
    - herculeum.ui.text
    - pyherc
    - pyherc.ai
    - pyherc.config
    - pyherc.config.dsl
    - pyherc.data
    - pyherc.data.effects
    - pyherc.data.magic
    - pyherc.data.traps
    - pyherc.events
    - pyherc.generators
    - pyherc.generators.level
    - pyherc.generators.level.decorator
    - pyherc.generators.level.partitioners
    - pyherc.generators.level.room
    - pyherc.ports
    - pyherc.rules
    - pyherc.rules.combat
    - pyherc.rules.consume
    - pyherc.rules.inventory
    - pyherc.rules.magic
    - pyherc.rules.metamorphosis
    - pyherc.rules.mitosis
    - pyherc.rules.moving
    - pyherc.rules.waiting

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/tuturto/pyherc/
  license: GNU General Public License v3 or later (GPLv3+)
  summary: 'Small roguelike game'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
