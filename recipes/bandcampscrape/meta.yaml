package:
  name: bandcampscrape
  version: "0.0.2"

source:
  fn: bandcampscrape-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/b/bandcampscrape/bandcampscrape-0.0.2.tar.gz
  md5: 54e8c8b3e4690dac51b8e9482233bb28
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bandcampscrape = bandcampscrape:main
    #
    # Would create an entry point called bandcampscrape that calls bandcampscrape.main()

    - bandcampscrape = bandcampscrape.bandcampscrape:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - args ==0.1.0
    - beautifulsoup4 ==4.3.2
    - clint ==0.4.1
    - demjson ==2.2.2
    - mutagen ==1.26
    - requests ==2.4.3
    - wsgiref ==0.1.2

  run:
    - python
    - args ==0.1.0
    - beautifulsoup4 ==4.3.2
    - clint ==0.4.1
    - demjson ==2.2.2
    - mutagen ==1.26
    - requests ==2.4.3
    - wsgiref ==0.1.2

test:
  # Python imports
  imports:
    - bandcampscrape

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - bandcampscrape --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/ronier/bandcampscrape
  license: Apache Software License
  summary: 'Downloader for BandCamp albums '

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
