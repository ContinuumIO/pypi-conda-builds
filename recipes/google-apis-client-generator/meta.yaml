package:
  name: google-apis-client-generator
  version: "1.4.2"

source:
  fn: google-apis-client-generator-1.4.2.tar.gz
  url: https://pypi.python.org/packages/source/g/google-apis-client-generator/google-apis-client-generator-1.4.2.tar.gz
  md5: 89bede903d8161c98a8426bb1d0f180a
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - google-apis-client-generator = google-apis-client-generator:main
    #
    # Would create an entry point called google-apis-client-generator that calls google-apis-client-generator.main()

    - generate_library = googleapis.codegen.script_stubs:RunGenerateLibrary
    - expand_templates = googleapis.codegen.script_stubs:RunExpandTemplates

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django
    - httplib2
    - google-apputils
    - python-gflags
    - google-api-python-client

  run:
    - python
    - django
    - httplib2
    - google-apputils
    - python-gflags
    - google-api-python-client

test:
  # Python imports
  imports:
    - googleapis
    - googleapis.codegen
    - googleapis.codegen.filesys
    - googleapis.codegen.utilities

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - generate_library --help
    - expand_templates --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://code.google.com/p/google-apis-client-generator/
  license: UNKNOWN
  summary: 'Google Apis Client Generator'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
