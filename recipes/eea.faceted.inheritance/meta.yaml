package:
  name: eea.faceted.inheritance
  version: "4.8"

source:
  fn: eea.faceted.inheritance-4.8.zip
  url: https://pypi.python.org/packages/source/e/eea.faceted.inheritance/eea.faceted.inheritance-4.8.zip
  md5: c35d6bb8f4279ed9cb9ddfdd314f9c87
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - eea.faceted.inheritance = eea.faceted.inheritance:main
    #
    # Would create an entry point called eea.faceted.inheritance that calls eea.faceted.inheritance.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - eea.facetednavigation

  run:
    - python
    - setuptools
    - setuptools
    - eea.facetednavigation

test:
  # Python imports
  imports:
    - eea
    - eea.faceted
    - eea.faceted.inheritance
    - eea.faceted.inheritance.browser
    - eea.faceted.inheritance.browser.app
    - eea.faceted.inheritance.criteria
    - eea.faceted.inheritance.exportimport
    - eea.faceted.inheritance.subtypes
    - eea.faceted.inheritance.tests
    - eea.faceted.inheritance.upgrades
    - eea.faceted.inheritance.versions

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://eea.github.com/docs/eea.faceted.inheritance
  license: GPL
  summary: 'EEA Faceted Navigation extension that allow a faceted navigable object to inherit faceted configuration from another faceted navigable object.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
