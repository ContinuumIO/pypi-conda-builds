package:
  name: cromlech.container
  version: "0.1"

source:
  fn: cromlech.container-0.1.tar.gz
  url: https://pypi.python.org/packages/source/c/cromlech.container/cromlech.container-0.1.tar.gz
  md5: 116d93ca1449918ede4bbc53bf6f4774
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cromlech.container = cromlech.container:main
    #
    # Would create an entry point called cromlech.container that calls cromlech.container.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - zope.interface
    - zope.component
    - zope.dottedname
    - zope.event
    - zope.i18nmessageid
    - zope.lifecycleevent
    - zope.location
    - zope.schema
    - zope.size

  run:
    - python
    - setuptools
    - setuptools
    - zope.interface
    - zope.component
    - zope.dottedname
    - zope.event
    - zope.i18nmessageid
    - zope.lifecycleevent
    - zope.location
    - zope.schema
    - zope.size

test:
  # Python imports
  imports:
    - cromlech
    - cromlech.container
    - cromlech.container.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://gitweb.dolmen-project.org/
  license: ZPL
  summary: 'Cromlech Web Framework container components definitions.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
