package:
  name: djazator
  version: "0.2.5"

source:
  fn: djazator-0.2.5.tar.gz
  url: https://pypi.python.org/packages/source/d/djazator/djazator-0.2.5.tar.gz
  md5: 3adaa652a421808af6583c4b76e0f0ef
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - djazator = djazator:main
    #
    # Would create an entry point called djazator that calls djazator.main()

    - djazator-server = djazator.server:main
    - djazator-mq = djazator.mq:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pyzmq >=2.0.0,<=2.2.0.1
    - sockjs-tornado ==1.0.0
    - tornado ==2.4.1

  run:
    - python
    - pyzmq >=2.0.0,<=2.2.0.1
    - sockjs-tornado ==1.0.0
    - tornado ==2.4.1

test:
  # Python imports
  imports:
    - djazator
    - djazator.templatetags

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - djazator-server --help
    - djazator-mq --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  #home: The package home page
  license: MIT License
  summary: 'A simple django plugin for sending push notifications from django server to sockjs clients'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
