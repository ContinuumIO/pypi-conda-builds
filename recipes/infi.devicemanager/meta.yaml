package:
  name: infi.devicemanager
  version: "0.2.13"

source:
  fn: infi.devicemanager-0.2.13.tar.gz
  url: https://pypi.python.org/packages/source/i/infi.devicemanager/infi.devicemanager-0.2.13.tar.gz
  md5: d3f1d5aeb099db83ae837006503b5e6f
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - infi.devicemanager = infi.devicemanager:main
    #
    # Would create an entry point called infi.devicemanager that calls infi.devicemanager.main()

    - rescan = infi.devicemanager.scripts:rescan

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - infi.cwrap
    - infi.exceptools
    - infi.instruct
    - infi.pyutils
    - infi.wioctl
    - setuptools

  run:
    - python
    - infi.cwrap
    - infi.exceptools
    - infi.instruct
    - infi.pyutils
    - infi.wioctl
    - setuptools

test:
  # Python imports
  imports:
    - infi
    - infi.devicemanager
    - infi.devicemanager.cfgmgr32
    - infi.devicemanager.ioctl
    - infi.devicemanager.setupapi

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - rescan --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/Infinidat/infi.devicemanager
  license: Python Software Foundation License
  summary: "Python bindings to Windows Device Manager's APIs"

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
