package:
  name: ebookmaker
  version: "0.4.0a4"

source:
  fn: ebookmaker-0.4.0a4.tar.gz
  url: https://pypi.python.org/packages/source/e/ebookmaker/ebookmaker-0.4.0a4.tar.gz
  md5: 6293f6194375d616b9a3066aabd49297
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ebookmaker = ebookmaker:main
    #
    # Would create an entry point called ebookmaker that calls ebookmaker.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - pillow
    - chardet
    - cherrypy
    - cssutils
    - docutils
    - libgutenberg >=0.1.6
    - lxml
    - roman
    - requests
    - six >=1.4.1
    - setuptools

  run:
    - python
    - pillow
    - chardet
    - cherrypy
    - cssutils
    - docutils
    - libgutenberg >=0.1.6
    - lxml
    - roman
    - requests
    - six >=1.4.1
    - setuptools

test:
  # Python imports
  imports:
    - ebookmaker
    - ebookmaker.mydocutils
    - ebookmaker.mydocutils.gutenberg
    - ebookmaker.mydocutils.gutenberg.parsers
    - ebookmaker.mydocutils.gutenberg.transforms
    - ebookmaker.mydocutils.gutenberg.writers
    - ebookmaker.mydocutils.parsers
    - ebookmaker.mydocutils.transforms
    - ebookmaker.mydocutils.writers
    - ebookmaker.packagers
    - ebookmaker.parsers
    - ebookmaker.writers

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/ebookmaker/
  license: GNU General Public License (GPL)
  summary: 'The Project Gutenberg tool to generate EPUBs and other ebook formats.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
