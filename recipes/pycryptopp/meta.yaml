package:
  name: pycryptopp
  version: "0.6.0.1206569328141510525648634803928199668821045408958"

source:
  fn: pycryptopp-0.6.0.1206569328141510525648634803928199668821045408958.tar.gz
  url: https://pypi.python.org/packages/source/p/pycryptopp/pycryptopp-0.6.0.1206569328141510525648634803928199668821045408958.tar.gz
  md5: ce38fbe03705d27da408c78b56eb1947
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pycryptopp = pycryptopp:main
    #
    # Would create an entry point called pycryptopp that calls pycryptopp.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools >=0.6a9

  run:
    - python
    - setuptools >=0.6a9

test:
  # Python imports
  imports:
    - pycryptopp
    - pycryptopp.cipher
    - pycryptopp.hash
    - pycryptopp.publickey
    - pycryptopp.publickey.ed25519
    - pycryptopp.test

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://tahoe-lafs.org/trac/pycryptopp
  license: GNU General Public License (GPL)
  summary: 'Python wrappers for a few algorithms from the Crypto++ library'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
