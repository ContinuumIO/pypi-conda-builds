package:
  name: nymms
  version: "0.5.0"

source:
  fn: nymms-0.5.0.tar.gz
  url: https://pypi.python.org/packages/source/n/nymms/nymms-0.5.0.tar.gz
  md5: 5fa08bf2f5a76ee577320f60722ec773
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - nymms = nymms:main
    #
    # Would create an entry point called nymms that calls nymms.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - arrow >=0.5.4
    - boto >=2.36.0
    - flask >=0.10.1
    - flask-api >=0.6.2
    - gnureadline >=6.3.3
    - itsdangerous >=0.24
    - jinja2 >=2.7.3
    - markupsafe >=0.23
    - python-dateutil >=2.4.0
    - pyyaml >=3.11
    - schematics >=1.0.2
    - six >=1.9.0
    - validictory >=1.0.0
    - werkzeug >=0.10.1

  run:
    - python
    - arrow >=0.5.4
    - boto >=2.36.0
    - flask >=0.10.1
    - flask-api >=0.6.2
    - gnureadline >=6.3.3
    - itsdangerous >=0.24
    - jinja2 >=2.7.3
    - markupsafe >=0.23
    - python-dateutil >=2.4.0
    - pyyaml >=3.11
    - schematics >=1.0.2
    - six >=1.9.0
    - validictory >=1.0.0
    - werkzeug >=0.10.1

test:
  # Python imports
  imports:
    - nymms
    - nymms.api
    - nymms.api.plugins
    - nymms.config
    - nymms.config.tests
    - nymms.probe
    - nymms.probe.tests
    - nymms.providers
    - nymms.reactor
    - nymms.reactor.filters
    - nymms.reactor.filters.tests
    - nymms.reactor.handlers
    - nymms.reactor.tests
    - nymms.scheduler
    - nymms.scheduler.backends
    - nymms.scheduler.lock
    - nymms.scheduler.lock.tests
    - nymms.schemas
    - nymms.schemas.types
    - nymms.state
    - nymms.suppress
    - nymms.suppress.tests
    - nymms.tests
    - nymms.utils
    - nymms.utils.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/cloudtools/nymms
  license: BSD License
  summary: "Not Your Mother's Monitoring System (NYMMS)"

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
