package:
  name: minpower
  version: "4.3.10"

source:
  fn: minpower-4.3.10.tar.gz
  url: https://pypi.python.org/packages/source/m/minpower/minpower-4.3.10.tar.gz
  md5: 6e4088c4622effac7a7373da87b67a6e
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - minpower = minpower:main
    #
    # Would create an entry point called minpower that calls minpower.main()

    - minpower=minpower.solve:main
    - standalone_minpower=minpower.solve:standaloneUC
    - scheduler_minpower=minpower.experiments.scheduler_minpower:main
    - initial_dispatch=minpower.experiments.get_initial_dispatch:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - coopr >=3.3.7114
    - numpy >=1.6.1
    - pandas >=0.10

  run:
    - python
    - setuptools
    - coopr >=3.3.7114
    - numpy >=1.6.1
    - pandas >=0.10

test:
  # Python imports
  imports:
    - minpower
    - minpower.configuration
    - minpower.experiments
    - minpower.tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - minpower --help
    - standalone_minpower --help
    - scheduler_minpower --help
    - initial_dispatch --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://minpowertoolkit.com/
  license: MIT License
  summary: 'power systems optimization made beautiful'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
