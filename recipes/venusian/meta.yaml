package:
  name: venusian
  version: "1.0"

source:
  fn: venusian-1.0.tar.gz
  url: https://pypi.python.org/packages/source/v/venusian/venusian-1.0.tar.gz
  md5: dccf2eafb7113759d60c86faf5538756
#  patches:
   # List any patch files here
   # - fix.patch

build:
  noarch_python: True
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - venusian = venusian:main
    #
    # Would create an entry point called venusian that calls venusian.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - sphinx
    - repoze.sphinx.autointerface
    - nose
    - nose-exclude <0.2
    - coverage

  run:
    - python
    - setuptools
    - sphinx
    - repoze.sphinx.autointerface
    - nose
    - nose-exclude <0.2
    - coverage

test:
  # Python imports
  imports:
    - venusian
    - venusian.compat
    - venusian.tests
    - venusian.tests.fixtures
    - venusian.tests.fixtures.attrerror
    - venusian.tests.fixtures.attrerror_package
    - venusian.tests.fixtures.attrerror_package.will_cause_import_error
    - venusian.tests.fixtures.import_and_scan
    - venusian.tests.fixtures.importerror
    - venusian.tests.fixtures.importerror_package
    - venusian.tests.fixtures.importerror_package.will_cause_import_error
    - venusian.tests.fixtures.importonly
    - venusian.tests.fixtures.nested
    - venusian.tests.fixtures.nested.sub1
    - venusian.tests.fixtures.nested.sub1.subsub1
    - venusian.tests.fixtures.nested.sub2
    - venusian.tests.fixtures.nested.sub2.subsub2
    - venusian.tests.fixtures.one
    - venusian.tests.fixtures.pyc
    - venusian.tests.fixtures.pyc.subpackage
    - venusian.tests.fixtures.subpackages
    - venusian.tests.fixtures.subpackages.childpackage
    - venusian.tests.fixtures.two

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pylonsproject.org
  license: BSD-derived (http://www.repoze.org/LICENSE.txt)
  summary: 'A library for deferring decorator actions'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
