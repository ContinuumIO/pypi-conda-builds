package:
  name: sqlalchemy-bitcoin
  version: "0.0.2"

source:
  fn: sqlalchemy-bitcoin-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/s/sqlalchemy-bitcoin/sqlalchemy-bitcoin-0.0.2.tar.gz
  md5: f7f1485f311f1eb7061449a63a4d9131
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - sqlalchemy-bitcoin = sqlalchemy-bitcoin:main
    #
    # Would create an entry point called sqlalchemy-bitcoin that calls sqlalchemy-bitcoin.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - python-bitcoin >=0.0.7
    - sqlalchemy >=0.8.2

  run:
    - python
    - python-bitcoin >=0.0.7
    - sqlalchemy >=0.8.2

test:
  # Python imports
  imports:
    - sa_bitcoin
    - sa_bitcoin.fields
    - sa_bitcoin.mixins

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.github.com/monetizeio/sqlalchemy-bitcoin/
  license: MIT License
  summary: u'A collection of tables and class mappings for storage and retrieval of bitcoin protocol structures to a SQLAlchemy backing store.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
