package:
  name: products.salesforcepfgadapter
  version: "1.9.1"

source:
  fn: Products.salesforcepfgadapter-1.9.1.zip
  url: https://pypi.python.org/packages/source/P/Products.salesforcepfgadapter/Products.salesforcepfgadapter-1.9.1.zip
  md5: 8f3f25dd924f263c5ec431fbaef9f324
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - products.salesforcepfgadapter = products.salesforcepfgadapter:main
    #
    # Would create an entry point called products.salesforcepfgadapter that calls products.salesforcepfgadapter.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - beatbox >=16.0dev
    - products.salesforcebaseconnector >=1.2b1
    - products.ploneformgen >=1.5.0
    - products.datagridfield >=1.6
    - products.talesfield

  run:
    - python
    - setuptools
    - setuptools
    - beatbox >=16.0dev
    - products.salesforcebaseconnector >=1.2b1
    - products.ploneformgen >=1.5.0
    - products.datagridfield >=1.6
    - products.talesfield

test:
  # Python imports
  imports:
    - Products
    - Products.salesforcepfgadapter
    - Products.salesforcepfgadapter.Extensions
    - Products.salesforcepfgadapter.browser
    - Products.salesforcepfgadapter.content
    - Products.salesforcepfgadapter.migrations
    - Products.salesforcepfgadapter.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://groups.google.com/group/plonesf
  license: GPL
  summary: 'PloneFormGen adapter allowing for creation of arbitrary Salesforce.com         records based on data collected from a web form'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
