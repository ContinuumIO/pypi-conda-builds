package:
  name: bdec
  version: "0.8.0"

source:
  fn: bdec-0.8.0.tar.gz
  url: http://www.protocollogic.com/files/bdec-0.8.0.tar.gz
  #md5: 
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bdec = bdec:main
    #
    # Would create an entry point called bdec that calls bdec.main()

    - bcompile = bdec.tools.compile:main
    - bdecode = bdec.tools.decode:main
    - bencode = bdec.tools.encode:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pyparsing
    - nose
    - mako

  run:
    - python
    - pyparsing
    - nose
    - mako

test:
  # Python imports
  imports:
    - bdec
    - bdec.decode
    - bdec.encode
    - bdec.encode.test
    - bdec.inspect
    - bdec.inspect.test
    - bdec.output
    - bdec.output.test
    - bdec.parsing
    - bdec.parsing.test
    - bdec.spec
    - bdec.spec.test
    - bdec.test
    - bdec.tools
    - bdec.tools.test

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - bcompile --help
    - bdecode --help
    - bencode --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.protocollogic.com/
  license: GNU Library or Lesser General Public License (LGPL)
  summary: 'A set of tools for decoding binary files.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
