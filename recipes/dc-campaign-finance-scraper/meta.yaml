package:
  name: dc-campaign-finance-scraper
  version: "0.6.2"

source:
  fn: dc-campaign-finance-scraper-0.6.2.tar.gz
  url: https://pypi.python.org/packages/source/d/dc-campaign-finance-scraper/dc-campaign-finance-scraper-0.6.2.tar.gz
  md5: 072e22089b8a086ae4f66a62d4f766f4
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - dc-campaign-finance-scraper = dc-campaign-finance-scraper:main
    #
    # Would create an entry point called dc-campaign-finance-scraper that calls dc-campaign-finance-scraper.main()

    - dc-campaign-finance-scraper=dc_campaign_finance_scraper.cli:cli

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - requests
    - click
    - beautifulsoup4
    - retrying
    - tablib

  run:
    - python
    - requests
    - click
    - beautifulsoup4
    - retrying
    - tablib

test:
  # Python imports
  imports:
    - dc_campaign_finance_scraper

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - dc-campaign-finance-scraper --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/codefordc/dc-campaign-finance-scraper
  license: UNKNOWN
  summary: 'Provides data from http://www.ocf.dc.gov/serv/download.asp in a nicer way'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
