package:
  name: collective.synchro
  version: "1.0.2"

source:
  fn: collective.synchro-1.0.2.tar.gz
  url: https://pypi.python.org/packages/source/c/collective.synchro/collective.synchro-1.0.2.tar.gz
  md5: 3037403760d3d9d3d66c3419f7bf8251
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - collective.synchro = collective.synchro:main
    #
    # Would create an entry point called collective.synchro that calls collective.synchro.main()

    - synchronize_queue = collective.synchro.scripts:synchro_queues
    - create_queue = collective.synchro.scripts:create_queue
    - import_queue = collective.synchro.scripts:import_queue

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - setuptools

test:
  # Python imports
  imports:
    - collective
    - collective.synchro
    - collective.synchro.browser
    - collective.synchro.interfaces
    - collective.synchro.plugins
    - collective.synchro.scripts

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - synchronize_queue --help
    - create_queue --help
    - import_queue --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://svn.plone.org/svn/collective/collective.synchro
  license: GPL
  summary: 'synchronize content between plone instance'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
