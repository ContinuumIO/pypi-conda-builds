package:
  name: vpnchooser
  version: "0.6.1"

source:
  fn: vpnchooser-0.6.1.tar.gz
  url: https://pypi.python.org/packages/source/v/vpnchooser/vpnchooser-0.6.1.tar.gz
  md5: cf0e1184f3607ae416e6c6566449cbd2
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - vpnchooser = vpnchooser:main
    #
    # Would create an entry point called vpnchooser that calls vpnchooser.main()

    - vpnchooser=vpnchooser.manage:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - flask ==0.10.1
    - flask-restful ==0.3.2
    - flask-script ==2.0.5
    - flask-sqlalchemy ==2.0
    - paramiko
    - passlib
    - celery
    - redis

  run:
    - python
    - flask ==0.10.1
    - flask-restful ==0.3.2
    - flask-script ==2.0.5
    - flask-sqlalchemy ==2.0
    - paramiko
    - passlib
    - celery
    - redis

test:
  # Python imports
  imports:
    - vpnchooser
    - vpnchooser.cli
    - vpnchooser.connection
    - vpnchooser.db
    - vpnchooser.helpers
    - vpnchooser.helpers.fields
    - vpnchooser.objects
    - vpnchooser.query
    - vpnchooser.resources

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - vpnchooser --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/cbrand/vpnchooser
  license: UNKNOWN
  summary: 'UNKNOWN'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
