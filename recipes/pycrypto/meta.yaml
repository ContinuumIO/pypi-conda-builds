package:
  name: pycrypto
  version: "2.6.1"

source:
  fn: pycrypto-2.6.1.tar.gz
  url: https://pypi.python.org/packages/source/p/pycrypto/pycrypto-2.6.1.tar.gz
  md5: 55a61a054aa66812daf5161a0d5d7eda
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pycrypto = pycrypto:main
    #
    # Would create an entry point called pycrypto that calls pycrypto.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - Crypto
    - Crypto.Cipher
    - Crypto.Hash
    - Crypto.Protocol
    - Crypto.PublicKey
    - Crypto.Random
    - Crypto.Random.Fortuna
    - Crypto.Random.OSRNG
    - Crypto.SelfTest
    - Crypto.SelfTest.Cipher
    - Crypto.SelfTest.Hash
    - Crypto.SelfTest.Protocol
    - Crypto.SelfTest.PublicKey
    - Crypto.SelfTest.Random
    - Crypto.SelfTest.Random.Fortuna
    - Crypto.SelfTest.Random.OSRNG
    - Crypto.SelfTest.Signature
    - Crypto.SelfTest.Util
    - Crypto.Signature
    - Crypto.Util
    - pycrypto

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.pycrypto.org/
  license: Public domain
  summary: 'Cryptographic modules for Python.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
