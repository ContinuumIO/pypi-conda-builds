package:
  name: plone.recipe.codeanalysis
  version: "2.0b1"

source:
  fn: plone.recipe.codeanalysis-2.0b1.tar.gz
  url: https://pypi.python.org/packages/source/p/plone.recipe.codeanalysis/plone.recipe.codeanalysis-2.0b1.tar.gz
  md5: f990bdca459c49370f68966b300a003f
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - plone.recipe.codeanalysis = plone.recipe.codeanalysis:main
    #
    # Would create an entry point called plone.recipe.codeanalysis that calls plone.recipe.codeanalysis.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - check-manifest
    - flake8 >=2.0.0
    - setuptools
    - zc.buildout
    - zc.recipe.egg

  run:
    - python
    - setuptools
    - check-manifest
    - flake8 >=2.0.0
    - setuptools
    - zc.buildout
    - zc.recipe.egg

test:
  # Python imports
  imports:
    - plone
    - plone.recipe
    - plone.recipe.codeanalysis
    - plone.recipe.codeanalysis.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/plone/plone.recipe.codeanalysis/
  license: Zope Public License
  summary: 'Static code analysis for buildout-based Python projects.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
