package:
  name: soma-workflow_test
  version: "2.3aa"

source:
  fn: soma-workflow_test-2.3aa.tar.gz
  url: https://pypi.python.org/packages/source/s/soma-workflow_test/soma-workflow_test-2.3aa.tar.gz
  md5: 8ef10c64def5d5c6887bafe461aeb60f
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - soma-workflow_test = soma-workflow_test:main
    #
    # Would create an entry point called soma-workflow_test that calls soma-workflow_test.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - soma
    - soma.workflow
    - soma.workflow.check_requirement
    - soma.workflow.gui
    - soma.workflow.test
    - somadrmaa

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.brainvisa.info/soma-workflow
  license: CeCILL v2
  summary: '\nSoma-workflow is a unified and simple interface to parallel computing\nresources. It aims at making easier the use of parallel resources by\nnon expert users and software.\n'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
