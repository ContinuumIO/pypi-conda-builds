package:
  name: funtool-scratch-processes
  version: "0.0.38"

source:
  fn: funtool-scratch-processes-0.0.38.tar.gz
  url: https://pypi.python.org/packages/source/f/funtool-scratch-processes/funtool-scratch-processes-0.0.38.tar.gz
  md5: fa0aa9c37d3cbaafec1be6f00303673d
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - funtool-scratch-processes = funtool-scratch-processes:main
    #
    # Would create an entry point called funtool-scratch-processes that calls funtool-scratch-processes.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - funtool

  run:
    - python
    - funtool

test:
  # Python imports
  imports:
    - funtool_scratch_processes
    - funtool_scratch_processes.adaptors
    - funtool_scratch_processes.analysis_selectors
    - funtool_scratch_processes.group_measures
    - funtool_scratch_processes.grouping_selectors
    - funtool_scratch_processes.reporters
    - funtool_scratch_processes.state_measures

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  #home: The package home page
  license: MIT License
  summary: 'process to be used with the FUN Tool to analyze Scratch projects'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
