package:
  name: bcfg2
  version: "1.3.4"

source:
  fn: Bcfg2-1.3.4.tar.gz
  url: https://pypi.python.org/packages/source/B/Bcfg2/Bcfg2-1.3.4.tar.gz
  md5: a29de6b6e6bbb188d466d1d6dd993ec3
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bcfg2 = bcfg2:main
    #
    # Would create an entry point called bcfg2 that calls bcfg2.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - lockfile
    - lxml
    - python-daemon

  run:
    - python
    - lockfile
    - lxml
    - python-daemon

test:
  # Python imports
  imports:
    - Bcfg2
    - Bcfg2.Client
    - Bcfg2.Client.Tools
    - Bcfg2.Client.Tools.POSIX
    - Bcfg2.Reporting
    - Bcfg2.Reporting.Storage
    - Bcfg2.Reporting.Transport
    - Bcfg2.Reporting.migrations
    - Bcfg2.Reporting.templatetags
    - Bcfg2.Server
    - Bcfg2.Server.Admin
    - Bcfg2.Server.FileMonitor
    - Bcfg2.Server.Hostbase
    - Bcfg2.Server.Hostbase.hostbase
    - Bcfg2.Server.Lint
    - Bcfg2.Server.Plugin
    - Bcfg2.Server.Plugins
    - Bcfg2.Server.Plugins.Cfg
    - Bcfg2.Server.Plugins.Packages
    - Bcfg2.Server.Reports
    - Bcfg2.Server.Reports.reports
    - Bcfg2.Server.Snapshots
    - bcfg2

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  #home: The package home page
  license: BSD License
  summary: 'Bcfg2 Server'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
