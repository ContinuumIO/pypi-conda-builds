package:
  name: zenoss.toolbox
  version: "0.5.2"

source:
  fn: zenoss.toolbox-0.5.2.tar.gz
  url: https://pypi.python.org/packages/source/z/zenoss.toolbox/zenoss.toolbox-0.5.2.tar.gz
  md5: e1aa0e435b0b02e47f20ef42f5fd9ba2
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - zenoss.toolbox = zenoss.toolbox:main
    #
    # Would create an entry point called zenoss.toolbox that calls zenoss.toolbox.main()

    - zodbscan=zenoss.toolbox.zodbscan:main
    - findposkeyerror=zenoss.toolbox.findposkeyerror:main
    - zencatalogscan=zenoss.toolbox.zencatalogscan:main
    - zenrelationscan=zenoss.toolbox.zenrelationscan:main
    - zenindextool=zenoss.toolbox.zenindextool:main
    - zennetworkclean=zenoss.toolbox.zennetworkclean:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools

  run:
    - python
    - setuptools
    - setuptools

test:
  # Python imports
  imports:
    - zenoss
    - zenoss.toolbox

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - zodbscan --help
    - findposkeyerror --help
    - zencatalogscan --help
    - zenrelationscan --help
    - zenindextool --help
    - zennetworkclean --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: git@github.com:zenoss/zenoss.toolbox.git
  license: Proprietary
  summary: 'Utilities for analyzing and debugging Zenoss environments.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
