package:
  name: cocy
  version: "0.1.13"

source:
  fn: cocy-0.1.13.tar.gz
  url: https://pypi.python.org/packages/source/c/cocy/cocy-0.1.13.tar.gz
  md5: 6cd024698a4b4a2b8fa679bfdfcf629b
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cocy = cocy:main
    #
    # Would create an entry point called cocy that calls cocy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - circuits ==2.1.0
    - tenjin
    - rbtranslations
    - circuits-bricks

  run:
    - python
    - circuits ==2.1.0
    - tenjin
    - rbtranslations
    - circuits-bricks

test:
  # Python imports
  imports:
    - cocy
    - cocy.core
    - cocy.portlets
    - cocy.soaplib
    - cocy.soaplib.serializers
    - cocy.soaplib.test
    - cocy.soaplib.util
    - cocy.upnp
    - cocy.upnp.adapters
    - sampleapps
    - sampleapps.binary_light
    - sampleapps.media_renderer

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://packages.python.org/cocy
  license: GNU General Public License (GPL)
  summary: 'A components library for UPnP.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
