package:
  name: j01.tree
  version: "0.5.0"

source:
  fn: j01.tree-0.5.0.zip
  url: https://pypi.python.org/packages/source/j/j01.tree/j01.tree-0.5.0.zip
  md5: cef95a939d9b8bab879d9088ea7da0b9
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - j01.tree = j01.tree:main
    #
    # Would create an entry point called j01.tree that calls j01.tree.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - j01.jsonrpc
    - z3c.template
    - zope.component
    - zope.container
    - zope.contentprovider
    - zope.interface
    - zope.pagetemplate
    - zope.proxy
    - zope.publisher
    - zope.security
    - zope.traversing

  run:
    - python
    - setuptools
    - j01.jsonrpc
    - z3c.template
    - zope.component
    - zope.container
    - zope.contentprovider
    - zope.interface
    - zope.pagetemplate
    - zope.proxy
    - zope.publisher
    - zope.security
    - zope.traversing

test:
  # Python imports
  imports:
    - j01
    - j01.tree

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/j01.tree
  license: Zope Public License
  summary: 'JSON-RPC tree based on JQuery for Zope 3'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
