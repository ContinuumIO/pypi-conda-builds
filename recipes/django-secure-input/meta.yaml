package:
  name: django-secure-input
  version: "0.9.3"

source:
  fn: django-secure-input-0.9.3.tar.gz
  url: https://pypi.python.org/packages/source/d/django-secure-input/django-secure-input-0.9.3.tar.gz
  md5: 7a327ddfb539cfae50af7a5e1f0a743e
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-secure-input = django-secure-input:main
    #
    # Would create an entry point called django-secure-input that calls django-secure-input.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - bleach >=1.2.2
    - markdown ==2.3.1

  run:
    - python
    - bleach >=1.2.2
    - markdown ==2.3.1

test:
  # Python imports
  imports:
    - secure_input
    - secure_input.templatetags

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/rochapps/django-secure-input/
  license: BSD
  summary: u"django-secure-input provides custom form fields to render wysiwyg editor instead of regular textareas. It takes care of cleaning html for you too. With its super secure defaults you do not want to modified it's whitelisting rules."

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
