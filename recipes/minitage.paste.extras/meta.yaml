package:
  name: minitage.paste.extras
  version: "1.12"

source:
  fn: minitage.paste.extras-1.12.zip
  url: https://downloads.sourceforge.net/project/minitage/minitage.paste.extras-1.12.zip
  #md5: 
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - minitage.paste.extras = minitage.paste.extras:main
    #
    # Would create an entry point called minitage.paste.extras that calls minitage.paste.extras.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pastescript
    - zopeskel
    - zc.buildout
    - pyopenssl
    - iniparse
    - cheetah
    - minitage.core
    - minitage.paste >=1.0.36

  run:
    - python
    - setuptools
    - pastescript
    - zopeskel
    - zc.buildout
    - pyopenssl
    - iniparse
    - cheetah
    - minitage.core
    - minitage.paste >=1.0.36

test:
  # Python imports
  imports:
    - minitage
    - minitage.paste
    - minitage.paste.instances
    - minitage.paste.instances.cas
    - minitage.paste.instances.hudson
    - minitage.paste.instances.openldap
    - minitage.paste.instances.tomcat

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://cheeseshop.python.org/pypi/minitage.paste.extras
  license: BSD License
  summary: 'Extension for minitage.paste allowing users to have some server instaces configured on top of projects'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
