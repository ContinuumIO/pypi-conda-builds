package:
  name: okpy
  version: "v1.3.30"

source:
  fn: okpy-v1.3.30.tar.gz
  url: https://pypi.python.org/packages/source/o/okpy/okpy-v1.3.30.tar.gz
  md5: 441a90de20f0263378979e19c7a42a2e
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - okpy = okpy:main
    #
    # Would create an entry point called okpy that calls okpy.main()

    - ok=client.cli.ok:main
    - ok-publish=client.cli.publish:main
    - ok-lock=client.cli.lock:main
    - ok-test=client.cli.test:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - client
    - client.cli
    - client.cli.common
    - client.protocols
    - client.protocols.common
    - client.sources
    - client.sources.common
    - client.sources.doctest
    - client.sources.ok_test
    - client.utils
    - client.utils.sanction
    - okpy

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - ok --help
    - ok-publish --help
    - ok-lock --help
    - ok-test --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/Cal-CS-61A-Staff/ok-client
  license: Apache License, Version 2.0
  summary: 'ok.py supports programming projects by running tests, tracking progress, and assisting in debugging.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
