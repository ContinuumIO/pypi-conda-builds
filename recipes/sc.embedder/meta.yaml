package:
  name: sc.embedder
  version: "1.0b3"

source:
  fn: sc.embedder-1.0b3.zip
  url: https://pypi.python.org/packages/source/s/sc.embedder/sc.embedder-1.0b3.zip
  md5: 8ea68e8d74ee3eee2d7f6013899daaf8
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - sc.embedder = sc.embedder:main
    #
    # Would create an entry point called sc.embedder that calls sc.embedder.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - collective.dexteritytextindexer
    - collective.oembed <2.0a1
    - five.grok
    - lxml
    - pillow
    - plone.app.dexterity >=1.2.1
    - plone.app.referenceablebehavior
    - plone.dexterity
    - plone.directives.dexterity
    - plone.namedfile[blobs]
    - products.cmfcore
    - products.cmfplone >=4.1
    - products.genericsetup
    - products.tinymce
    - setuptools
    - zope.component
    - zope.event
    - zope.i18nmessageid
    - zope.interface
    - zope.schema

  run:
    - python
    - setuptools
    - collective.dexteritytextindexer
    - collective.oembed <2.0a1
    - five.grok
    - lxml
    - pillow
    - plone.app.dexterity >=1.2.1
    - plone.app.referenceablebehavior
    - plone.dexterity
    - plone.directives.dexterity
    - plone.namedfile[blobs]
    - products.cmfcore
    - products.cmfplone >=4.1
    - products.genericsetup
    - products.tinymce
    - setuptools
    - zope.component
    - zope.event
    - zope.i18nmessageid
    - zope.interface
    - zope.schema

test:
  # Python imports
  imports:
    - sc
    - sc.embedder
    - sc.embedder.browser
    - sc.embedder.content
    - sc.embedder.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.simplesconsultoria.com.br
  license: GNU General Public License v2 (GPLv2)
  summary: 'This packages contains a Dexterity-based content type that '

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
