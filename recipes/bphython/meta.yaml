package:
  name: bphython
  version: "0.0.2"

source:
  fn: bphython-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/b/bphython/bphython-0.0.2.tar.gz
  md5: 5f39e9508f70ab9b82e39268e1d7cb72
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bphython = bphython:main
    #
    # Would create an entry point called bphython that calls bphython.main()

    - bpython = bpython.cli:main
    - bpython-urwid = bpython.urwid:main [urwid]
    - bpython-curtsies = bpython.curtsies:main [curtsies]
    - bpython-hy = bpython.hy:main [hy]
    - bpython-gtk = bpython.gtk_:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pygments ==dev,>=1.7pre
    - curtsies >=0.0.26
    - greenlet
    - hy

  run:
    - python
    - pygments ==dev,>=1.7pre
    - curtsies >=0.0.26
    - greenlet
    - hy

test:
  # Python imports
  imports:
    - bpdb
    - bphython
    - bpython
    - bpython.curtsiesfrontend
    - bpython.test
    - bpython.translations

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - bpython --help
    - bpython-urwid --help
    - bpython-curtsies --help
    - bpython-hy --help
    - bpython-gtk --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.bpython-interpreter.org/
  license: MIT/X
  summary: 'Fancy Interface to the Python Interpreter'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
