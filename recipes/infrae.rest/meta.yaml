package:
  name: infrae.rest
  version: "1.3"

source:
  fn: infrae.rest-1.3.tar.gz
  url: https://pypi.python.org/packages/source/i/infrae.rest/infrae.rest-1.3.tar.gz
  md5: 831ee45ed271ffb8f624a8fe65d29777
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - infrae.rest = infrae.rest:main
    #
    # Would create an entry point called infrae.rest that calls infrae.rest.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - five.grok
    - grokcore.view
    - martian
    - setuptools
    - zeam.component
    - zope.browser
    - zope.component
    - zope.event
    - zope.interface
    - zope.location
    - zope.publisher
    - zope.traversing

  run:
    - python
    - five.grok
    - grokcore.view
    - martian
    - setuptools
    - zeam.component
    - zope.browser
    - zope.component
    - zope.event
    - zope.interface
    - zope.location
    - zope.publisher
    - zope.traversing

test:
  # Python imports
  imports:
    - infrae
    - infrae.rest
    - infrae.rest.tests
    - infrae.rest.tests.grok
    - infrae.rest.tests.grok.template_fixture

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://infrae.com/products/silva
  license: BSD License
  summary: 'Define a REST API to access and manage Zope 2 content'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
