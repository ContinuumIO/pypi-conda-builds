package:
  name: collective.dms.mailcontent
  version: "0.1.8"

source:
  fn: collective.dms.mailcontent-0.1.8.zip
  url: https://pypi.python.org/packages/source/c/collective.dms.mailcontent/collective.dms.mailcontent-0.1.8.zip
  md5: eff8d2fd9b1493d3e0baf8cf4b034909
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - collective.dms.mailcontent = collective.dms.mailcontent:main
    #
    # Would create an entry point called collective.dms.mailcontent that calls collective.dms.mailcontent.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - plone.api
    - plone.app.dexterity
    - plone.directives.form
    - collective.contact.core
    - collective.dexteritytextindexer
    - collective.dms.basecontent
    - plone.formwidget.datetime
    - five.grok

  run:
    - python
    - setuptools
    - setuptools
    - plone.api
    - plone.app.dexterity
    - plone.directives.form
    - collective.contact.core
    - collective.dexteritytextindexer
    - collective.dms.basecontent
    - plone.formwidget.datetime
    - five.grok

test:
  # Python imports
  imports:
    - collective
    - collective.dms
    - collective.dms.mailcontent
    - collective.dms.mailcontent.browser
    - collective.dms.mailcontent.tests
    - collective.dms.mailcontent.upgrades

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/collective/collective.dms.mailcontent
  license: gpl
  summary: 'Mail content type for document management system'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
