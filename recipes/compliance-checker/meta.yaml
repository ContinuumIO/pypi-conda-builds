package:
  name: compliance-checker
  version: "1.0.0"

source:
  fn: compliance-checker-1.0.0.tar.gz
  url: https://pypi.python.org/packages/source/c/compliance-checker/compliance-checker-1.0.0.tar.gz
  md5: 2f90064f9264cab60fee319a45ac652f
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - compliance-checker = compliance-checker:main
    #
    # Would create an entry point called compliance-checker that calls compliance-checker.main()

    - compliance-checker = cchecker:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - owslib >=0.8.3
    - wicken >=0.1.2
    - lxml >=3.2.1
    - udunitspy ==0.0.6
    - requests >=2.2.1
    - python-dateutil >=2.2

  run:
    - python
    - owslib >=0.8.3
    - wicken >=0.1.2
    - lxml >=3.2.1
    - udunitspy ==0.0.6
    - requests >=2.2.1
    - python-dateutil >=2.2

test:
  # Python imports
  imports:
    - compliance_checker
    - compliance_checker.cf
    - compliance_checker.tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - compliance-checker --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/ioos/compliance-checker
  license: Apache Software License
  summary: 'Checks Datasets and SOS endpoints for standards compliance'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
