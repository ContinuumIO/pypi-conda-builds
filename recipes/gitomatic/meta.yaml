package:
  name: gitomatic
  version: "1.0a5"

source:
  fn: gitomatic-1.0a5.tar.gz
  url: https://pypi.python.org/packages/source/g/gitomatic/gitomatic-1.0a5.tar.gz
  md5: 78e9ec1e38ecc72e53b00a7079cfdc93
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - gitomatic = gitomatic:main
    #
    # Would create an entry point called gitomatic that calls gitomatic.main()

    - gitomatic = gitomatic.main:main
    - gitomatic-auth = gitomatic.auth:main
    - gitomatic-configuration = gitomatic.configuration:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - configobj ==4.7.2
    - argparse ==1.2.1
    - gitpython ==0.3.2.RC1

  run:
    - python
    - configobj ==4.7.2
    - argparse ==1.2.1
    - gitpython ==0.3.2.RC1

test:
  # Python imports
  imports:
    - gitomatic
    - gitomatic.test

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - gitomatic --help
    - gitomatic-auth --help
    - gitomatic-configuration --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/jorgeecardona/gitomatic
  license: BSD License
  summary: 'Git management tool'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
