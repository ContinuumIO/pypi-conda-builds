package:
  name: bicycledataprocessor
  version: "0.1.0"

source:
  fn: BicycleDataProcessor-0.1.0.tar.gz
  url: https://pypi.python.org/packages/source/B/BicycleDataProcessor/BicycleDataProcessor-0.1.0.tar.gz
  md5: 6d286b65ed7f3310d2bdb6ebb040494c
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bicycledataprocessor = bicycledataprocessor:main
    #
    # Would create an entry point called bicycledataprocessor that calls bicycledataprocessor.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.6.1
    - scipy >=0.9.0
    - matplotlib >=1.1.1rc
    - tables <3.0
    - dynamicisttoolkit >=0.3.4
    - bicycleparameters >=0.2.0

  run:
    - python
    - numpy >=1.6.1
    - scipy >=0.9.0
    - matplotlib >=1.1.1rc
    - tables <3.0
    - dynamicisttoolkit >=0.3.4
    - bicycleparameters >=0.2.0

test:
  # Python imports
  imports:
    - bicycledataprocessor
    - bicycledataprocessor.test

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/moorepants/BicycleDataProcessor
  license: BSD License
  summary: 'Processes the data collected from the instrumented bicycle.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
