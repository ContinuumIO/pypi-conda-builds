package:
  name: bebop.protocol
  version: "0.1"

source:
  fn: bebop.protocol-0.1.tar.gz
  url: https://pypi.python.org/packages/source/b/bebop.protocol/bebop.protocol-0.1.tar.gz
  md5: 6997b09e736a6571ac12b8efd30ef623
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - bebop.protocol = bebop.protocol:main
    #
    # Would create an entry point called bebop.protocol that calls bebop.protocol.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - zope.interface
    - zope.component
    - zope.configuration
    - zope.publisher
    - zope.schema
    - zope.dottedname
    - zope.app.component
    - zope.app.publisher

  run:
    - python
    - setuptools
    - zope.interface
    - zope.component
    - zope.configuration
    - zope.publisher
    - zope.schema
    - zope.dottedname
    - zope.app.component
    - zope.app.publisher

test:
  # Python imports
  imports:
    - bebop
    - bebop.protocol
    - bebop.protocol.demo
    - bebop.protocol.demo.hello
    - bebop.protocol.demo.package

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.kmrc.de/projects/devel/bebop.protocol
  license: GNU General Public License (GPL)
  summary: 'This package allows to register components from Python. It also provides a basic implementation of generic functions in Zope3'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
