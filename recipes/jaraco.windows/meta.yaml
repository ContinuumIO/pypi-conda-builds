package:
  name: jaraco.windows
  version: "3.2"

source:
  fn: jaraco.windows-3.2.zip
  url: https://pypi.python.org/packages/source/j/jaraco.windows/jaraco.windows-3.2.zip
  md5: f73e663a02d807af2daccd4dccbdc0e4
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - jaraco.windows = jaraco.windows:main
    #
    # Would create an entry point called jaraco.windows that calls jaraco.windows.main()

    - xmouse = jaraco.windows.xmouse:Command.invoke
    - mklink = jaraco.windows.filesystem:mklink
    - find-symlinks = jaraco.windows.filesystem:find_symlinks_cmd
    - enver = jaraco.windows.environ:enver
    - pclip = jaraco.windows.clipboard:paste_stdout
    - gclip = jaraco.windows.clipboard:stdin_copy

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - more_itertools
    - six
    - jaraco.ui
    - jaraco.collections
    - jaraco.text
    - jaraco.structures

  run:
    - python
    - more_itertools
    - six
    - jaraco.ui
    - jaraco.collections
    - jaraco.text
    - jaraco.structures

test:
  # Python imports
  imports:
    - jaraco
    - jaraco.windows
    - jaraco.windows.api
    - jaraco.windows.filesystem

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - xmouse --help
    - mklink --help
    - find-symlinks --help
    - enver --help
    - pclip --help
    - gclip --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/jaraco.windows
  license: MIT
  summary: 'Windows Routines by Jason R. Coombs'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
