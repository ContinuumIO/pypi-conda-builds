package:
  name: rdc.etl
  version: "1.0.0a6"

source:
  fn: rdc.etl-1.0.0a6.tar.gz
  url: https://pypi.python.org/packages/source/r/rdc.etl/rdc.etl-1.0.0a6.tar.gz
  md5: 1c4bffc2cacb90dbc94d599c8ee234ef
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - rdc.etl = rdc.etl:main
    #
    # Would create an entry point called rdc.etl that calls rdc.etl.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - rdc.common ==0.1.0
    - lxml
    - beautifulsoup
    - requests
    - unidecode
    - webob
    - webapp2
    - sqlalchemy
    - blessings
    - psutil
    - repoze.lru

  run:
    - python
    - setuptools
    - rdc.common ==0.1.0
    - lxml
    - beautifulsoup
    - requests
    - unidecode
    - webob
    - webapp2
    - sqlalchemy
    - blessings
    - psutil
    - repoze.lru

test:
  # Python imports
  imports:
    - rdc
    - rdc.etl
    - rdc.etl.extra
    - rdc.etl.extra.db
    - rdc.etl.extra.filemanager
    - rdc.etl.extra.tools
    - rdc.etl.harness
    - rdc.etl.io
    - rdc.etl.status
    - rdc.etl.test
    - rdc.etl.transform
    - rdc.etl.transform.extract
    - rdc.etl.transform.filter
    - rdc.etl.transform.flow
    - rdc.etl.transform.join
    - rdc.etl.transform.load
    - rdc.etl.transform.map

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://etl.rdc.li/
  license: Apache Software License
  summary: 'Extract Transform Load (ETL) toolkit for python'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
