package:
  name: kdvs
  version: "2.0.0"

source:
  fn: KDVS-2.0.0.tar.gz
  url: https://pypi.python.org/packages/source/K/KDVS/KDVS-2.0.0.tar.gz
  md5: cb3e5bb76d6f176ff00f2ec65e168a36
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - kdvs = kdvs:main
    #
    # Would create an entry point called kdvs that calls kdvs.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - kdvs
    - kdvs.bin
    - kdvs.contrib
    - kdvs.core
    - kdvs.fw
    - kdvs.fw.impl
    - kdvs.fw.impl.annotation
    - kdvs.fw.impl.app
    - kdvs.fw.impl.data
    - kdvs.fw.impl.envop
    - kdvs.fw.impl.job
    - kdvs.fw.impl.map
    - kdvs.fw.impl.map.GeneID
    - kdvs.fw.impl.map.PKCID
    - kdvs.fw.impl.pk
    - kdvs.fw.impl.pk.go
    - kdvs.fw.impl.report
    - kdvs.fw.impl.stat
    - kdvs.tests
    - kdvs.tests.f
    - kdvs.tests.s
    - kdvs.tests.t
    - kdvs.tests.t.fw
    - kdvs.tests.t.fw.impl
    - kdvs.tests.t.fw.impl.annotation
    - kdvs.tests.t.fw.impl.app
    - kdvs.tests.t.fw.impl.data
    - kdvs.tests.t.fw.impl.envop
    - kdvs.tests.t.fw.impl.job
    - kdvs.tests.t.fw.impl.map
    - kdvs.tests.t.fw.impl.map.GeneID
    - kdvs.tests.t.fw.impl.map.PKCID
    - kdvs.tests.t.fw.impl.pk
    - kdvs.tests.t.fw.impl.pk.go
    - kdvs.tests.t.fw.impl.report
    - kdvs.tests.t.fw.impl.stat
    - kdvs.tools
    - kdvs.tools.v1vs2

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://slipguru.disi.unige.it/Research/KDVS/
  license: GNU General Public License v3 or later (GPLv3+)
  summary: '\nKnowledge Driven Variable Selection (KDVS) is an experimental knowledge extraction\nsystem that utilizes statistical learning and novel data and knowledge integration\nmethodologies.\n'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
