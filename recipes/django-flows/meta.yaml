package:
  name: django-flows
  version: "1.2"

source:
  fn: django-flows-1.2.tar.gz
  url: https://pypi.python.org/packages/source/d/django-flows/django-flows-1.2.tar.gz
  md5: 5a74ad622111d4d59162ebe0eb107bb4
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-flows = django-flows:main
    #
    # Would create an entry point called django-flows that calls django-flows.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django >=1.4,<1.7

  run:
    - python
    - django >=1.4,<1.7

test:
  # Python imports
  imports:
    - flows
    - flows.additional
    - flows.additional.celery
    - flows.management
    - flows.management.commands
    - flows.migrations
    - flows.statestore

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/carlio/django-flows
  license: BSD
  summary: 'django-flows keeps state and position in complicated flows of logic, allowing optional branches and complicated paths through a series of individual user actions.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
