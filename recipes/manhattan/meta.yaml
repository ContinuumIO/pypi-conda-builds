package:
  name: manhattan
  version: "0.2"

source:
  fn: manhattan-0.2.tar.gz
  url: https://pypi.python.org/packages/source/m/manhattan/manhattan-0.2.tar.gz
  md5: fae2d6e56c2ef4fbe266f4c8ea93b997
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - manhattan = manhattan:main
    #
    # Would create an entry point called manhattan that calls manhattan.main()

    - manhattan-server=manhattan.server:main
    - manhattan-client=manhattan.client:main
    - manhattan-log-server=manhattan.log.remote:server

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - sqlalchemy >=0.7
    - webob
    - redis >=2.7.2
    - pytz
    - pyzmq
    - simplejson

  run:
    - python
    - sqlalchemy >=0.7
    - webob
    - redis >=2.7.2
    - pytz
    - pyzmq
    - simplejson

test:
  # Python imports
  imports:
    - manhattan
    - manhattan.backend
    - manhattan.backend.persistence
    - manhattan.log
    - manhattan.tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - manhattan-server --help
    - manhattan-client --help
    - manhattan-log-server --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/cartlogic/manhattan
  license: MIT
  summary: 'Robust Server-Side Analytics'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
