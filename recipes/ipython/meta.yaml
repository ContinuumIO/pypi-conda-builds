package:
  name: ipython
  version: "3.1.0"

source:
  fn: ipython-3.1.0.tar.gz
  url: https://pypi.python.org/packages/source/i/ipython/ipython-3.1.0.tar.gz
  md5: a749d90c16068687b0ec45a27e72ef8f
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ipython = ipython:main
    #
    # Would create an entry point called ipython that calls ipython.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - IPython
    - IPython.config
    - IPython.config.profile
    - IPython.config.tests
    - IPython.core
    - IPython.core.magics
    - IPython.core.tests
    - IPython.extensions
    - IPython.extensions.tests
    - IPython.external
    - IPython.external.appnope
    - IPython.external.decorator
    - IPython.external.decorators
    - IPython.external.path
    - IPython.external.pexpect
    - IPython.external.simplegeneric
    - IPython.html
    - IPython.html.auth
    - IPython.html.base
    - IPython.html.edit
    - IPython.html.files
    - IPython.html.kernelspecs
    - IPython.html.nbconvert
    - IPython.html.nbconvert.tests
    - IPython.html.notebook
    - IPython.html.services
    - IPython.html.services.clusters
    - IPython.html.services.config
    - IPython.html.services.config.tests
    - IPython.html.services.contents
    - IPython.html.services.contents.tests
    - IPython.html.services.kernels
    - IPython.html.services.kernels.tests
    - IPython.html.services.kernelspecs
    - IPython.html.services.kernelspecs.tests
    - IPython.html.services.nbconvert
    - IPython.html.services.nbconvert.tests
    - IPython.html.services.security
    - IPython.html.services.sessions
    - IPython.html.services.sessions.tests
    - IPython.html.terminal
    - IPython.html.tests
    - IPython.html.tree
    - IPython.html.tree.tests
    - IPython.html.widgets
    - IPython.html.widgets.tests
    - IPython.kernel
    - IPython.kernel.blocking
    - IPython.kernel.comm
    - IPython.kernel.inprocess
    - IPython.kernel.inprocess.tests
    - IPython.kernel.ioloop
    - IPython.kernel.tests
    - IPython.kernel.zmq
    - IPython.kernel.zmq.gui
    - IPython.kernel.zmq.pylab
    - IPython.kernel.zmq.tests
    - IPython.lib
    - IPython.lib.tests
    - IPython.nbconvert
    - IPython.nbconvert.exporters
    - IPython.nbconvert.exporters.tests
    - IPython.nbconvert.filters
    - IPython.nbconvert.filters.tests
    - IPython.nbconvert.postprocessors
    - IPython.nbconvert.postprocessors.tests
    - IPython.nbconvert.preprocessors
    - IPython.nbconvert.preprocessors.tests
    - IPython.nbconvert.tests
    - IPython.nbconvert.utils
    - IPython.nbconvert.utils.tests
    - IPython.nbconvert.writers
    - IPython.nbconvert.writers.tests
    - IPython.nbformat
    - IPython.nbformat.tests
    - IPython.nbformat.v1
    - IPython.nbformat.v1.tests
    - IPython.nbformat.v2
    - IPython.nbformat.v2.tests
    - IPython.nbformat.v3
    - IPython.nbformat.v3.tests
    - IPython.nbformat.v4
    - IPython.nbformat.v4.tests
    - IPython.parallel
    - IPython.parallel.apps
    - IPython.parallel.client
    - IPython.parallel.controller
    - IPython.parallel.engine
    - IPython.parallel.tests
    - IPython.qt
    - IPython.qt.console
    - IPython.qt.console.tests
    - IPython.sphinxext
    - IPython.terminal
    - IPython.terminal.console
    - IPython.terminal.console.tests
    - IPython.terminal.tests
    - IPython.testing
    - IPython.testing.plugin
    - IPython.testing.tests
    - IPython.utils
    - IPython.utils.tests
    - ipython

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://ipython.org
  license: BSD License
  summary: 'IPython: Productive Interactive Computing'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
