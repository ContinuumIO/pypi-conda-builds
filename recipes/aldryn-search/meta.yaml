package:
  name: aldryn-search
  version: "0.2.7"

source:
  fn: aldryn-search-0.2.7.tar.gz
  url: https://pypi.python.org/packages/source/a/aldryn-search/aldryn-search-0.2.7.tar.gz
  md5: 7525e277295be7b17a5b563883dbd1b7
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - aldryn-search = aldryn-search:main
    #
    # Would create an entry point called aldryn-search that calls aldryn-search.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - lxml
    - setuptools
    - django >=1.4
    - django-appconf
    - django-cms >=2.4
    - django-classy-tags >=0.3.2
    - django-haystack >=2.0.0
    - django-spurl
    - django-standard-form
    - aldryn-common

  run:
    - python
    - lxml
    - setuptools
    - django >=1.4
    - django-appconf
    - django-cms >=2.4
    - django-classy-tags >=0.3.2
    - django-haystack >=2.0.0
    - django-spurl
    - django-standard-form
    - aldryn-common

test:
  # Python imports
  imports:
    - aldryn_search

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/piquadrat/aldryn-search
  license: BSD License
  summary: 'An extension to django CMS to provide multilingual Haystack indexes'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
