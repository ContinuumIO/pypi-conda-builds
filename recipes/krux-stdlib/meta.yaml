package:
  name: krux-stdlib
  version: "0.8.6"

source:
  fn: krux-stdlib-0.8.6.tar.gz
  url: https://pypi.python.org/packages/source/k/krux-stdlib/krux-stdlib-0.8.6.tar.gz
  md5: b32ef260db8557b34ab9ef1e5990c7b1
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - krux-stdlib = krux-stdlib:main
    #
    # Would create an entry point called krux-stdlib that calls krux-stdlib.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - sphinx
    - jinja2
    - pygments
    - docutils
    - kruxstatsd
    - statsd
    - argparse
    - gitpython
    - simplejson
    - tornado
    - lockfile
    - pygerduty
    - async
    - fudge
    - gitdb
    - smmap

  run:
    - python
    - sphinx
    - jinja2
    - pygments
    - docutils
    - kruxstatsd
    - statsd
    - argparse
    - gitpython
    - simplejson
    - tornado
    - lockfile
    - pygerduty
    - async
    - fudge
    - gitdb
    - smmap

test:
  # Python imports
  imports:
    - krux
    - krux.tornado
    - tests
    - tests.unit_tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/krux/python-krux-stdlib
  license: License :: OSI Approved :: MIT License
  summary: 'Standard library of python modules used at Krux.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
