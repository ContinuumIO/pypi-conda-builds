package:
  name: ftw.tabbedview
  version: "3.3.13"

source:
  fn: ftw.tabbedview-3.3.13.zip
  url: https://pypi.python.org/packages/source/f/ftw.tabbedview/ftw.tabbedview-3.3.13.zip
  md5: aefb954dd1b9a6d2ccd1901201029e3a
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ftw.tabbedview = ftw.tabbedview:main
    #
    # Would create an entry point called ftw.tabbedview that calls ftw.tabbedview.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - ftw.table
    - collective.js.throttledebounce
    - plone.app.registry
    - ftw.dictstorage
    - ftw.upgrade

  run:
    - python
    - setuptools
    - setuptools
    - ftw.table
    - collective.js.throttledebounce
    - plone.app.registry
    - ftw.dictstorage
    - ftw.upgrade

test:
  # Python imports
  imports:
    - ftw
    - ftw.tabbedview
    - ftw.tabbedview.browser
    - ftw.tabbedview.tests
    - ftw.tabbedview.upgrades

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/4teamwork/ftw.tabbedview
  license: GPL2
  summary: 'A generic tabbed view for plone content types.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
