package:
  name: dataq
  version: "0.0.dev5"

source:
  fn: dataq-0.0.dev5.tar.gz
  url: https://pypi.python.org/packages/source/d/dataq/dataq-0.0.dev5.tar.gz
  md5: 567a0c93840a0535519940d2d03cfcde
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - dataq = dataq:main
    #
    # Would create an entry point called dataq that calls dataq.main()

    - dqcli=dataq.dataq_cli:main
    - dqsvcpush=dataq.dataq_push_svc:main
    - dqsvcpop=dataq.dataq_pop_svc:main
    - file_type=dataq.file_type:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - redis

  run:
    - python
    - redis

test:
  # Python imports
  imports:
    - dataq

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - dqcli --help
    - dqsvcpush --help
    - dqsvcpop --help
    - file_type --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/pothiers/dataq
  license: MIT License
  summary: 'Manage data-queue with associated Action on pop'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
