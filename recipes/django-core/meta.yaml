package:
  name: django-core
  version: "1.3.0"

source:
  fn: django-core-1.3.0.tar.gz
  url: https://pypi.python.org/packages/source/d/django-core/django-core-1.3.0.tar.gz
  md5: a4104581660ce5f1d2d3bb354f993003
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-core = django-core:main
    #
    # Would create an entry point called django-core that calls django-core.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - django_core
    - django_core.auth
    - django_core.contrib
    - django_core.contrib.admin
    - django_core.contrib.auth
    - django_core.db
    - django_core.db.models
    - django_core.db.models.mixins
    - django_core.forms
    - django_core.forms.mixins
    - django_core.html
    - django_core.mail
    - django_core.middleware
    - django_core.migrations
    - django_core.templatetags
    - django_core.utils
    - django_core.views
    - django_core.views.mixins

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/infoagetech/django-core
  license: MIT License
  summary: u'A core set of tools for django applications.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
