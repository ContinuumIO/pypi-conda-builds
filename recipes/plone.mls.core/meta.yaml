package:
  name: plone.mls.core
  version: "0.5.4"

source:
  fn: plone.mls.core-0.5.4.tar.gz
  url: https://pypi.python.org/packages/source/p/plone.mls.core/plone.mls.core-0.5.4.tar.gz
  md5: 427dab764020492ab66497ee13c6fb3c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - plone.mls.core = plone.mls.core:main
    #
    # Would create an entry point called plone.mls.core that calls plone.mls.core.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - plone.api
    - plone.app.registry
    - plone.directives.form
    - httplib2
    - simplejson

  run:
    - python
    - setuptools
    - setuptools
    - plone.api
    - plone.app.registry
    - plone.directives.form
    - httplib2
    - simplejson

test:
  # Python imports
  imports:
    - plone
    - plone.mls
    - plone.mls.core
    - plone.mls.core.browser
    - plone.mls.core.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/propertyshelf/plone.mls.core
  license: GNU General Public License v2 (GPLv2)
  summary: 'Plone support for the Propertyshelf MLS.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
