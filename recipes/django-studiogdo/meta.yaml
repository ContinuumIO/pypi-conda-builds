package:
  name: django-studiogdo
  version: "0.2.43"

source:
  fn: django-studiogdo-0.2.43.tar.gz
  url: https://pypi.python.org/packages/source/d/django-studiogdo/django-studiogdo-0.2.43.tar.gz
  md5: 18d59987db9bf4fed41ac478fc4cfd8d
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-studiogdo = django-studiogdo:main
    #
    # Would create an entry point called django-studiogdo that calls django-studiogdo.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - beautifulsoup4 >=4.3.2
    - html5lib >=0.999
    - ipdb >=0.8
    - requests >=2.3.0

  run:
    - python
    - beautifulsoup4 >=4.3.2
    - html5lib >=0.999
    - ipdb >=0.8
    - requests >=2.3.0

test:
  # Python imports
  imports:
    - project
    - studiogdo
    - studiogdo.pip
    - studiogdo.skel
    - studiogdo.skel.tests
    - studiogdo.skel.tests.imprim
    - studiogdo.templatetags
    - studiogdo.utilities

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.coworks.pro/
  license: BSD License
  summary: 'Django implementation of StudioGdo MVC extension.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
