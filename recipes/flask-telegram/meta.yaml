package:
  name: flask-telegram
  version: "0.0.2"

source:
  fn: flask-telegram-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/f/flask-telegram/flask-telegram-0.0.2.tar.gz
  md5: d1d28b8deffb71353714edbc3dcefda3
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - flask-telegram = flask-telegram:main
    #
    # Would create an entry point called flask-telegram that calls flask-telegram.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - flask ==0.9
    - werkzeug ==0.8.3
    - blinker ==1.2

  run:
    - python
    - flask ==0.9
    - werkzeug ==0.8.3
    - blinker ==1.2

# test:
  # Python imports
  # imports:

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/gregorynicholas/flask-telegram
  license: MIT License
  summary: '\nflask-telegram\n\nflask extension for delivering messages. send via the app engine mail or xmpp\napis, and/or other third party providers such as sendgrid.\n\n\nlinks:\n\n* docs: http://gregorynicholas.github.io/flask-telegram\n* source: http://github.com/gregorynicholas/flask-telegram\n* package: http://packages.python.org/flask-telegram\n* travis-ci: http://travis-ci.org/gregorynicholas/flask-telegram\n\n'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
