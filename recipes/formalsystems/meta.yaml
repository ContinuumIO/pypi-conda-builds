package:
  name: formalsystems
  version: "0.1.2"

source:
  fn: FormalSystems-0.1.2.tar.gz
  url: https://pypi.python.org/packages/source/F/FormalSystems/FormalSystems-0.1.2.tar.gz
  md5: b7f2e3d09e5631f7f40d8b740c592778
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - formalsystems = formalsystems:main
    #
    # Would create an entry point called formalsystems that calls formalsystems.main()

    - FormalSystems = FormalSystemsMain:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - lepl
    - pyyaml

  run:
    - python
    - lepl
    - pyyaml

test:
  # Python imports
  imports:
    - formalsystems

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - FormalSystems --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://alexprengere.github.com/FormalSystems
  license: UNKNOWN
  summary: 'Play with formal systems from "G\xc3\xb6del Escher Bach", Douglas Hofstadter'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
