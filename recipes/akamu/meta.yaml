package:
  name: akamu
  version: "0.7"

source:
  fn: Akamu-0.7.tar.gz
  url: https://pypi.python.org/packages/source/A/Akamu/Akamu-0.7.tar.gz
  md5: 72d4e67d11c5238e106f3347b64756de
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - akamu = akamu:main
    #
    # Would create an entry point called akamu that calls akamu.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - python-memcached
    - akara
    - amara
    - wheezy.http ==0.1.297
    - wheezy.core ==0.1.104
    - wheezy.caching ==0.1.90
    - webob
    - httpagentparser

  run:
    - python
    - python-memcached
    - akara
    - amara
    - wheezy.http ==0.1.297
    - wheezy.core ==0.1.104
    - wheezy.caching ==0.1.90
    - webob
    - httpagentparser

test:
  # Python imports
  imports:
    - akamu
    - akamu.config
    - akamu.demo
    - akamu.diglot
    - akamu.protocol
    - akamu.security
    - akamu.util
    - akamu.wheezy
    - akamu.xslt

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  #home: The package home page
  license: UNKNOWN
  summary: 'An Akara module for managing the use of an RDF dataset, a XML/RDF filesystem, and XSLT extension functions within a web application'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
