package:
  name: gottwall
  version: "0.4.2"

source:
  fn: gottwall-0.4.2.tar.gz
  url: https://pypi.python.org/packages/source/g/gottwall/gottwall-0.4.2.tar.gz
  md5: f408f0764982ea5a618cfcff2bde1a60
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - gottwall = gottwall:main
    #
    # Would create an entry point called gottwall that calls gottwall.main()

    - gottwall = gottwall.runner:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - redis ==2.7.2
    - tornado ==2.4.1
    - python-dateutil ==2.1
    - tornado-redis ==2.4.1
    - commandor ==0.1.6
    - sqlalchemy ==0.7.9
    - alembic ==0.4.0
    - jinja2 ==2.6

  run:
    - python
    - redis ==2.7.2
    - tornado ==2.4.1
    - python-dateutil ==2.1
    - tornado-redis ==2.4.1
    - commandor ==0.1.6
    - sqlalchemy ==0.7.9
    - alembic ==0.4.0
    - jinja2 ==2.6

test:
  # Python imports
  imports:
    - gottwall
    - gottwall.backends
    - gottwall.storages
    - tests

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - gottwall --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/GottWall/GottWall
  license: BSD License
  summary: 'GottWall is scalable realtime metrics collecting and aggregation platform and service'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
