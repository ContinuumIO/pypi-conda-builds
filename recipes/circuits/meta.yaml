package:
  name: circuits
  version: "3.1.0"

source:
  fn: circuits-3.1.0.tar.gz
  url: https://pypi.python.org/packages/source/c/circuits/circuits-3.1.0.tar.gz
  md5: c34cea2d7af2220001091f48123a11ce
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - circuits = circuits:main
    #
    # Would create an entry point called circuits that calls circuits.main()

    - circuits.web=circuits.web.main:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python

test:
  # Python imports
  imports:
    - circuits
    - circuits.app
    - circuits.core
    - circuits.io
    - circuits.net
    - circuits.node
    - circuits.protocols
    - circuits.protocols.irc
    - circuits.tools
    - circuits.web
    - circuits.web.dispatchers
    - circuits.web.parsers
    - circuits.web.websockets
    - fabfile
    - tests
    - tests.app
    - tests.core
    - tests.io
    - tests.net
    - tests.protocols
    - tests.tools
    - tests.web

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - circuits.web --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://circuitsframework.com/
  license: MIT License
  summary: 'Asynchronous Component based Event Application Framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
