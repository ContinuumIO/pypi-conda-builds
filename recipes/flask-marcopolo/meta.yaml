package:
  name: flask-marcopolo
  version: "0.6.3"

source:
  fn: Flask-MarcoPolo-0.6.3.tar.gz
  url: https://pypi.python.org/packages/source/F/Flask-MarcoPolo/Flask-MarcoPolo-0.6.3.tar.gz
  md5: 8afde7a1d5ac79a77f28d3c1a4e30aee
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - flask-marcopolo = flask-marcopolo:main
    #
    # Would create an entry point called flask-marcopolo that calls flask-marcopolo.main()

    - flask-marcopolo=flask_marcopolo.cmd:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - flask ==0.10.1
    - flask-classy ==0.6.10
    - flask-assets ==0.10
    - flask-mail ==0.9.1
    - flask-wtf ==0.9.5

  run:
    - python
    - flask ==0.10.1
    - flask-classy ==0.6.10
    - flask-assets ==0.10
    - flask-mail ==0.9.1
    - flask-wtf ==0.9.5

test:
  # Python imports
  imports:
    - flask_marcopolo
    - flask_marcopolo.projects_templates
    - flask_marcopolo.projects_templates.default
    - flask_marcopolo.projects_templates.default.views

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - flask-marcopolo --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://mardix.github.io/flask-marcopolo/
  license: BSD License
  summary: '\nFlask-MarcoPolo\n\nFlask-MarcoPolo is a Flask extension that adds structure to both your views and\ntemplates, by mapping them to each other to provide a rapid application development framework.\nThe extension also comes with Flask-Classy, Flask-Assets, Flask-Mail,\nJQuery 2.x, Bootstrap 3.x, Font-Awesome, Bootswatch templates.\nThe extension also provides pre-made templates for error pages and macros.\n\nhttps://github.com/mardix/flask-marcopolo\n\n'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
