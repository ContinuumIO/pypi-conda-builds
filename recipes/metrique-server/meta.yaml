package:
  name: metrique-server
  version: "0.1.3-alpha27"

source:
  fn: metrique-server-0.1.3-alpha27.tar.gz
  url: https://pypi.python.org/packages/source/m/metrique-server/metrique-server-0.1.3-alpha27.tar.gz
  md5: 0e0d7ce5f3ee0a216a0f12333db92235
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - metrique-server = metrique-server:main
    #
    # Would create an entry point called metrique-server that calls metrique-server.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - bson >=0.3.3
    - decorator >=3.4
    - futures >=2.1
    - jsonconf >=0.1.3
    - pql >=0.3.2
    - python_dateutil >=2.1
    - pytz >=2013b
    - simplejson >=3.3
    - tornado >=3.0

  run:
    - python
    - bson >=0.3.3
    - decorator >=3.4
    - futures >=2.1
    - jsonconf >=0.1.3
    - pql >=0.3.2
    - python_dateutil >=2.1
    - pytz >=2013b
    - simplejson >=3.3
    - tornado >=3.0

test:
  # Python imports
  imports:
    - metrique
    - metrique.server
    - metrique.server.mongodb
    - metrique.server.tornado

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/drpoovilleorg/metrique
  license: GNU General Public License v3 (GPLv3)
  summary: 'Python/MongoDB Information Platform - Server'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
