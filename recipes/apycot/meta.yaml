package:
  name: apycot
  version: "3.2.1"

source:
  fn: apycot-3.2.1.tar.gz
  url: https://pypi.python.org/packages/source/a/apycot/apycot-3.2.1.tar.gz
  md5: 0418d24aa841092c25644cbd6be60ef9
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - apycot = apycot:main
    #
    # Would create an entry point called apycot that calls apycot.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - lxml
    - coverage
    - cubicweb >=3.19.0
    - logilab-devtools
    - cubicweb-tracker
    - cubicweb-nosylist >=0.5.0
    - pygments
    - cubicweb-vcsfile >=2
    - cubicweb-narval >=4.1
    - cubicweb-jqplot >=0.1.2
    - cubicweb-file

  run:
    - python
    - lxml
    - coverage
    - cubicweb >=3.19.0
    - logilab-devtools
    - cubicweb-tracker
    - cubicweb-nosylist >=0.5.0
    - pygments
    - cubicweb-vcsfile >=2
    - cubicweb-narval >=4.1
    - cubicweb-jqplot >=0.1.2
    - cubicweb-file

test:
  # Python imports
  imports:
    - apycot
    - apycotlib

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://www.logilab.org/project/apycot
  license: GPL
  summary: 'Continuous testing / integration tool for the CubicWeb framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
