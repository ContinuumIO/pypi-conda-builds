package:
  name: authbwc
  version: "0.2.3"

source:
  fn: AuthBWC-0.2.3.zip
  url: https://pypi.python.org/packages/source/A/AuthBWC/AuthBWC-0.2.3.zip
  md5: 46042f9bd46487f67b167953511b2364
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - authbwc = authbwc:main
    #
    # Would create an entry point called authbwc that calls authbwc.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - commonbwc >=0.1.0
    - webgrid >=0.1.6
    - blazeweb >=0.3.1
    - sqlalchemybwc
    - templatingbwc >=0.3.0
    - basebwa

  run:
    - python
    - setuptools
    - commonbwc >=0.1.0
    - webgrid >=0.1.6
    - blazeweb >=0.3.1
    - sqlalchemybwc
    - templatingbwc >=0.3.0
    - basebwa

test:
  # Python imports
  imports:
    - authbwc
    - authbwc.config
    - authbwc.helpers
    - authbwc.lib
    - authbwc.model
    - authbwc.tasks

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://bitbucket.org/blazelibs/authbwc/
  license: BSD License
  summary: 'A user authentication and authorization component for the BlazeWeb framework'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
