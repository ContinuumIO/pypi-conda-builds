package:
  name: eea.daviz
  version: "9.3"

source:
  fn: eea.daviz-9.3.zip
  url: https://pypi.python.org/packages/source/e/eea.daviz/eea.daviz-9.3.zip
  md5: 8b3708a126f48decef767c1ae255adad
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - eea.daviz = eea.daviz:main
    #
    # Would create an entry point called eea.daviz that calls eea.daviz.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - eea.app.visualization >6.9
    - eea.forms >=5.2
    - eea.sparql >=2.4
    - eea.exhibit >6.9
    - eea.googlecharts >6.9
    - zc.dict
    - products.datagridfield

  run:
    - python
    - setuptools
    - setuptools
    - eea.app.visualization >6.9
    - eea.forms >=5.2
    - eea.sparql >=2.4
    - eea.exhibit >6.9
    - eea.googlecharts >6.9
    - zc.dict
    - products.datagridfield

test:
  # Python imports
  imports:
    - eea
    - eea.daviz
    - eea.daviz.browser
    - eea.daviz.browser.app
    - eea.daviz.content
    - eea.daviz.controlpanel
    - eea.daviz.data
    - eea.daviz.events
    - eea.daviz.relations
    - eea.daviz.subtypes
    - eea.daviz.tests
    - eea.daviz.upgrades

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://eea.github.com/docs/eea.daviz
  license: GNU General Public License (GPL) or Mozilla Public License 1.0 (MPL)
  summary: 'EEA DaViz is a plone product which uses Exhibit and Google Charts API to easily create data visualizations based on data from csv/tsv, JSON, SPARQL endpoints and more.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
