package:
  name: hl.pas.samlplugin
  version: "1.3"

source:
  fn: hl.pas.samlplugin-1.3.tar.gz
  url: https://pypi.python.org/packages/source/h/hl.pas.samlplugin/hl.pas.samlplugin-1.3.tar.gz
  md5: 878ce97b339dbb7c9c2980542d7ce3be
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - hl.pas.samlplugin = hl.pas.samlplugin:main
    #
    # Would create an entry point called hl.pas.samlplugin that calls hl.pas.samlplugin.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - zope.app.container
    - products.pluggableauthservice
    - requests
    - m2crypto

  run:
    - python
    - setuptools
    - setuptools
    - zope.app.container
    - products.pluggableauthservice
    - requests
    - m2crypto

test:
  # Python imports
  imports:
    - hl
    - hl.pas
    - hl.pas.samlplugin
    - hl.pas.samlplugin.browser
    - hl.pas.samlplugin.saml2
    - hl.pas.samlplugin.saml2.attributemaps
    - hl.pas.samlplugin.saml2.authn_context
    - hl.pas.samlplugin.saml2.entity_category
    - hl.pas.samlplugin.saml2.extension
    - hl.pas.samlplugin.saml2.profile
    - hl.pas.samlplugin.saml2.schema
    - hl.pas.samlplugin.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/Haufe-Lexware/hl.pas.samlplugin
  license: Apache Software License
  summary: 'SAML2 authentication for Zope'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
