package:
  name: cpucoolerchart
  version: "0.1.dev2"

source:
  fn: cpucoolerchart-0.1.dev2.tar.gz
  url: https://pypi.python.org/packages/source/c/cpucoolerchart/cpucoolerchart-0.1.dev2.tar.gz
  md5: ac10fe215f92bf9f390f46612393e16a
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cpucoolerchart = cpucoolerchart:main
    #
    # Would create an entry point called cpucoolerchart that calls cpucoolerchart.main()

    - cpucoolerchart = cpucoolerchart.command:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - lxml ==3.3.0
    - prettytable ==0.7.2
    - flask ==0.10.1
    - flask-sqlalchemy ==1.0
    - flask-cache ==0.12
    - flask-script ==0.6.6
    - redis ==2.9.0
    - rq ==0.3.13
    - python-dateutil ==2.2

  run:
    - python
    - lxml ==3.3.0
    - prettytable ==0.7.2
    - flask ==0.10.1
    - flask-sqlalchemy ==1.0
    - flask-cache ==0.12
    - flask-script ==0.6.6
    - redis ==2.9.0
    - rq ==0.3.13
    - python-dateutil ==2.2

test:
  # Python imports
  imports:
    - cpucoolerchart

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - cpucoolerchart --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/clee704/cpucoolerchart
  license: MIT License
  summary: 'CPU cooler performance and price database'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
