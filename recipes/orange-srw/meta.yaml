package:
  name: orange-srw
  version: "1.0"

source:
  fn: Orange-SRW-1.0.tar.gz
  url: https://pypi.python.org/packages/source/O/Orange-SRW/Orange-SRW-1.0.tar.gz
  md5: cadc995e93efbe5c9cb470ef06a655eb
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - orange-srw = orange-srw:main
    #
    # Would create an entry point called orange-srw that calls orange-srw.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools

  run:
    - python
    - setuptools
    - setuptools

test:
  # Python imports
  imports:
    - orangecontrib
    - orangecontrib.srw
    - orangecontrib.srw.drivers
    - orangecontrib.srw.drivers.srw
    - orangecontrib.srw.util
    - orangecontrib.srw.widgets
    - orangecontrib.srw.widgets.drivers
    - orangecontrib.srw.widgets.optical_elements
    - orangecontrib.srw.widgets.source

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://orange.biolab.si/
  license: GPLv3
  summary: 'SRW frontend, Front end to SRW'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
