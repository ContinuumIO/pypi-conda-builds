package:
  name: lacli
  version: "0.2.6.1"

source:
  fn: lacli-0.2.6.1.tar.gz
  url: https://pypi.python.org/packages/source/l/lacli/lacli-0.2.6.1.tar.gz
  md5: 280ea6ae692ee52e4b3febbb044e976c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - lacli = lacli:main
    #
    # Would create an entry point called lacli that calls lacli.main()

    - lacli=lacli.main:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - boto >=2.14,<3
    - python-dateutil >=2.1,<3
    - filechunkio >=1.5
    - docopt >=0.6.1,<0.7
    - progressbar >=2.3,<3
    - logutils >=0.3.3,<0.4
    - requests >=2.0.0,<3
    - pycrypto >=2.6,<2.7
    - pyaml >=13.07,<14
    - twisted >=13.2,<14
    - crochet >=1.0.0,<2
    - treq >=0.2.0,<0.3
    - pyopenssl >=0.13,<1
    - thrift >=0.9,<1
    - blessed >=1.8.3,<2
    - lacore >=0.1.3.1,<2
    - psutil >=2.1,<3

  run:
    - python
    - setuptools
    - boto >=2.14,<3
    - python-dateutil >=2.1,<3
    - filechunkio >=1.5
    - docopt >=0.6.1,<0.7
    - progressbar >=2.3,<3
    - logutils >=0.3.3,<0.4
    - requests >=2.0.0,<3
    - pycrypto >=2.6,<2.7
    - pyaml >=13.07,<14
    - twisted >=13.2,<14
    - crochet >=1.0.0,<2
    - treq >=0.2.0,<0.3
    - pyopenssl >=0.13,<1
    - thrift >=0.9,<1
    - blessed >=1.8.3,<2
    - lacore >=0.1.3.1,<2
    - psutil >=2.1,<3

test:
  # Python imports
  imports:
    - lacli
    - lacli.archive
    - lacli.server
    - lacli.server.cli
    - lacli.server.cli.ClientInterface
    - lacli.server.interface
    - lacli.server.interface.ClientInterface
    - lacli.source

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - lacli --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/longaccess/longaccess-client/
  license: Apache Software License
  summary: 'The Long Access client'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
