package:
  name: djaodjin-saas
  version: "0.1.6"

source:
  fn: djaodjin-saas-0.1.6.tar.gz
  url: https://pypi.python.org/packages/source/d/djaodjin-saas/djaodjin-saas-0.1.6.tar.gz
  md5: 3e3e0dec31f9f60b518579ebf43525e2
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - djaodjin-saas = djaodjin-saas:main
    #
    # Would create an entry point called djaodjin-saas that calls djaodjin-saas.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - django >=1.6
    - django-durationfield >=0.5
    - djangorestframework >=2.3
    - markdown >=2.4
    - stripe >=1.14.0
    - python-dateutil >=2.2
    - django-extra-views >=0.6.5
    - django-countries >=2.1.2
    - django-localflavor >=1.0

  run:
    - python
    - django >=1.6
    - django-durationfield >=0.5
    - djangorestframework >=2.3
    - markdown >=2.4
    - stripe >=1.14.0
    - python-dateutil >=2.2
    - django-extra-views >=0.6.5
    - django-countries >=2.1.2
    - django-localflavor >=1.0

test:
  # Python imports
  imports:
    - saas
    - saas.api
    - saas.backends
    - saas.management.commands
    - saas.managers
    - saas.templatetags
    - saas.urls
    - saas.urls.api
    - saas.urls.api.provider
    - saas.urls.api.subscriber
    - saas.urls.billing
    - saas.urls.provider
    - saas.urls.subscriber
    - saas.views

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/djaodjin/djaodjin-saas/
  license: BSD
  summary: 'DjaoDjin SaaS implementation'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
