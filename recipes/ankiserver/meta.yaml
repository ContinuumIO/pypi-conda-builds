package:
  name: ankiserver
  version: "2.0.5"

source:
  fn: AnkiServer-2.0.5.tar.gz
  url: https://pypi.python.org/packages/source/A/AnkiServer/AnkiServer-2.0.5.tar.gz
  md5: 6ec91b6b9a0b2e8a906b651c8248113a
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ankiserver = ankiserver:main
    #
    # Would create an entry point called ankiserver that calls ankiserver.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pastedeploy >=1.3.2
    - pastescript >=1.7.3
    - webob >=0.9.7
    - sqlalchemy >=0.6.3

  run:
    - python
    - setuptools
    - pastedeploy >=1.3.2
    - pastescript >=1.7.3
    - webob >=0.9.7
    - sqlalchemy >=0.6.3

test:
  # Python imports
  imports:
    - AnkiServer
    - AnkiServer.apps
    - ankiserver

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/dsnopek/anki-sync-server
  license: GNU Affero General Public License v3 or later (AGPLv3+)
  summary: 'A personal Anki sync server (so you can sync against your own server rather than AnkiWeb)'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
