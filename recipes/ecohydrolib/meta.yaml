package:
  name: ecohydrolib
  version: "1.24"

source:
  fn: ecohydrolib-1.24.tar.gz
  url: https://pypi.python.org/packages/source/e/ecohydrolib/ecohydrolib-1.24.tar.gz
  md5: 31acb60d5d1ee7b87cf90157d60e5157
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ecohydrolib = ecohydrolib:main
    #
    # Would create an entry point called ecohydrolib that calls ecohydrolib.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pyproj
    - numpy
    - owslib >=0.8.12
    - oset
    - httplib2
    - shapely

  run:
    - python
    - pyproj
    - numpy
    - owslib >=0.8.12
    - oset
    - httplib2
    - shapely

test:
  # Python imports
  imports:
    - ecohydrolib
    - ecohydrolib.climatedata
    - ecohydrolib.command
    - ecohydrolib.geosciaus
    - ecohydrolib.hydro1k
    - ecohydrolib.nhdplus2
    - ecohydrolib.nlcd
    - ecohydrolib.solim
    - ecohydrolib.spatialdata
    - ecohydrolib.ssurgo
    - ecohydrolib.tests
    - ecohydrolib.wcs4dem

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/selimnairb/EcohydroLib
  license: BSD License
  summary: 'Libraries and command-line scripts for performing ecohydrology data preparation workflows.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
