package:
  name: slc.calendarfetcher
  version: "0.1b5"

source:
  fn: slc.calendarfetcher-0.1b5.tar.gz
  url: https://pypi.python.org/packages/source/s/slc.calendarfetcher/slc.calendarfetcher-0.1b5.tar.gz
  md5: d95eb186f2b2d85cb2bd3c6c6c9418d3
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - slc.calendarfetcher = slc.calendarfetcher:main
    #
    # Would create an entry point called slc.calendarfetcher that calls slc.calendarfetcher.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - z3c.form ==1.9.0
    - plone.z3cform <=0.6
    - dateable.chronos
    - p4a.subtyper
    - p4a.calendar ==1.2
    - p4a.plonecalendar
    - products.calendaring

  run:
    - python
    - setuptools
    - setuptools
    - z3c.form ==1.9.0
    - plone.z3cform <=0.6
    - dateable.chronos
    - p4a.subtyper
    - p4a.calendar ==1.2
    - p4a.plonecalendar
    - products.calendaring

test:
  # Python imports
  imports:
    - slc
    - slc.calendarfetcher
    - slc.calendarfetcher.browser

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.plone.org/svn/collective/
  license: GPL
  summary: 'slc.calendarfetcher will fetch and import calendars from the ICS URLs you give it.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
