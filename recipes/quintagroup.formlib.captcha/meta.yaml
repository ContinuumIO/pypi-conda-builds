package:
  name: quintagroup.formlib.captcha
  version: "1.4.3"

source:
  fn: quintagroup.formlib.captcha-1.4.3.zip
  url: https://pypi.python.org/packages/source/q/quintagroup.formlib.captcha/quintagroup.formlib.captcha-1.4.3.zip
  md5: 319722056a471ad056867b011b8c409c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - quintagroup.formlib.captcha = quintagroup.formlib.captcha:main
    #
    # Would create an entry point called quintagroup.formlib.captcha that calls quintagroup.formlib.captcha.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - quintagroup.captcha.core >=0.4.3
    - zope.app.form
    - zope.formlib

  run:
    - python
    - setuptools
    - setuptools
    - quintagroup.captcha.core >=0.4.3
    - zope.app.form
    - zope.formlib

test:
  # Python imports
  imports:
    - quintagroup
    - quintagroup.formlib
    - quintagroup.formlib.captcha
    - quintagroup.formlib.captcha.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.quintagroup.com/products/quintagroup.formlib.captcha
  license: GNU General Public License (GPL)
  summary: 'Captcha field for formlib based on quintagroup.captcha.core package'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
