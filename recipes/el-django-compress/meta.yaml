package:
  name: el-django-compress
  version: "1.0.3"

source:
  fn: el-django-compress-1.0.3.zip
  url: https://pypi.python.org/packages/source/e/el-django-compress/el-django-compress-1.0.3.zip
  md5: d50aed276788a7c70e5d7df29bec6aef
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - el-django-compress = el-django-compress:main
    #
    # Would create an entry point called el-django-compress that calls el-django-compress.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python

  run:
    - python

test:
  # Python imports
  imports:
    - compress
    - compress.conf
    - compress.filters
    - compress.filters.csstidy
    - compress.filters.csstidy_python
    - compress.filters.jsmin
    - compress.filters.yui
    - compress.management
    - compress.management.commands
    - compress.templatetags
    - compress.versioning
    - compress.versioning.hash
    - compress.versioning.mtime

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://code.google.com/p/django-compress/
  license: MIT License
  summary: 'django-compress provides an automated system for compressing CSS and JavaScript files, fixed strange doc file'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
