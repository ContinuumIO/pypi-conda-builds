package:
  name: fuel-plugin-builder
  version: "2.0.1"

source:
  fn: fuel-plugin-builder-2.0.1.tar.gz
  url: https://pypi.python.org/packages/source/f/fuel-plugin-builder/fuel-plugin-builder-2.0.1.tar.gz
  md5: d0dbf28b02fbc3110859ac6e5ec498c1
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - fuel-plugin-builder = fuel-plugin-builder:main
    #
    # Would create an entry point called fuel-plugin-builder that calls fuel-plugin-builder.main()

    - fpb = fuel_plugin_builder.cli:main
    - fuel-plugin-builder = fuel_plugin_builder.cli:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - argparse ==1.2.1
    - six >=1.5.2
    - mako ==0.9.1
    - pyyaml ==3.10
    - jsonschema ==2.4.0

  run:
    - python
    - argparse ==1.2.1
    - six >=1.5.2
    - mako ==0.9.1
    - pyyaml ==3.10
    - jsonschema ==2.4.0

test:
  # Python imports
  imports:
    - fuel_plugin_builder
    - fuel_plugin_builder.actions
    - fuel_plugin_builder.tests
    - fuel_plugin_builder.validators
    - fuel_plugin_builder.validators.schemas

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - fpb --help
    - fuel-plugin-builder --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://mirantis.com
  license: Apache Software License
  summary: 'Helps to create and build fuel plugins'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
