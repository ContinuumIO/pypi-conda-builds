package:
  name: zc.sourcefactory
  version: "1.0.0a1"

source:
  fn: zc.sourcefactory-1.0.0a1.zip
  url: https://pypi.python.org/packages/source/z/zc.sourcefactory/zc.sourcefactory-1.0.0a1.zip
  md5: d67e9e47d00417715b52b9978ef3e338
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - zc.sourcefactory = zc.sourcefactory:main
    #
    # Would create an entry point called zc.sourcefactory that calls zc.sourcefactory.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - zodb
    - persistent
    - setuptools
    - zope.intid
    - zope.browser
    - zope.component
    - zope.dublincore
    - zope.interface
    - zope.proxy
    - zope.publisher
    - zope.schema

  run:
    - python
    - zodb
    - persistent
    - setuptools
    - zope.intid
    - zope.browser
    - zope.component
    - zope.dublincore
    - zope.interface
    - zope.proxy
    - zope.publisher
    - zope.schema

test:
  # Python imports
  imports:
    - zc
    - zc.sourcefactory
    - zc.sourcefactory.browser

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/zc.sourcefactory
  license: Zope Public License
  summary: 'An easy way to create custom Zope 3 sources.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
