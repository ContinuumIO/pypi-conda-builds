package:
  name: django-tango
  version: "0.7.1"

source:
  fn: django-tango-0.7.1.tar.gz
  url: https://pypi.python.org/packages/source/d/django-tango/django-tango-0.7.1.tar.gz
  md5: bed2e300565a55fce8adccb68bc3b336
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-tango = django-tango:main
    #
    # Would create an entry point called django-tango that calls django-tango.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - vobject >=0.8.1c
    - tango-shared-core >=0.7
    - tango-capo >=0.2
    - tango-comments >=0.5
    - tango-articles >=0.4
    - tango-contact-manager >=0.7
    - tango-happenings >=0.7.1
    - tango-photos >=0.2

  run:
    - python
    - vobject >=0.8.1c
    - tango-shared-core >=0.7
    - tango-capo >=0.2
    - tango-comments >=0.5
    - tango-articles >=0.4
    - tango-contact-manager >=0.7
    - tango-happenings >=0.7.1
    - tango-photos >=0.2

test:
  # Python imports
  imports:
    - autotagger
    - tango_user
    - tango_user.management
    - tango_user.management.commands
    - tango_user.templatetags
    - video
    - video.templatetags

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/tBaxter/Tango
  license: MIT License
  summary: 'Faster, simpler Django content management.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
