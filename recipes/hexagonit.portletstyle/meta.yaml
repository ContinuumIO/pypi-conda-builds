package:
  name: hexagonit.portletstyle
  version: "1.3.2"

source:
  fn: hexagonit.portletstyle-1.3.2.zip
  url: https://pypi.python.org/packages/source/h/hexagonit.portletstyle/hexagonit.portletstyle-1.3.2.zip
  md5: edd915e5b377e42e43078abb41ce1e40
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - hexagonit.portletstyle = hexagonit.portletstyle:main
    #
    # Would create an entry point called hexagonit.portletstyle that calls hexagonit.portletstyle.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - collective.monkeypatcher
    - manuel
    - mock
    - plone.app.registry
    - plone.app.testing
    - plone.app.z3cform
    - plone.browserlayer
    - plone.portlet.collection
    - plone.portlet.static
    - setuptools
    - unittest2
    - z3c.jbot
    - zope.i18nmessageid

  run:
    - python
    - setuptools
    - collective.monkeypatcher
    - manuel
    - mock
    - plone.app.registry
    - plone.app.testing
    - plone.app.z3cform
    - plone.browserlayer
    - plone.portlet.collection
    - plone.portlet.static
    - setuptools
    - unittest2
    - z3c.jbot
    - zope.i18nmessageid

test:
  # Python imports
  imports:
    - hexagonit
    - hexagonit.portletstyle
    - hexagonit.portletstyle.browser
    - hexagonit.portletstyle.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://hexagonit.fi
  license: BSD
  summary: 'Assign a CSS style to a portlet'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
