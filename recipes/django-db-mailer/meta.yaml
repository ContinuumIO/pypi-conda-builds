package:
  name: django-db-mailer
  version: "2.2.b1"

source:
  fn: django-db-mailer-2.2.b1.tar.gz
  url: https://pypi.python.org/packages/source/d/django-db-mailer/django-db-mailer-2.2.b1.tar.gz
  md5: 5c4725ec38253b726a4c668af1f0e539
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-db-mailer = django-db-mailer:main
    #
    # Would create an entry point called django-db-mailer that calls django-db-mailer.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools

  run:
    - python
    - setuptools

test:
  # Python imports
  imports:
    - dbmail
    - dbmail.backends
    - dbmail.management
    - dbmail.management.commands
    - dbmail.migrations
    - dbmail.providers
    - dbmail.providers.boxcar
    - dbmail.providers.nexmo
    - dbmail.providers.parse_com
    - dbmail.providers.prowl
    - dbmail.providers.pubnub
    - dbmail.providers.pushover
    - dbmail.south_migrations
    - docs

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/LPgenerator/django-db-mailer/
  license: GNU General Public License (GPL)
  summary: 'Django module to easily send emails using django templates stored on database.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
