package:
  name: collective.pfg.soup
  version: "1.6"

source:
  fn: collective.pfg.soup-1.6.zip
  url: https://pypi.python.org/packages/source/c/collective.pfg.soup/collective.pfg.soup-1.6.zip
  md5: 1bd01137795247113ce5c3b6a200677c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - collective.pfg.soup = collective.pfg.soup:main
    #
    # Would create an entry point called collective.pfg.soup that calls collective.pfg.soup.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - plone
    - products.ploneformgen
    - collective.js.datatables
    - souper.plone
    - bda.calendar.base

  run:
    - python
    - setuptools
    - setuptools
    - plone
    - products.ploneformgen
    - collective.js.datatables
    - souper.plone
    - bda.calendar.base

test:
  # Python imports
  imports:
    - collective
    - collective.pfg
    - collective.pfg.soup
    - collective.pfg.soup.browser

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://pypi.python.org/pypi/collective.pfg.soup
  license: GNU General Public License (GPL)
  summary: 'PloneFormGen Adapter: store, show/search, edit, csv-export, based on souper.soup'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
