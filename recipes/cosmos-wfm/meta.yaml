package:
  name: cosmos-wfm
  version: "1.0.16"

source:
  fn: cosmos-wfm-1.0.16.tar.gz
  url: https://pypi.python.org/packages/source/c/cosmos-wfm/cosmos-wfm-1.0.16.tar.gz
  md5: 04523ad0caf193826b2e7e4227e8e4f1
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cosmos-wfm = cosmos-wfm:main
    #
    # Would create an entry point called cosmos-wfm that calls cosmos-wfm.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - gntp
    - psprofile
    - flask
    - blinker
    - sqlalchemy
    - flask-sqlalchemy
    - networkx
    - configparser
    - enum34
    - flask-failsafe
    - six
    - sqlalchemy_utils

  run:
    - python
    - gntp
    - psprofile
    - flask
    - blinker
    - sqlalchemy
    - flask-sqlalchemy
    - networkx
    - configparser
    - enum34
    - flask-failsafe
    - six
    - sqlalchemy_utils

test:
  # Python imports
  imports:
    - cosmos

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://cosmos.hms.harvard.edu/
  license: GPLv3
  summary: 'Workflow Management System'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
