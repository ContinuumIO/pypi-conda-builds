package:
  name: django-hyperadmin
  version: "0.10.0"

source:
  fn: django-hyperadmin-0.10.0.tar.gz
  url: https://pypi.python.org/packages/source/d/django-hyperadmin/django-hyperadmin-0.10.0.tar.gz
  md5: c2c83146c43a60c9f7fa9eeadbc05142
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-hyperadmin = django-hyperadmin:main
    #
    # Would create an entry point called django-hyperadmin that calls django-hyperadmin.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - mimeparse

  run:
    - python
    - mimeparse

test:
  # Python imports
  imports:
    - hyperadmin
    - hyperadmin.clients
    - hyperadmin.clients.views
    - hyperadmin.contrib
    - hyperadmin.contrib.apikey
    - hyperadmin.contrib.apikey.tests
    - hyperadmin.mediatypes
    - hyperadmin.resources
    - hyperadmin.resources.auth
    - hyperadmin.resources.crud
    - hyperadmin.resources.directory
    - hyperadmin.resources.models
    - hyperadmin.resources.storages
    - hyperadmin.resources.wizard
    - hyperadmin.templatetags
    - hyperadmin.tests
    - hyperadmin.tests.mediatypes

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/webcube/django-hyperadmin
  license: BSD License
  summary: 'A hypermedia API framework for Django.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
