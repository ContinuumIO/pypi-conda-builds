package:
  name: raspberry-pi-io
  version: "0.0.2"

source:
  fn: Raspberry-Pi-IO-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/R/Raspberry-Pi-IO/Raspberry-Pi-IO-0.0.2.tar.gz
  md5: c1196f5fa8c3b6e411ff2c2f0ee16393
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - raspberry-pi-io = raspberry-pi-io:main
    #
    # Would create an entry point called raspberry-pi-io that calls raspberry-pi-io.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - pika ==0.9.14
    - requests ==2.6.0

  run:
    - python
    - pika ==0.9.14
    - requests ==2.6.0

test:
  # Python imports
  imports:
    - raspberry_pi_io

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/exitcodezero/raspberry-pi-io
  license: LICENSE.txt
  summary: 'A Python service for remotely controlling GPIO.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
