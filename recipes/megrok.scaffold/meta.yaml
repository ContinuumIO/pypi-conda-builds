package:
  name: megrok.scaffold
  version: "0.3"

source:
  fn: megrok.scaffold-0.3.tar.gz
  url: https://pypi.python.org/packages/source/m/megrok.scaffold/megrok.scaffold-0.3.tar.gz
  md5: 7d0017d8eea9fcd8ca3540f472a070b5
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - megrok.scaffold = megrok.scaffold:main
    #
    # Would create an entry point called megrok.scaffold that calls megrok.scaffold.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - martian
    - grokcore.component
    - grokcore.security
    - grokcore.view >=1.12
    - grokcore.formlib
    - z3c.table >=0.8

  run:
    - python
    - setuptools
    - setuptools
    - martian
    - grokcore.component
    - grokcore.security
    - grokcore.view >=1.12
    - grokcore.formlib
    - z3c.table >=0.8

test:
  # Python imports
  imports:
    - megrok
    - megrok.scaffold
    - megrok.scaffold.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/megrok.scaffold
  license: GPL
  summary: 'Auto-generate CRUD forms for a given domain class.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
