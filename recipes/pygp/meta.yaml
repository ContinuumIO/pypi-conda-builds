package:
  name: pygp
  version: "1.1.10"

source:
  fn: pygp-1.1.10.tar.gz
  url: https://pypi.python.org/packages/source/p/pygp/pygp-1.1.10.tar.gz
  md5: b2cc0c705227a7f1f1ca49485fd73272
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - pygp = pygp:main
    #
    # Would create an entry point called pygp that calls pygp.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.7.1
    - scipy >=0.12.0
    - matplotlib >=1.2

  run:
    - python
    - numpy >=1.7.1
    - scipy >=0.12.0
    - matplotlib >=1.2

test:
  # Python imports
  imports:
    - pygp
    - pygp.covar
    - pygp.demo
    - pygp.gp
    - pygp.likelihood
    - pygp.linalg
    - pygp.optimize
    - pygp.plot
    - pygp.priors
    - pygp.util

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/PMBio/pygp
  license: GPLv2
  summary: '\nPython package for Gaussian process regression in python\n========================================================\n\ndemo_gpr.py explains how to perform basic regression tasks.\ndemo_gpr_robust.py shows how to apply EP for robust Gaussian process regression.\n\ngpr.py Basic gp regression package\ngpr_ep.py GP regression with EP likelihood models\n\ncovar: covariance functions'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
