package:
  name: collective.venue
  version: "1.1"

source:
  fn: collective.venue-1.1.tar.gz
  url: https://pypi.python.org/packages/source/c/collective.venue/collective.venue-1.1.tar.gz
  md5: d7c413ba6f7a092bbc259f4631ddf71f
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - collective.venue = collective.venue:main
    #
    # Would create an entry point called collective.venue that calls collective.venue.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - collective.address
    - collective.geolocationbehavior
    - plone.app.content
    - plone.app.dexterity
    - plone.app.event
    - plone.browserlayer
    - plone.event
    - plone.formwidget.geolocation
    - products.cmfplone
    - products.genericsetup
    - collective.js.leaflet
    - z3c.form
    - z3c.unconfigure

  run:
    - python
    - setuptools
    - setuptools
    - collective.address
    - collective.geolocationbehavior
    - plone.app.content
    - plone.app.dexterity
    - plone.app.event
    - plone.browserlayer
    - plone.event
    - plone.formwidget.geolocation
    - products.cmfplone
    - products.genericsetup
    - collective.js.leaflet
    - z3c.form
    - z3c.unconfigure

test:
  # Python imports
  imports:
    - collective
    - collective.venue
    - collective.venue.at
    - collective.venue.browser

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/collective/collective.venue
  license: GPL
  summary: 'Dexterity venue type for use with events.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
