package:
  name: modsdk
  version: "1.1.2"

source:
  fn: modsdk-1.1.2.tar.gz
  url: https://pypi.python.org/packages/source/m/modsdk/modsdk-1.1.2.tar.gz
  md5: f6016e918836a4a471364c23a59d94bc
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - modsdk = modsdk:main
    #
    # Would create an entry point called modsdk that calls modsdk.main()

    - modsdk = modsdk.webserver:run
    - modsdk-screenshot = modsdk.screenshot:run

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - rdflib >=3.4.0
    - whoosh >=2.4.1
    - pymongo >=2.5
    - pystache >=0.5.3
    - pillow >=2.4.0
    - tornado >=3.2
    - modcommon >=0.99.0

  run:
    - python
    - rdflib >=3.4.0
    - whoosh >=2.4.1
    - pymongo >=2.5
    - pystache >=0.5.3
    - pillow >=2.4.0
    - tornado >=3.2
    - modcommon >=0.99.0

test:
  # Python imports
  imports:
    - modsdk

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - modsdk --help
    - modsdk-screenshot --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/portalmod/mod-sdk
  license: GPLv3
  summary: 'MOD plugin SDK.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
