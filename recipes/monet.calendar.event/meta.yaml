package:
  name: monet.calendar.event
  version: "0.5.4"

source:
  fn: monet.calendar.event-0.5.4.zip
  url: https://pypi.python.org/packages/source/m/monet.calendar.event/monet.calendar.event-0.5.4.zip
  md5: d5b7ae0bbf35d8d44cd2a411231d70ff
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - monet.calendar.event = monet.calendar.event:main
    #
    # Would create an entry point called monet.calendar.event that calls monet.calendar.event.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - products.cmfplone >4.0b1
    - rt.calendarinandout >=1.2.0.dev0
    - archetypes.schemaextender
    - plone.app.blob

  run:
    - python
    - setuptools
    - setuptools
    - products.cmfplone >4.0b1
    - rt.calendarinandout >=1.2.0.dev0
    - archetypes.schemaextender
    - plone.app.blob

test:
  # Python imports
  imports:
    - monet
    - monet.calendar
    - monet.calendar.event
    - monet.calendar.event.browser
    - monet.calendar.event.content
    - monet.calendar.event.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://plone.org/products/monet.calendar.star
  license: GNU General Public License (GPL)
  summary: 'An advanced Event type for Plone with additional date fields and features like days exceptions and week days'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
