package:
  name: zato-common
  version: "2.0.3.5"

source:
  fn: zato-common-2.0.3.5.tar.gz
  url: https://pypi.python.org/packages/source/z/zato-common/zato-common-2.0.3.5.tar.gz
  md5: 768e026c4eda8ef6309a381835e20167
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - zato-common = zato-common:main
    #
    # Would create an entry point called zato-common that calls zato-common.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - alembic
    - anyjson
    - arrow
    - base32-crockford
    - boto
    - bzr
    - bunch
    - candv
    - concurrentloghandler
    - configobj
    - crontab
    - datadiff
    - dictalchemy
    - gevent
    - lxml
    - mock
    - nose
    - paodate
    - paste
    - pip
    - psutil
    - pycrypto
    - pyopenssl
    - pyparsing
    - python-dateutil
    - pytz
    - pyzmq
    - pyzmq-static
    - redis
    - requests
    - rsa
    - springpython
    - sqlalchemy
    - texttable

  run:
    - python
    - alembic
    - anyjson
    - arrow
    - base32-crockford
    - boto
    - bzr
    - bunch
    - candv
    - concurrentloghandler
    - configobj
    - crontab
    - datadiff
    - dictalchemy
    - gevent
    - lxml
    - mock
    - nose
    - paodate
    - paste
    - pip
    - psutil
    - pycrypto
    - pyopenssl
    - pyparsing
    - python-dateutil
    - pytz
    - pyzmq
    - pyzmq-static
    - redis
    - requests
    - rsa
    - springpython
    - sqlalchemy
    - texttable

test:
  # Python imports
  imports:
    - zato
    - zato.common
    - zato.common.odb
    - zato.common.pubsub
    - zato.common.test

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://zato.io
  license: GNU Lesser General Public License v3 (LGPLv3)
  summary: 'Constants and utils common across the whole of Zato ESB and app server (https://zato.io)'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
