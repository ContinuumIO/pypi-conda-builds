package:
  name: ftw.solr
  version: "1.4.2"

source:
  fn: ftw.solr-1.4.2.zip
  url: https://pypi.python.org/packages/source/f/ftw.solr/ftw.solr-1.4.2.zip
  md5: 0274501e61b3781fe75dfcd78fe0962f
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ftw.solr = ftw.solr:main
    #
    # Would create an entry point called ftw.solr that calls ftw.solr.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - collective.solr
    - ftw.upgrade
    - collective.monkeypatcher
    - plone.app.contentlisting
    - plone.app.search
    - requests

  run:
    - python
    - setuptools
    - setuptools
    - collective.solr
    - ftw.upgrade
    - collective.monkeypatcher
    - plone.app.contentlisting
    - plone.app.search
    - requests

test:
  # Python imports
  imports:
    - ftw
    - ftw.solr
    - ftw.solr.browser
    - ftw.solr.patches
    - ftw.solr.portlets
    - ftw.solr.tests
    - ftw.solr.upgrades

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/4teamwork/ftw.solr
  license: GPL2
  summary: 'Solr integration for Plone using collective.solr'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
