package:
  name: products.portaltaxonomy
  version: "0.5.0"

source:
  fn: Products.PortalTaxonomy-0.5.0.tar.gz
  url: https://pypi.python.org/packages/source/P/Products.PortalTaxonomy/Products.PortalTaxonomy-0.5.0.tar.gz
  md5: 5387cb40bc492c9abe2e201661ce7f1c
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - products.portaltaxonomy = products.portaltaxonomy:main
    #
    # Would create an entry point called products.portaltaxonomy that calls products.portaltaxonomy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools

  run:
    - python
    - setuptools
    - setuptools

test:
  # Python imports
  imports:
    - Products
    - Products.PortalTaxonomy
    - Products.PortalTaxonomy.Extensions
    - Products.PortalTaxonomy.content
    - Products.PortalTaxonomy.examples
    - Products.PortalTaxonomy.fields
    - Products.PortalTaxonomy.interfaces
    - Products.PortalTaxonomy.tests
    - Products.PortalTaxonomy.widgets

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://plone.org/products/portal_taxonomy
  license: GPL
  summary: 'Provides a way to create a treeish category structure and then limit the association of content instances to specific sections of the tree.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
