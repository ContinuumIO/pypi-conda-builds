package:
  name: twilio
  version: "4.4.0"

source:
  fn: twilio-4.4.0.tar.gz
  url: https://pypi.python.org/packages/source/t/twilio/twilio-4.4.0.tar.gz
  md5: 2d97db5f7a259001c81b18cf1da7de99
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - twilio = twilio:main
    #
    # Would create an entry point called twilio that calls twilio.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - httplib2 >=0.7
    - six
    - pytz
    - pysocks
    - pysocks
    - pysocks

  run:
    - python
    - httplib2 >=0.7
    - six
    - pytz
    - pysocks
    - pysocks
    - pysocks

test:
  # Python imports
  imports:
    - tests
    - tests.lookups
    - tests.monitor
    - tests.pricing
    - tests.task_router
    - twilio
    - twilio.compat
    - twilio.jwt
    - twilio.rest
    - twilio.rest.resources
    - twilio.rest.resources.lookups
    - twilio.rest.resources.monitor
    - twilio.rest.resources.pricing
    - twilio.rest.resources.sip
    - twilio.rest.resources.task_router
    - twilio.task_router

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/twilio/twilio-python/
  license: MIT License
  summary: 'Twilio API client and TwiML generator'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
