package:
  name: zgeo.recipe.openlayers
  version: "0.2"

source:
  fn: zgeo.recipe.openlayers-0.2.tar.gz
  url: https://pypi.python.org/packages/source/z/zgeo.recipe.openlayers/zgeo.recipe.openlayers-0.2.tar.gz
  md5: 62bb0b38acba81284236e67abefab6b4
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - zgeo.recipe.openlayers = zgeo.recipe.openlayers:main
    #
    # Would create an entry point called zgeo.recipe.openlayers that calls zgeo.recipe.openlayers.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - zc.buildout
    - hexagonit.recipe.download

  run:
    - python
    - setuptools
    - setuptools
    - zc.buildout
    - hexagonit.recipe.download

test:
  # Python imports
  imports:
    - zgeo
    - zgeo.recipe
    - zgeo.recipe.openlayers
    - zgeo.recipe.openlayers.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://bitbucket.org/sgillies/zgeorecipeopenlayers/
  license: GNU General Public License (GPL)
  summary: 'Build standard or custom profiles of the OpenLayers library'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
