package:
  name: jquery.pyproxy
  version: "0.5"

source:
  fn: jquery.pyproxy-0.5.zip
  url: https://pypi.python.org/packages/source/j/jquery.pyproxy/jquery.pyproxy-0.5.zip
  md5: df15b05ca6b021c9ca58c1dfa0305673
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - jquery.pyproxy = jquery.pyproxy:main
    #
    # Would create an entry point called jquery.pyproxy that calls jquery.pyproxy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - simplejson

  run:
    - python
    - setuptools
    - setuptools
    - simplejson

test:
  # Python imports
  imports:
    - jquery
    - jquery.pyproxy
    - jquery.pyproxy.plugins
    - jquery.pyproxy.samples
    - jquery.pyproxy.samples.django
    - jquery.pyproxy.samples.plone
    - jquery.pyproxy.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/zestsoftware/jquery.pyproxy
  license: GPL
  summary: 'A simple python egg and jquery plugin to easily use JQuery in Django/Plone/.. websites.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
