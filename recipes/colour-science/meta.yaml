package:
  name: colour-science
  version: "0.3.5"

source:
  fn: colour-science-0.3.5.tar.gz
  url: https://pypi.python.org/packages/source/c/colour-science/colour-science-0.3.5.tar.gz
  md5: 2ecb3513d5fbd53db5e085e94bd81c78
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - colour-science = colour-science:main
    #
    # Would create an entry point called colour-science that calls colour-science.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - numpy >=1.8.1

  run:
    - python
    - numpy >=1.8.1

test:
  # Python imports
  imports:
    - colour
    - colour.adaptation
    - colour.adaptation.dataset
    - colour.adaptation.tests
    - colour.algebra
    - colour.algebra.coordinates
    - colour.algebra.tests
    - colour.algebra.tests.tests_coordinates
    - colour.appearance
    - colour.appearance.tests
    - colour.characterisation
    - colour.characterisation.dataset
    - colour.characterisation.dataset.colour_checkers
    - colour.characterisation.tests
    - colour.colorimetry
    - colour.colorimetry.dataset
    - colour.colorimetry.dataset.illuminants
    - colour.colorimetry.dataset.light_sources
    - colour.colorimetry.tests
    - colour.constants
    - colour.corresponding
    - colour.corresponding.dataset
    - colour.corresponding.tests
    - colour.difference
    - colour.difference.tests
    - colour.io
    - colour.io.tests
    - colour.models
    - colour.models.dataset
    - colour.models.tests
    - colour.notation
    - colour.notation.dataset
    - colour.notation.dataset.munsell
    - colour.notation.tests
    - colour.phenomenons
    - colour.phenomenons.tests
    - colour.plotting
    - colour.plotting.dataset
    - colour.quality
    - colour.quality.dataset
    - colour.quality.tests
    - colour.recovery
    - colour.recovery.dataset
    - colour.recovery.tests
    - colour.temperature
    - colour.temperature.tests
    - colour.utilities
    - colour.utilities.tests
    - colour.volume
    - colour.volume.dataset
    - colour.volume.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/colour-science/colour
  license: UNKNOWN
  summary: u'Colour Science for Python'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
