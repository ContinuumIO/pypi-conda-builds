package:
  name: ploneorg.kudobounty
  version: "0.1"

source:
  fn: ploneorg.kudobounty-0.1.zip
  url: https://pypi.python.org/packages/source/p/ploneorg.kudobounty/ploneorg.kudobounty-0.1.zip
  md5: 3cb6af8c631993b27604eeddcdae2404
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - ploneorg.kudobounty = ploneorg.kudobounty:main
    #
    # Would create an entry point called ploneorg.kudobounty that calls ploneorg.kudobounty.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - products.ploneformgen
    - products.contentwellportlets
    - collective.portlet.collectionmultiview
    - plone.i18n

  run:
    - python
    - setuptools
    - setuptools
    - products.ploneformgen
    - products.contentwellportlets
    - collective.portlet.collectionmultiview
    - plone.i18n

test:
  # Python imports
  imports:
    - ploneorg
    - ploneorg.kudobounty
    - ploneorg.kudobounty.browser
    - ploneorg.kudobounty.content
    - ploneorg.kudobounty.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.quintagroup.com/products/
  license: GNU General Public License (GPL)
  summary: 'Bounty Program logo display mechanism for the plone.org'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
