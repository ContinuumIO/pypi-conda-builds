package:
  name: django-thermostat
  version: "3.3.2"

source:
  fn: django-thermostat-3.3.2.tar.gz
  url: https://pypi.python.org/packages/source/d/django-thermostat/django-thermostat-3.3.2.tar.gz
  md5: af902497a2d506af04154e26b92f40f7
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - django-thermostat = django-thermostat:main
    #
    # Would create an entry point called django-thermostat that calls django-thermostat.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django ==1.5
    - simplejson ==2.6.2
    - django-compressor ==1.3
    - pyparsing
    - django_thermometer
    - hautomation_restclient
    - requests
    - astral
    - pytz

  run:
    - python
    - django ==1.5
    - simplejson ==2.6.2
    - django-compressor ==1.3
    - pyparsing
    - django_thermometer
    - hautomation_restclient
    - requests
    - astral
    - pytz

test:
  # Python imports
  imports:
    - django_thermostat

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://blog.digitalhigh.es
  license: BSD License
  summary: 'A Django app cronothermostat. It is a Python Home Automation component'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
