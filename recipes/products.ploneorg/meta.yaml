package:
  name: products.ploneorg
  version: "1.4"

source:
  fn: Products.PloneOrg-1.4.zip
  url: https://pypi.python.org/packages/source/P/Products.PloneOrg/Products.PloneOrg-1.4.zip
  md5: 9a6ce934cda814f94ea8407c7599e260
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - products.ploneorg = products.ploneorg:main
    #
    # Would create an entry point called products.ploneorg that calls products.ploneorg.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - products.carousel
    - products.externalstorage
    - products.foundationmember
    - products.memcachedmanager
    - products.ploneformgen
    - products.plonehelpcenter
    - products.plonekeywordmanager
    - products.plonesoftwarecenter
    - products.ploneservicescenter
    - products.poi
    - products.redirectiontool
    - products.tinymce
    - products.contentmigration
    - collective.contentrules.mailtogroup
    - collective.contentrules.mailtolocalrole
    - collective.psc.blobstorage
    - collective.psc.externalstorage
    - collective.psc.mirroring
    - collective.recaptcha
    - plone.app.caching
    - plone.app.jquerytools
    - plone.memoize
    - ploneorg.kudobounty
    - python-memcached
    - roman
    - zc.beforestorage
    - zope.interface
    - zope.structuredtext

  run:
    - python
    - setuptools
    - products.carousel
    - products.externalstorage
    - products.foundationmember
    - products.memcachedmanager
    - products.ploneformgen
    - products.plonehelpcenter
    - products.plonekeywordmanager
    - products.plonesoftwarecenter
    - products.ploneservicescenter
    - products.poi
    - products.redirectiontool
    - products.tinymce
    - products.contentmigration
    - collective.contentrules.mailtogroup
    - collective.contentrules.mailtolocalrole
    - collective.psc.blobstorage
    - collective.psc.externalstorage
    - collective.psc.mirroring
    - collective.recaptcha
    - plone.app.caching
    - plone.app.jquerytools
    - plone.memoize
    - ploneorg.kudobounty
    - python-memcached
    - roman
    - zc.beforestorage
    - zope.interface
    - zope.structuredtext

test:
  # Python imports
  imports:
    - Products
    - Products.PloneOrg
    - Products.PloneOrg.browser

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://svn.plone.org/svn/plone/Products.PloneOrg
  license: GPL
  summary: 'Plone.org site policy package.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
