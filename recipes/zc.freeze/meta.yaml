package:
  name: zc.freeze
  version: "1.2"

source:
  fn: zc.freeze-1.2.tar.gz
  url: https://pypi.python.org/packages/source/z/zc.freeze/zc.freeze-1.2.tar.gz
  md5: f95e46bef5357fbd6d3f19410de14ecb
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - zc.freeze = zc.freeze:main
    #
    # Would create an entry point called zc.freeze that calls zc.freeze.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - pytz
    - rwproperty
    - setuptools
    - zc.copy >=1.1b
    - zodb3
    - zope.annotation
    - zope.cachedescriptors
    - zope.component
    - zope.event
    - zope.interface
    - zope.locking >=1.2.1

  run:
    - python
    - pytz
    - rwproperty
    - setuptools
    - zc.copy >=1.1b
    - zodb3
    - zope.annotation
    - zope.cachedescriptors
    - zope.component
    - zope.event
    - zope.interface
    - zope.locking >=1.2.1

test:
  # Python imports
  imports:
    - zc
    - zc.freeze

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://pypi.python.org/pypi/zc.freeze
  license: Zope Public License
  summary: 'Pattern for freezing objects'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
