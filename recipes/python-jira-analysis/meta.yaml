package:
  name: python-jira-analysis
  version: "0.0.2"

source:
  fn: python-jira-analysis-0.0.2.tar.gz
  url: https://pypi.python.org/packages/source/p/python-jira-analysis/python-jira-analysis-0.0.2.tar.gz
  md5: d6174fee555e92e537164f5361d17735
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - python-jira-analysis = python-jira-analysis:main
    #
    # Would create an entry point called python-jira-analysis that calls python-jira-analysis.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - django
    - jira-python
    - numpy
    - pytz
    - restkit
    - gspread
    - readline
    - python-dateutil

  run:
    - python
    - setuptools
    - django
    - jira-python
    - numpy
    - pytz
    - restkit
    - gspread
    - readline
    - python-dateutil

test:
  # Python imports
  imports:
    - jira_analysis
    - jira_analysis.analysis
    - jira_analysis.analysis.templatetags
    - jira_analysis.dataminer

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: ssh://hg@bitbucket.org/fikander/python-jira-analysis
  license: Apache Software License
  summary: 'JIRA dashboard tools for Kanban'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
