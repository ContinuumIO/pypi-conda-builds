package:
  name: plonesocial.auth.rpx
  version: "0.815"

source:
  fn: plonesocial.auth.rpx-0.815.tar.gz
  url: https://pypi.python.org/packages/source/p/plonesocial.auth.rpx/plonesocial.auth.rpx-0.815.tar.gz
  md5: 09898630dc73f2135adf54c0846ebc9d
#  patches:
   # List any patch files here
   # - fix.patch

build:
  preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - plonesocial.auth.rpx = plonesocial.auth.rpx:main
    #
    # Would create an entry point called plonesocial.auth.rpx that calls plonesocial.auth.rpx.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - setuptools
    - simplejson

  run:
    - python
    - setuptools
    - setuptools
    - simplejson

test:
  # Python imports
  imports:
    - plonesocial
    - plonesocial.auth
    - plonesocial.auth.rpx
    - plonesocial.auth.rpx.browser
    - plonesocial.auth.rpx.plugins
    - plonesocial.auth.rpx.portlets
    - plonesocial.auth.rpx.tests

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://comlounge.net/rpx/
  license: MIT License
  summary: 'An RPX connector for Plone, allowing users to login with Twitter, Google, Facebook etc.'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
